{"pageProps":{"titles":["Week 1 — Computer and Programming Basics","Week 2 — Types, Variables, Expressions, Functions","Sep 9-10 Problem Set 2","Week 3 —  Conditionals & Iteration","Sep 16-17 Problem Set","Week 4 —  print(), String methods, while loop","Python Style Guide","Sep 23-24 Problem Set","Week 5 —  Scope of variables, Lists & Tuples","Sep 30-Oct 1 Problem Set","Week 6 —  Immutability, Dictionary & Set","Oct 7-8 Problem Set","Week 7 —  Nested data structures, iterables, comprehensions","Week 8 —  Exceptions & File IO","Oct 21-22 Problem Set","Week 9 — Object oriented programming","Oct 28-29 — Problem Set","Week 10 — NumPy & Matplotlib","Nov 4-5 More on NumPy & Problems","Week 11 — Roots, Interpolation, Curve fitting","Week 12 — System of linear equations, Numerical Integration","Nov 18-19 — NumPy & Problem Set","Week 13 — Binary search, Sorting, Random numbers"],"slugs":["Lecture-1.2","Lecture-week2","_Sep09-problem-set","Lecture-week3","_Sep16-17-problem-set","Lecture-week4","style-guide","_Sep23-24-problem-set","Lecture-week5","_Sep30-Oct1-problem-set","Lecture-week6","_Oct7-8-problem-set","Lecture-week7","Lecture-week8","_Oct21-22_problem-set","Lecture-week9","_Oct28-29_problem-set","Lecture-week10","_Nov4-5_problem-set","Lecture-week11","Lecture-week12","_Nov18-19_problem-set","Lecture-week13"],"post":{"title":"Week 13 — Binary search, Sorting, Random numbers","slug":"Lecture-week13","content":"<h1>Binary search algorithm</h1>\n<p>We have seen examples which perform linear search using a loop:</p>\n<python>def linear_search(sequence, target):\n    for index in range(len(sequence)):\n        if sequence[index] == target:\n            return index\n\n    return -1  # Not found\n</python>\n<ul>\n<li>\n<p>Binary search is a faster algorithm to search an item in a sequence, provided the sequence is <i>sorted</i>.</p>\n</li>\n<li>\n<p>Binary search is similar to looking up a word in an English dictionary. Suppose we are looking for the word “doctor”</p>\n<ul>\n<li>We flip pages in the dictionary to find the “d” section but we may end up a little further to the right, say at “f” section.</li>\n<li>Then we flip pages to the left and may end up at “da” section.</li>\n<li>Then we flip pages to the right towards “do” and so on…</li>\n<li>At each step, we decrease the number of pages to search.</li>\n<li>The process works because the dictionary is sorted in alphabetical order.</li>\n</ul>\n</li>\n</ul>\n<h2>Visualize the binary search algorithm</h2>\n<div style=\"height: 2em;\"></div>\n<iframe width=\"100%\" height=\"603\" frameborder=\"0\" style=\"background-color: white;\" src=\"https://observablehq.com/embed/@d3vp/binary-search-algorithm?cells=view%2Cviewof+sequence%2Cviewof+item_to_search%2Cbuttons\"></iframe>\n<h2>Implementation</h2>\n<python>def binary_search(sequence, target):\n    low = 0\n    high = len(sequence) - 1\n\n    while low &#x3C;= high:\n        middle = (low + high) // 2  # floor division\n\n        if sequence[middle] &#x3C; target:\n            low = middle + 1\n        elif sequence[middle] > target:\n            high = middle -1\n        else:\n            return middle\n\n    return -1  # Not found\n</python>\n<ul>\n<li>In general, if the length of sequence is <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">N</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span></span></span></span></span>\n<ul>\n<li>Linear search takes time proportional to <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">N</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span></span></span></span></span></li>\n<li>Binary search takes time proportional to <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>l</mi><mi>o</mi><mi>g</mi><mo stretchy=\"false\">(</mo><mi>N</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">log(N)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mclose\">)</span></span></span></span></span></li>\n</ul>\n</li>\n</ul>\n<h1>Sorting algorithms</h1>\n<ul>\n<li>\n<p>Sorting algorithms sort a sequence into ascending or descending order.</p>\n<pre class=\"code\"><p>[1, 3, 2, 0] → [0, 1, 2, 3]\n[‘a’, ‘c’, ‘b’, ‘d’] →  [‘a’, ‘b’, ‘c’, ‘d’]</p></pre>\n</li>\n<li>\n<p>There are many sorting algorithms which have different speed and computer memory requirements.</p>\n</li>\n<li>\n<p>We will only cover two — Selection sort and Insertion sort</p>\n</li>\n</ul>\n<h2>Selection sort algorithm and implementation</h2>\n<p>Visualize algorithm: <a href=\"https://visualgo.net/en/sorting\">https://visualgo.net/en/sorting</a></p>\n<python>def selection_sort(seq):\n    N = len(seq)\n    \n    for i in range(N):\n        # Assume that element at index i is minimum\n        min_index = i\n        \n        # Find minimum of unsorted elements on right of i\n        for k in range(i+1, N):\n            if seq[k] &#x3C;= seq[min_index]:\n                min_index = k\n\n        # Swap elements at i and min_index\n        temp = seq[i]\n        seq[i] = seq[min_index]\n        seq[min_index] = temp\n    \n\nnums = [90, 75, 6, 97, 28, 64, 11, 87, 24, 37]\nselection_sort(nums)\nprint(nums)\n# [6, 11, 24, 28, 37, 64, 75, 87, 90, 97]\n</python>\n<p>Run <inline-code>selectionsort.py</inline-code> to see the sequence after each iteration.</p>\n<h2>Insertion sort algorithm and implementation</h2>\n<p>Visualize algorithm: <a href=\"https://visualgo.net/en/sorting\">https://visualgo.net/en/sorting</a></p>\n<p>First let’s look at a single step when we have a partially sorted list of size <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span> and want to move an element to have a bigger partially sorted list of size <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">k+1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.77777em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span></span>.</p>\n<python># partially sorted list\nsequence = [9, 22, 51, 63, 10, 79, 60, 75]\n\ni = 4\nkey = sequence[i]  # 10\n\n# Elements on the left of key are sorted.\n# We want to insert key on the left to keep the partial list sorted.\n\n# Shift elements one place to the right if they are greater than key. \nj = i - 1\nwhile(j >= 0 and sequence[j] > key):\n    sequence[j+1] = sequence[j]\n    j = j - 1\n\n# Moving key to index j+1\nsequence[j+1] = key\n\nprint(sequence)\n# [9, 10, 22, 51, 63, 79, 60, 75]\n</python>\n<p>Now, we can look at the final insertion sort implementation:</p>\n<python>def insertion_sort(seq):\n    N = len(seq)\n        \n    for i in range(1, N):\n        key = seq[i]\n        \n        # Elements on the left of key are already sorted.\n        # Shift them one place to the right if they are greater than key.\n        j = i - 1\n        while(j >= 0 and seq[j] > key):\n            seq[j+1] = seq[j]\n            j = j - 1\n        \n        # After shifting right, index j+1 is now available for key\n        seq[j+1] = key\n    \n\nnums = [90, 75, 24, 97, 28, 64, 11, 87, 6, 37]\ninsertion_sort(nums)\nprint(nums)\n# [6, 11, 24, 28, 37, 64, 75, 87, 90, 97]\n</python>\n<p>Run <inline-code>insertionsort.py</inline-code> to see the sequence after each iteration.</p>\n<h1>Random numbers and Monte Carlo methods</h1>\n<h2>Python random module</h2>\n<python>import random\n\n# A random float value in interval [0, 1)\nprint(random.random())\n\n# A random integer in interval [1, 10]\nprint(random.randint(1, 10))\n\nnums = [5, 4, 3, 2, 100, 1]\n\n# Randomly choose one item from mylist\nprint(random.choice(nums))  # 5\n\n# Randomly choose a list of 3 items from the list\n# An element in the list is chosen only once.\nprint(random.sample(nums, 3))  # [4, 5, 100]\n</python>\n<h2>Random numbers in NumPy</h2>\n<python>import numpy as np\n\n# All output numbers below will change each time your run the code.\n# But shape of arrays should remain same.\n\nx = np.random.random() # a random float in [0, 1)\nprint(x)  # 0.2894424639826647\n\n# array of 5 floats, each value in [0, 1)\nnums = np.random.random(5)\nprint(nums)\n# [0.564407   0.36047169 0.68956636 0.11457356 0.26594372]\n\n# 3x2 matrix, each float in [0, 1)\nmatrix = np.random.random((3, 2))\nprint(matrix)\n# [[0.573776   0.37419411]\n#  [0.23126045 0.32425979]\n#  [0.81373111 0.33039031]]\n\n\n# random integer  in [1, 5)\nx = np.random.randint(1, 5)\nprint(x)  # 2\n\n# random array of size 7, each integer in [1, 5)\nnums = np.random.randint(1, 5, 7)\nprint(nums)  # [4 4 1 3 3 1 4]\n\n# 3x2 matrix, each integer in [1, 10)\nmatrix = np.random.randint(1, 10, (3, 2))\nprint(matrix)\n# [[4 7]\n#  [4 6]\n#  [3 9]]\n\n\nnums = [5, 4, 3, 2, 100, 1]\n\n# choose a single number from list\nx = np.random.choice(nums)\nprint(x)  # 4\n\n# Choose 10 numbers from the list.\n# Each number is chosen independently, so numbers may repeat.\nmany = np.random.choice(nums, 10)\nprint(many)\n# [3 4 3 3 3 1 5 2 4 2]\n</python>\n<h2>Example: throwing an unbiased die</h2>\n<ul>\n<li>\n<p>Let’s throw an unbiased six-sided die and count the number of occurrences of 4.</p>\n</li>\n<li>\n<p>Unbiased or unweighted means that every integer from 1 to 6 is equally likely to roll. That is, the die is “fair”.</p>\n</li>\n</ul>\n<python>import random\n\noptions = [1, 2, 3, 4, 5, 6] # six faces of the die\nnum_rolls = 1000\n\nnum_fours = 0\nfor i in range(num_rolls):\n   roll = random.choice(options)\n   if roll == 4:\n      num_fours += 1\n\nprint(\"Frequency of 4:\", num_fours / num_rolls)\n</python>\n<p>Let’s do the same using NumPy:</p>\n<python>import numpy as np\n\noptions = [1, 2, 3, 4, 5, 6] # six faces of the die\nnum_rolls = 1000\n\nrolls = np.random.choice(options, num_rolls)\nfreq = rolls[rolls == 4].size / num_rolls\n\nprint(\"Frequency of 4:\", freq)\n</python>\n<h2>Example: throwing a biased or weighted die</h2>\n<ul>\n<li>Let’s throw a biased, or weighted, six-sided die where we favor number 3 over others by giving it more “weight” or probability.\n<ul>\n<li>Such a die would be called “unfair.”</li>\n</ul>\n</li>\n</ul>\n<python>import numpy as np\n\noptions = [1, 2, 3, 4, 5, 6]\n\n# Assign unequal weights or probabilties to each choices\n# Weights must sum to 1.0\nweights = [.1, .1, .5, .1, .1, .1 ]\n\nnum_rolls = 1000\n\nrolls = np.random.choice(options, num_rolls, p=weights)\nfreq = rolls[rolls == 3].size / num_rolls\n\nprint(\"Frequency of 3:\", freq)\n</python>\n<h2>Monte Carlo methods</h2>\n<ul>\n<li>\n<p>A type of algorithm that uses random sampling to solve problems.</p>\n</li>\n<li>\n<p>There are Monte Carlo methods for many different problems in physics, chemistry, AI and engineering.</p>\n<ul>\n<li><a href=\"https://en.wikipedia.org/wiki/Monte_Carlo_method#Engineering\">https://en.wikipedia.org/wiki/Monte_Carlo_method#Engineering</a></li>\n</ul>\n</li>\n<li>\n<p>We will see a simple case here with a Monte Carlo method for integration.</p>\n</li>\n</ul>\n<h2>Finding the area of a complex shape</h2>\n<ul>\n<li>\n<p>Let’s say we have a complex shape and we want to find its area.</p>\n</li>\n<li>\n<p>We will draw a rectangle around this shape, then sample random points inside the rectangle.</p>\n</li>\n<li>\n<p>Then we can estimate the area of the inner shape by multiplying the rectangle’s area by the fraction of points that land inside the shape.</p>\n</li>\n</ul>\n<div class=\"math math-display\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mstyle mathsize=\"0.9em\"><msub><mtext>area</mtext><mtext>shape</mtext></msub><mo>≈</mo><msub><mtext>area</mtext><mtext>rectangle</mtext></msub><mo>∗</mo><mfrac><msub><mtext>points</mtext><mtext>inside</mtext></msub><mrow><msub><mtext>points</mtext><mtext>inside</mtext></msub><mo>+</mo><msub><mtext>points</mtext><mtext>outside</mtext></msub></mrow></mfrac></mstyle></mrow><annotation encoding=\"application/x-tex\">\\small \\textup{area}_\\textup{shape} \\approx \\textup{area}_\\textup{rectangle} * \\frac{\\textup{points}_\\textup{inside}}{\\textup{points}_\\textup{inside} + \\textup{points}_\\textup{outside}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6864720000000001em;vertical-align:-0.25166400000000005em;\"></span><span class=\"mord sizing reset-size6 size5\"><span class=\"mord text\"><span class=\"mord textup\">area</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3129599999999999em;\"><span style=\"top:-2.45em;margin-right:0.05555555555555556em;\"><span class=\"pstrut\" style=\"height:2.6em;\"></span><span class=\"sizing reset-size5 size2 mtight\"><span class=\"mord text mtight\"><span class=\"mord textup mtight\">shape</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2796266666666667em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel sizing reset-size6 size5\">≈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6704160000000001em;vertical-align:-0.25166400000000005em;\"></span><span class=\"mord sizing reset-size6 size5\"><span class=\"mord text\"><span class=\"mord textup\">area</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3129599999999999em;\"><span style=\"top:-2.45em;margin-right:0.05555555555555556em;\"><span class=\"pstrut\" style=\"height:2.6em;\"></span><span class=\"sizing reset-size5 size2 mtight\"><span class=\"mord text mtight\"><span class=\"mord textup mtight\">rectangle</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2796266666666667em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin sizing reset-size6 size5\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.0627700000000004em;vertical-align:-0.8523960000000002em;\"></span><span class=\"mord sizing reset-size6 size5\"><span class=\"mopen nulldelimiter sizing reset-size5 size6\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3448600000000002em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord text\"><span class=\"mord textup\">points</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.20185333333333327em;\"><span style=\"top:-2.3388933333333335em;margin-right:0.05555555555555556em;\"><span class=\"pstrut\" style=\"height:2.6em;\"></span><span class=\"sizing reset-size5 size2 mtight\"><span class=\"mord text mtight\"><span class=\"mord textup mtight\">inside</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.26110666666666665em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord textup\">points</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.20185333333333327em;\"><span style=\"top:-2.3388933333333335em;margin-right:0.05555555555555556em;\"><span class=\"pstrut\" style=\"height:2.6em;\"></span><span class=\"sizing reset-size5 size2 mtight\"><span class=\"mord text mtight\"><span class=\"mord textup mtight\">outside</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.26110666666666665em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord text\"><span class=\"mord textup\">points</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.20185333333333327em;\"><span style=\"top:-2.3388933333333335em;margin-right:0.05555555555555556em;\"><span class=\"pstrut\" style=\"height:2.6em;\"></span><span class=\"sizing reset-size5 size2 mtight\"><span class=\"mord text mtight\"><span class=\"mord textup mtight\">inside</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.26110666666666665em;\"><span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9471066666666668em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter sizing reset-size5 size6\"></span></span></span></span></span></span></div>\n<h2>Monte Carlo integration</h2>\n<ul>\n<li>\n<p>We can use the above idea of finding area to numerically integrate a function.</p>\n</li>\n<li>\n<p>For a given function <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">f(x)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span></span></span></span></span>, we define a rectangle that bounds <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">f(x)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span></span></span></span></span> along X-axis between <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>a</mi><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[a, b]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">a</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">]</span></span></span></span></span> and along Y-axis between <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mn>0</mn><mo separator=\"true\">,</mo><mi>c</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[0, c]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mclose\">]</span></span></span></span></span>,  where</p>\n<div class=\"math math-display\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mstyle mathsize=\"0.9em\"><mi>c</mi><mo>></mo><mo>=</mo><munder><mo><mi>max</mi><mo>⁡</mo></mo><mrow><mi>x</mi><mi>ϵ</mi><mo stretchy=\"false\">(</mo><mi>a</mi><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow></munder><mi>f</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mstyle></mrow><annotation encoding=\"application/x-tex\">\\small c >= \\max_{x \\epsilon (a, b)} f(x)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5203800000000001em;vertical-align:-0.035190000000000006em;\"></span><span class=\"mord mathnormal sizing reset-size6 size5\">c</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel sizing reset-size6 size5\">></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.330183em;vertical-align:0em;\"></span><span class=\"mrel sizing reset-size6 size5\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.5144000000000002em;vertical-align:-0.8394000000000001em;\"></span><span class=\"mop op-limits sizing reset-size6 size5\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.43055999999999983em;\"><span style=\"top:-2.2339999999999995em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:2.9em;\"></span><span class=\"sizing reset-size5 size2 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">x</span><span class=\"mord mathnormal mtight\">ϵ</span><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">a</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span><span class=\"mclose mtight\">)</span></span></span></span><span style=\"top:-2.9em;\"><span class=\"pstrut\" style=\"height:2.9em;\"></span><span><span class=\"mop\">max</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9326666666666668em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal sizing reset-size6 size5\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen sizing reset-size6 size5\">(</span><span class=\"mord mathnormal sizing reset-size6 size5\">x</span><span class=\"mclose sizing reset-size6 size5\">)</span></span></span></span></span></div>\n</li>\n<li>\n<p>Then we can estimate the integral by randomly choosing points inside the rectangle, and using the formula of area from the previous slide.</p>\n</li>\n</ul>\n<p>Example:</p>\n<ul>\n<li>\n<p>Consider the following function:</p>\n<div class=\"math math-display\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mstyle mathsize=\"0.9em\"><mi>f</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mrow><mo fence=\"true\">∣</mo><mi>s</mi><mi>i</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mn>2</mn><mi>π</mi><mi>x</mi><msup><mo stretchy=\"false\">)</mo><mn>5</mn></msup><mo>−</mo><mn>2</mn><mi>c</mi><mi>o</mi><mi>s</mi><mo stretchy=\"false\">(</mo><mn>3</mn><mi>c</mi><mi>o</mi><mi>s</mi><mo stretchy=\"false\">(</mo><mfrac><mi>x</mi><mi>π</mi></mfrac><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup><msup><mo stretchy=\"false\">)</mo><mn>3</mn></msup><mo fence=\"true\">∣</mo></mrow></mstyle></mrow><annotation encoding=\"application/x-tex\">\\small f(x) = \\left | sin(2\\pi x)^5 - 2cos(3cos( \\frac{x}{\\pi} )^2)^3 \\right |</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9em;vertical-align:-0.225em;\"></span><span class=\"mord mathnormal sizing reset-size6 size5\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen sizing reset-size6 size5\">(</span><span class=\"mord mathnormal sizing reset-size6 size5\">x</span><span class=\"mclose sizing reset-size6 size5\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel sizing reset-size6 size5\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.8239900000000002em;vertical-align:-0.675015em;\"></span><span class=\"minner sizing reset-size6 size5\"><span class=\"mopen sizing reset-size5 size6\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.148975em;\"><span style=\"top:-1.930985em;\"><span class=\"pstrut\" style=\"height:2.606em;\"></span><span class=\"delimsizinginner delim-size1\"><span>∣</span></span></span><span style=\"top:-2.5319849999999997em;\"><span class=\"pstrut\" style=\"height:2.606em;\"></span><span class=\"delimsizinginner delim-size1\"><span>∣</span></span></span><span style=\"top:-2.547975em;\"><span class=\"pstrut\" style=\"height:2.606em;\"></span><span class=\"delimsizinginner delim-size1\"><span>∣</span></span></span><span style=\"top:-3.148975em;\"><span class=\"pstrut\" style=\"height:2.606em;\"></span><span class=\"delimsizinginner delim-size1\"><span>∣</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6750149999999999em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mopen\">(</span><span class=\"mord\">2</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">π</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8426266666666666em;\"><span style=\"top:-3.013em;margin-right:0.05555555555555556em;\"><span class=\"pstrut\" style=\"height:2.6em;\"></span><span class=\"sizing reset-size5 size2 mtight\"><span class=\"mord mtight\">5</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">2</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mopen\">(</span><span class=\"mord\">3</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mopen nulldelimiter sizing reset-size5 size6\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.10756em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">π</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter sizing reset-size5 size6\"></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8426266666666666em;\"><span style=\"top:-3.013em;margin-right:0.05555555555555556em;\"><span class=\"pstrut\" style=\"height:2.6em;\"></span><span class=\"sizing reset-size5 size2 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8426266666666666em;\"><span style=\"top:-3.013em;margin-right:0.05555555555555556em;\"><span class=\"pstrut\" style=\"height:2.6em;\"></span><span class=\"sizing reset-size5 size2 mtight\"><span class=\"mord mtight\">3</span></span></span></span></span></span></span></span><span class=\"mclose sizing reset-size5 size6\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.148975em;\"><span style=\"top:-1.930985em;\"><span class=\"pstrut\" style=\"height:2.606em;\"></span><span class=\"delimsizinginner delim-size1\"><span>∣</span></span></span><span style=\"top:-2.5319849999999997em;\"><span class=\"pstrut\" style=\"height:2.606em;\"></span><span class=\"delimsizinginner delim-size1\"><span>∣</span></span></span><span style=\"top:-2.547975em;\"><span class=\"pstrut\" style=\"height:2.606em;\"></span><span class=\"delimsizinginner delim-size1\"><span>∣</span></span></span><span style=\"top:-3.148975em;\"><span class=\"pstrut\" style=\"height:2.606em;\"></span><span class=\"delimsizinginner delim-size1\"><span>∣</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6750149999999999em;\"><span></span></span></span></span></span></span></span></span></span></span></span></div>\n</li>\n<li>\n<p>We can’t integrate this analytically (i.e. representing it in terms of standard math functions).</p>\n</li>\n<li>\n<p>So let’s use Monte Carlo integration instead.</p>\n</li>\n</ul>\n<div class=\"flex\"><python>import numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef f(x): # x is numpy array\n    y = np.sin(2 * np.pi * x) ** 5\n    y -= 2 * np.cos(3 * np.cos(x / np.pi) ** 2) ** 3\n    return np.abs(y)\n\n\nx = np.linspace(0, 10, num=1001)\nplt.figure()\nplt.plot(x, f(x))\nplt.show()\n</python><img src=\"week13/function.png\" style=\"width: 50%;  margin: 1em 0 0 1em;\"></div>\n<div class=\"flex\"><div style=\"margin-left: -3em; width: 50em;\"><ul>\n<li>\n<p>Suppose we want to calculate the definite integral of <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">f(x)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span></span></span></span></span> in interval <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mn>0</mn><mo separator=\"true\">,</mo><mn>10</mn><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[0, 10]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mclose\">]</span></span></span></span></span></p>\n</li>\n<li>\n<p>We then choose the rectangle bounds as:</p>\n<ul>\n<li><span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mn>0</mn><mo separator=\"true\">,</mo><mn>10</mn><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[0, 10]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mclose\">]</span></span></span></span></span> along X-axis</li>\n<li><span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mn>0</mn><mo separator=\"true\">,</mo><mn>3</mn><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[0, 3]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">3</span><span class=\"mclose\">]</span></span></span></span></span> along Y-axis because from the plot\n<div class=\"math math-display\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mstyle mathsize=\"0.9em\"><mn>3</mn><mo>></mo><mo>=</mo><munder><mo><mi>max</mi><mo>⁡</mo></mo><mrow><mi>x</mi><mi>ϵ</mi><mo stretchy=\"false\">(</mo><mn>0</mn><mo separator=\"true\">,</mo><mn>10</mn><mo stretchy=\"false\">)</mo></mrow></munder><mi>f</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mstyle></mrow><annotation encoding=\"application/x-tex\">\\small 3 >= \\max_{x \\epsilon (0, 10)} f(x)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6151860000000001em;vertical-align:-0.035190000000000006em;\"></span><span class=\"mord sizing reset-size6 size5\">3</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel sizing reset-size6 size5\">></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.330183em;vertical-align:0em;\"></span><span class=\"mrel sizing reset-size6 size5\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.5144000000000002em;vertical-align:-0.8394000000000001em;\"></span><span class=\"mop op-limits sizing reset-size6 size5\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.43055999999999983em;\"><span style=\"top:-2.2339999999999995em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:2.9em;\"></span><span class=\"sizing reset-size5 size2 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">x</span><span class=\"mord mathnormal mtight\">ϵ</span><span class=\"mopen mtight\">(</span><span class=\"mord mtight\">0</span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\">1</span><span class=\"mord mtight\">0</span><span class=\"mclose mtight\">)</span></span></span></span><span style=\"top:-2.9em;\"><span class=\"pstrut\" style=\"height:2.9em;\"></span><span><span class=\"mop\">max</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9326666666666668em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal sizing reset-size6 size5\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen sizing reset-size6 size5\">(</span><span class=\"mord mathnormal sizing reset-size6 size5\">x</span><span class=\"mclose sizing reset-size6 size5\">)</span></span></span></span></span></div>\n</li>\n</ul>\n</li>\n<li>\n<p>Then, we compute number of points below the function f(x) in the above defined rectangle</p>\n</li>\n<li>\n<p>Check <inline-code>montecarlo_integration.py</inline-code> for the implementation.</p>\n</li>\n</ul></div><img src=\"week13/mc_integration.png\" style=\"width: 50%;  margin: 1em -3em 0 3em;\"></div>\n<ul>\n<li>There are several methods that can perform Monte Carlo integration.</li>\n<li>The one we’ve seen is called the rectangle method, or dart method.</li>\n<li>It can only be used for simple functions and its accuracy is not very high.</li>\n</ul>\n<p><img style=\"display: block; margin: 3em auto; width: 15%;\" src=\"../assets/divider.svg\"></p>"}},"__N_SSG":true}