{"pageProps":{"allSlugs":[["Lecture-1",[{"title":"1 — Programming Basics","slug":"Lecture-1"}]],["Lecture-2.1",[{"title":"2.1 — Variables, Arithmetic & String operations","slug":"Lecture-2.1"}]],["Lecture-2.2",[{"title":"2.2 — Defining functions, Errors & Debugging","slug":"Lecture-2.2"}]],["Lecture-3.1",[{"title":"3.1 — Order of Expression Evaluation, Comparing Values, Conditional Execution","slug":"Lecture-3.1"}]],["Lecture-3.2",[{"title":"3.2 — if statement, for loop, Indexing & Slicing Strings","slug":"Lecture-3.2"}]],["Lecture-4.1",[{"title":"4.1 — return vs. print, while statement, Modules","slug":"Lecture-4.1"}]],["Lecture-4.2",[{"title":"4.2 — String methods, break & continue statements","slug":"Lecture-4.2"}]],["Lecture-5.1",[{"title":"5.1 — Controlling print(), Nested Loops, Lists","slug":"Lecture-5.1"}]],["Lecture-5.2",[{"title":"5.2 — Scope of variables, List operations","slug":"Lecture-5.2"}]],["Lecture-6.1",[{"title":"6.1 — Tuples, Immutable objects, Sets","slug":"Lecture-6.1"}]],["Lecture-6.2",[{"title":"6.2 — More list & set operations, Dictionaries","slug":"Lecture-6.2"}]],["Lecture-7.1",[{"title":"7.1 — Iterables, Unpacking, Nested Lists","slug":"Lecture-7.1"}]],["Lecture-7.2",[{"title":"7.2 — Nested data structures, Comprehensions, Modules","slug":"Lecture-7.2"}]],["Lecture-8.1",[{"title":"8.1 — Nested list comprehensions, Reading & Writing Files","slug":"Lecture-8.1"}]],["Lecture-8.2",[{"title":"8.2 — Shallow vs. deep copy, Handling exceptions","slug":"Lecture-8.2"}]],["Lecture-9.1",[{"title":"9.1 — Object Oriented Programming (OOP)","slug":"Lecture-9.1"}]],["Lecture-9.2",[{"title":"9.2 — Keyword arguments, More on OOP","slug":"Lecture-9.2"}]],["Lecture-10.1",[{"title":"10.1 — NumPy","slug":"Lecture-10.1"}]],["Lecture-10.2",[{"title":"10.2 — Plotting using Matplotlib, More Numpy","slug":"Lecture-10.2"}]]],"post":{"slug":"Lecture-1","content":"<blockquote class=\"notes-only\"><p>In the beginning was the Tao. The Tao gave birth to Space and Time.\nTherefore Space and Time are the Yin and Yang of programming.\n<cite>— <a href=\"https://www.mit.edu/~xela/tao.html\">Tao of Programming</a></cite></p></blockquote>\n<slide class=\"slide-normal\"><h2 class=\"slide-title\" style=\"\" id=\"binary-numbers\">Binary Numbers</h2><p>In decimal system, a number is expressed as a sequence of digits <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span></span></span></span></span> to <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>9</mn></mrow><annotation encoding=\"application/x-tex\">9</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">9</span></span></span></span></span>.\nFor example, <inline-code>Two thousand twenty one ⇔ 2021</inline-code></p><p>In binary number system the set of digits, is called binary digits or <sc>bits</sc>: <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">{</mo><mn>0</mn><mo separator=\"true\">,</mo><mn>1</mn><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">\\{0, 1\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">}</span></span></span></span></span>.</p><p>A binary number is expressed as a sequence of bits.<br>\nFor example, <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>183</mn></mrow><annotation encoding=\"application/x-tex\">183</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">183</span></span></span></span></span> in binary is <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>10110111</mn></mrow><annotation encoding=\"application/x-tex\">10110111</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">10110111</span></span></span></span></span>.</p></slide>\n<slide class=\"slide-normal\"><h2 class=\"slide-title\" style=\"\" id=\"converting-from-decimal-to-binary\">Converting from decimal to binary</h2><decimal-binary></decimal-binary></slide>\n<slide class=\"slide-normal\"><h2 class=\"slide-title\" style=\"\" id=\"converting-from-binary-to-decimal\">Converting from binary to decimal</h2><binary-decimal></binary-decimal></slide>\n<slide class=\"slide-normal\"><h2 class=\"slide-title\" style=\"\" id=\"groups-of-bits\">Groups of bits</h2><p>A group of <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>8</mn></mrow><annotation encoding=\"application/x-tex\">8</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">8</span></span></span></span></span> bits is called a <i>byte</i>  e.g. <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>11010111</mn></mrow><annotation encoding=\"application/x-tex\">11010111</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">11010111</span></span></span></span></span></p><ul>\n<li><span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span></span> kilobyte (kB) = <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1000</mn></mrow><annotation encoding=\"application/x-tex\">1000</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1000</span></span></span></span></span> bytes</li>\n<li><span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span></span> megabyte (MB) = <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><msup><mn>0</mn><mn>6</mn></msup></mrow><annotation encoding=\"application/x-tex\">10^6</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141em;\"></span><span class=\"mord\">1</span><span class=\"mord\"><span class=\"mord\">0</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">6</span></span></span></span></span></span></span></span></span></span></span></span>  (million) bytes</li>\n<li><span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span></span> gigabyte (GB) = <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><msup><mn>0</mn><mn>9</mn></msup></mrow><annotation encoding=\"application/x-tex\">10^9</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141em;\"></span><span class=\"mord\">1</span><span class=\"mord\"><span class=\"mord\">0</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">9</span></span></span></span></span></span></span></span></span></span></span></span> (billion) bytes</li>\n<li><span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span></span> terabyte (TB) = <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><msup><mn>0</mn><mn>12</mn></msup></mrow><annotation encoding=\"application/x-tex\">10^{12}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141em;\"></span><span class=\"mord\">1</span><span class=\"mord\"><span class=\"mord\">0</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">12</span></span></span></span></span></span></span></span></span></span></span></span></span> bytes (1000 billion)</li>\n</ul></slide>\n<slide class=\"slide-normal\"><h2 class=\"slide-title\" style=\"\" id=\"what-is-programming\">What is programming?</h2><p>Programming is the process of creating a set of instructions — a program — to tell a computer how to perform a task.</p><p>Programs take input data, perform some computation — numerical or symbolic (text) — and produce output data.</p><p>Computers can perform only basic binary operations (such as add or multiply two numbers)</p><ul>\n<li>How do we communicate complex instructions to computers? — Use a programming language!</li>\n</ul></slide>\n<slide class=\"slide-normal\"><h2 class=\"slide-title\" style=\"\" id=\"levels-of-programming-languages\">Levels of programming languages</h2><div class=\"my2\">\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<table><thead><tr><th>Low-level languages</th><th>High-level languages</th></tr></thead><tbody><tr><td>Closer to machine, difficult for humans</td><td>Closer to humans,  easier for humans to work with</td></tr><tr><td></td><td></td></tr><tr><td>Less portable, provide  less abstraction over hardware</td><td>More portable, more abstraction over hardware</td></tr><tr><td>Examples: Assembly Language</td><td>Examples: Java, Python</td></tr></tbody></table></div></slide>\n<slide class=\"ppt-tight slide-normal\"><h2 class=\"slide-title\" style=\"\" id=\"how-do-computers-understand-high-level-languages-\">How do computers understand high-level languages? </h2><p>High-level languages are translated into Machine code (for CPU).</p><p>Programming languages come in two main flavors — <i>compiled</i> languages or <i>interpreted</i> languages:</p><div style=\"font-size: 0.9em; margin: 0 -3em 0 -3em;\">\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<table><thead><tr><th align=\"left\"><sc>Compiled</sc> (e.g. C/C++, Java)</th><th align=\"left\"><sc>Interpreted</sc> (e.g. Python)</th></tr></thead><tbody><tr><td align=\"left\">High-level program (source code)  ➞  <sc>compiler</sc> ➞ binary executable</td><td align=\"left\">High-level program (source code) ➞ Executed directly by <sc>interpreter</sc></td></tr><tr><td align=\"left\"></td><td align=\"left\"></td></tr><tr><td align=\"left\">Once compiled, the binary program can be executed without compiler.</td><td align=\"left\">The interpreter is required on the machine where the program is executed.</td></tr></tbody></table></div><divider></divider></slide>\n<slide class=\"slide-normal\"><h2 class=\"slide-title\" style=\"\" id=\"data-in-binary\">Data in binary</h2><p>Computers can understand only binary numbers</p><p>How can we encode data in the real world into binary numbers?</p><img src=\"module-1/data-in-binary.svg\" style=\"margin: 2rem auto;\" class=\"ppt-w110\"></slide>\n<slide class=\"slide-normal\"><h2 class=\"slide-title\" style=\"\" id=\"integers-in-binary\">Integers in binary</h2><p>We already saw how to represent positive integers in binary e.g.<br>\n</p><div style=\"text-align: center;\"><span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>109</mn><mo>=</mo><mn>110110</mn><msub><mn>1</mn><mn>2</mn></msub></mrow><annotation encoding=\"application/x-tex\">109 = 1101101_2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">109</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7944em;vertical-align:-0.15em;\"></span><span class=\"mord\">110110</span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></span></div>\nFor signed integers (to differentiate negative and positive), an extra leftmost bit is used for sign only, e.g.<br>\n<div style=\"text-align: center;\"><span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>−</mo><mn>109</mn><mo>=</mo><mpadded width=\"+6pt\" height=\"+6pt\" lspace=\"3pt\" voffset=\"3pt\" mathbackground=\"lightblue\"><mtext>1</mtext></mpadded><mn>110110</mn><msub><mn>1</mn><mn>2</mn></msub></mrow><annotation encoding=\"application/x-tex\">-109 = \\colorbox{lightblue}{1}1101101_2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">−</span><span class=\"mord\">109</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.2444em;vertical-align:-0.3em;\"></span><span class=\"mord\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9444em;\"><span style=\"top:-2.9444em;\"><span class=\"pstrut\" style=\"height:3.2444em;\"></span><span class=\"stretchy colorbox\" style=\"height:1.2444em;background-color:lightblue;\"></span></span><span style=\"top:-3.2444em;\"><span class=\"pstrut\" style=\"height:3.2444em;\"></span><span class=\"mord boxpad\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3em;\"><span></span></span></span></span></span><span class=\"mord\">110110</span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></span></div>\n<div style=\"text-align: center;\"><span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>+</mo><mn>109</mn><mo>=</mo><mpadded width=\"+6pt\" height=\"+6pt\" lspace=\"3pt\" voffset=\"3pt\" mathbackground=\"lightblue\"><mtext>0</mtext></mpadded><mn>110110</mn><msub><mn>1</mn><mn>2</mn></msub></mrow><annotation encoding=\"application/x-tex\">+109 = \\colorbox{lightblue}{0}1101101_2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">+</span><span class=\"mord\">109</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.2444em;vertical-align:-0.3em;\"></span><span class=\"mord\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9444em;\"><span style=\"top:-2.9444em;\"><span class=\"pstrut\" style=\"height:3.2444em;\"></span><span class=\"stretchy colorbox\" style=\"height:1.2444em;background-color:lightblue;\"></span></span><span style=\"top:-3.2444em;\"><span class=\"pstrut\" style=\"height:3.2444em;\"></span><span class=\"mord boxpad\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3em;\"><span></span></span></span></span></span><span class=\"mord\">110110</span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></span></div><p></p><div class=\"smaller\">(For more info: <a href=\"https://en.wikipedia.org/wiki/Signed_number_representations\">https://en.wikipedia.org/wiki/Signed_number_representations</a>)</div></slide>\n<slide class=\"slide-normal\"><h2 class=\"slide-title\" style=\"\" id=\"real-numbers-in-binary\">Real numbers in binary</h2><p>64-bit <sc>Floating point</sc> format is used to represent numbers with decimal point, e.g.<br>\n</p><div style=\"text-align: center;\"><span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mpadded width=\"+6pt\" height=\"+6pt\" lspace=\"3pt\" voffset=\"3pt\" mathbackground=\"lightblue\"><mtext>0</mtext></mpadded><mpadded width=\"+6pt\" height=\"+6pt\" lspace=\"3pt\" voffset=\"3pt\" mathbackground=\"lightpink\"><mtext>10000000000</mtext></mpadded><mpadded width=\"+6pt\" height=\"+6pt\" lspace=\"3pt\" voffset=\"3pt\" mathbackground=\"lightgreen\"><mtext>1001001000011111101101010100010001000010110100011000</mtext></mpadded><mo>=</mo><mn>3.141592653589793</mn></mrow><annotation encoding=\"application/x-tex\">\\colorbox{lightblue}{0}\\colorbox{lightpink}{10000000000}\\colorbox{lightgreen}{1001001000011111101101010100010001000010110100011000} = 3.141592653589793</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.2444em;vertical-align:-0.3em;\"></span><span class=\"mord\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9444em;\"><span style=\"top:-2.9444em;\"><span class=\"pstrut\" style=\"height:3.2444em;\"></span><span class=\"stretchy colorbox\" style=\"height:1.2444em;background-color:lightblue;\"></span></span><span style=\"top:-3.2444em;\"><span class=\"pstrut\" style=\"height:3.2444em;\"></span><span class=\"mord boxpad\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3em;\"><span></span></span></span></span></span><span class=\"mord\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9444em;\"><span style=\"top:-2.9444em;\"><span class=\"pstrut\" style=\"height:3.2444em;\"></span><span class=\"stretchy colorbox\" style=\"height:1.2444em;background-color:lightpink;\"></span></span><span style=\"top:-3.2444em;\"><span class=\"pstrut\" style=\"height:3.2444em;\"></span><span class=\"mord boxpad\"><span class=\"mord\">10000000000</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3em;\"><span></span></span></span></span></span><span class=\"mord\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9444em;\"><span style=\"top:-2.9444em;\"><span class=\"pstrut\" style=\"height:3.2444em;\"></span><span class=\"stretchy colorbox\" style=\"height:1.2444em;background-color:lightgreen;\"></span></span><span style=\"top:-3.2444em;\"><span class=\"pstrut\" style=\"height:3.2444em;\"></span><span class=\"mord boxpad\"><span class=\"mord\">1001001000011111101101010100010001000010110100011000</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">3.141592653589793</span></span></span></span></span></div><p></p><p>Floating point format has a <i>finite precision</i>, but digits of <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>π</mi></mrow><annotation encoding=\"application/x-tex\">\\pi</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">π</span></span></span></span></span> run forever: </p><div style=\"text-align: center;\"><span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>3.1415926535897932384626433832795028841...</mn></mrow><annotation encoding=\"application/x-tex\">3.1415926535897932384626433832795028841...</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">3.1415926535897932384626433832795028841...</span></span></span></span></span></div><p></p><p>But with only 64-bits we can only have precision up to a fixed digits after decimal point: <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>3.141592653589793</mn></mrow><annotation encoding=\"application/x-tex\">3.141592653589793</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">3.141592653589793</span></span></span></span></span></p><div class=\"smaller\">(For more info: <a href=\"https://en.wikipedia.org/wiki/Double-precision_floating-point_format\">https://en.wikipedia.org/wiki/Double-precision_floating-point_format</a>)</div></slide>\n<slide class=\"slide-normal\"><h2 class=\"slide-title\" style=\"\" id=\"text-in-binary\">Text in binary</h2><p class=\"ppt-m-3\">Letters and punctuations in human languages are encoded in binary using a <i>Character Encoding</i> such as ASCII or UTF-8 (Unicode).</p><img style=\"margin: 0 auto; width: 80%;\" src=\"module-1/ASCII-Table.png\" class=\"ppt-img50\"><div style=\"font-size: 0.6em; margin: 0 auto;\">(source: <a href=\"https://simple.wikipedia.org/wiki/ASCII\">https://simple.wikipedia.org/wiki/ASCII</a>)</div></slide>\n<slide class=\"slide-normal\"><h2 class=\"slide-title\" style=\"\" id=\"images-audio--video-in-binary\">Images, audio &#x26; video in binary</h2><p>Even for these complex data, the idea remains the same.</p><p>We use a format to store bytes in a file and programs know what to do (play music, show image, etc) based on the format.</p><p>We already know some of these formats:</p><ul>\n<li>Images: jpeg, png</li>\n<li>Audio: mp3, m4a, wma</li>\n<li>Video: mp4, avi, wmv</li>\n</ul><divider></divider></slide>\n<slide class=\"slide-normal\"><h2 class=\"slide-title\" style=\"\" id=\"thonny-demo--editor-vs-shell\">Thonny Demo — Editor vs Shell</h2><p>Python interpreter can work in an interactive or <i>shell</i> mode in which lines of code are executed immediately as soon as they are entered and output is visible immediately.</p><p>Shell mode is apparent whenever you see the prompt <inline-code>>>></inline-code>.</p><p>In <i>Script</i> mode, a Python file (<inline-code>.py</inline-code>) is executed by interpreter as a program (whole file, not line-by-line).</p><p>Thonny allows us to use both modes.</p></slide>\n<slide class=\"slide-normal\"><h2 class=\"slide-title\" style=\"\" id=\"comments\">Comments</h2><p>Comments are annotations we add to our program and are ignored by the Python interpreter.</p><p>In Python, we start a comment using <inline-code>#</inline-code>.</p><python># Author: Deven\n# My first program\n\n# This is a comment on its own line &#x26; it will be ignored\nprint(\"Hello, world!\")  # str\nprint(123)  # int\nprint(1.614)  # float \n</python></slide>\n<slide class=\"slide-notitle\"><h2 class=\"slide-title\" style=\"\" id=\"\"></h2><p>We use comments to:</p><ul>\n<li>Make the code easier to read and understand by explaining how it works.</li>\n<li>Indicate authorship and license.</li>\n<li>Disable some code (prevent it from executing) but still keeping it in the file.</li>\n</ul><p>In Thonny, we can use <inline-code>Edit menu -> Toggle comment</inline-code> to comment/uncomment the selected lines.</p></slide>\n<slide class=\"slide-normal\"><h2 class=\"slide-title\" style=\"\" id=\"objects-and-data-types\">Objects and Data Types</h2><p>All data in a Python program is represented by <sc>objects</sc>. An object always has a <sc>type</sc> (or <sc>class</sc>) associated with it.</p><div class=\"hgrid\"><python>>>> 5\n5\n>>> 3.1415\n3.1415\n>>> \"Hello\"\n'Hello'\n</python><python># Using type() function to know the type of objects\n>>> type(5)\n&#x3C;class 'int'>\n>>> type(3.1415)\n&#x3C;class 'float'>\n>>> type(\"Hello\")\n&#x3C;class 'str'>\n</python></div></slide>\n<slide class=\"slide-notitle\"><h2 class=\"slide-title\" style=\"\" id=\"-1\"></h2><p>An object’s type determines the operations that the object supports:</p><python>#  objects of int type can be added using +\n>>> 10 + 5\n15\n\n# But an object of type str cannot be added to an int using +\n>>> \"Hello\" + 5\nTraceback (most recent call last):\n  File \"&#x3C;pyshell>\", line 1, in &#x3C;module>\nTypeError: can only concatenate str (not \"int\") to str\n</python></slide>\n<slide class=\"slide-normal\"><h2 class=\"slide-title\" style=\"\" id=\"summary\">Summary</h2><p>We saw the three basic data types in Python:</p><ul>\n<li><inline-code>int</inline-code>: Integers such as <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><mo>−</mo><mn>1</mn><mo separator=\"true\">,</mo><mn>0</mn><mo separator=\"true\">,</mo><mn>1</mn><mo separator=\"true\">,</mo><mn>2</mn><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi></mrow><annotation encoding=\"application/x-tex\">..., -1, 0, 1, 2, ...</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8389em;vertical-align:-0.1944em;\"></span><span class=\"mord\">...</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">−</span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">2</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">...</span></span></span></span></span></li>\n<li><inline-code>float</inline-code>: Floating-point numbers such as <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>−</mo><mn>1.2</mn><mo separator=\"true\">,</mo><mn>3.14</mn><mo separator=\"true\">,</mo></mrow><annotation encoding=\"application/x-tex\">-1.2, 3.14,</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8389em;vertical-align:-0.1944em;\"></span><span class=\"mord\">−</span><span class=\"mord\">1.2</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">3.14</span><span class=\"mpunct\">,</span></span></span></span></span> etc.</li>\n<li><inline-code>str</inline-code>: Text data (a sequence of characters) such as “hello world”, “Python”, etc.</li>\n</ul><p>The terms <sc>Object</sc> and <sc>Value</sc> are used interchangeably.<br>\nSo are the terms <sc>Class</sc> and <sc>Type</sc>.</p><divider></divider></slide>","title":"1 — Programming Basics","date":"2023-01-03","published":true,"section":"Lecture-1"}},"__N_SSG":true}