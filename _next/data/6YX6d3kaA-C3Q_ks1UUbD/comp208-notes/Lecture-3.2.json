{"pageProps":{"allSlugs":[["Lecture-1",[{"title":"1 — Programming Basics","slug":"Lecture-1"}]],["Lecture-2.1",[{"title":"2.1 — Variables, Arithmetic & String operations","slug":"Lecture-2.1"}]],["Lecture-2.2",[{"title":"2.2 — Function calls, Defining functions, Types of Errors","slug":"Lecture-2.2"}]],["Lecture-3.1",[{"title":"3.1 — Order of Expression Evaluation, Comparing Values, Conditional Execution","slug":"Lecture-3.1"}]],["Lecture-3.2",[{"title":"3.2 — if statement, for loop, Indexing & Slicing Strings","slug":"Lecture-3.2"}]],["Lecture-4.1",[{"title":"4.1 — return vs. print, while statement, Modules","slug":"Lecture-4.1"}]],["Lecture-4.2",[{"title":"4.2 — String methods, break & continue statements","slug":"Lecture-4.2"}]],["Lecture-5.1",[{"title":"5.1 — Controlling print(), Nested Loops, Lists","slug":"Lecture-5.1"}]],["Lecture-5.2",[{"title":"5.2 — Scope of variables, List operations","slug":"Lecture-5.2"}]],["Lecture-6.1",[{"title":"6.1 — Tuples, Immutable objects, Sets","slug":"Lecture-6.1"}]],["Lecture-6.2",[{"title":"6.2 — More list & set operations, Dictionaries","slug":"Lecture-6.2"}]],["Lecture-7.1",[{"title":"7.1 — Iterables, Unpacking, Nested Lists","slug":"Lecture-7.1"}]],["Lecture-7.2",[{"title":"7.2 — Nested data structures, Comprehensions, Modules","slug":"Lecture-7.2"}]],["Lecture-8.1",[{"title":"8.1 — Nested list comprehensions, Reading & Writing Files","slug":"Lecture-8.1"}]],["Lecture-8.2",[{"title":"8.2 — Shallow vs. deep copy, Handling exceptions","slug":"Lecture-8.2"}]]],"post":{"slug":"Lecture-3.2","content":"<slide class=\"slide-normal\"><h2 class=\"slide-title\" style=\"\" id=\"flow-of-execution--functions\">Flow of execution — functions</h2><p>Try debugging in thonny for the following examples. (Also try <i>Step out</i> button, when the code inside a function is being executed.)</p><hgrid><python># Function definition\ndef display_greeting():\n    print(\"+------------+\")\n    print(\"|  Welcome!  |\")\n    print(\"+------------+\")\n\ndisplay_greeting()\n\ndisplay_greeting()\n</python><python>def f(x):\n    result = x * x - x - 1\n    return result\n    # OR: return x * x - x - 1\n\ny = f(5)\nprint(y)\n\ny = f(10)\nprint(y)\n</python></hgrid></slide>\n<slide class=\"slide-notitle\"><h2 class=\"slide-title\" style=\"\" id=\"\"></h2><python>def f():\n    return 2\n\n\ndef g():\n    return 3\n\n\ndef h():\n    return f() * g()\n\n\nprint(h())\n</python></slide>\n<slide class=\"slide-normal\"><h2 class=\"slide-title\" style=\"\" id=\"variables-and-if-statement\">Variables and <inline-code>if</inline-code> statement</h2><p>Variables can be created inside the branches of <inline-code>if</inline-code> statement.</p><p>Make sure that all branches have same variable names!</p><python>income = 15000\n\nif income &#x3C; 12000:\n    tax = 0.0\nelse:\n    taxes = income * 15.5 / 100  # Change variable name to tax\n    \nprint(\"Your tax is\", tax)\n</python><output>NameError: name 'tax' is not defined\n</output></slide>\n<slide class=\"slide-normal\"><h2 class=\"slide-title\" style=\"\" id=\"mutually-exclusive-conditions--chained-if-elif-else-statement\"><span style=\"margin: 0 -2em;\">Mutually exclusive conditions — chained <inline-code>if-elif-else</inline-code> statement</span></h2><hgrid margin=\"0 -2em\"><python place=\"center\">income = 20000\n\nif income &#x3C; 12000:\n    tax = 0.0\nelif income &#x3C; 30000:\n    tax = income * 15.0 / 100\nelif income &#x3C; 100000:\n    tax = income * 20.0 / 100\nelse:\n    tax = income * 25.0 / 100\n    \nprint(\"Your tax is\", tax)\n</python><div><ul>\n<li>Mutually exclusive — only one of these blocks will get executed.</li>\n<li>Order matters! If first of the conditions is <inline-code>True</inline-code>, later conditions are not checked.</li>\n<li>We can have as many <inline-code>elif</inline-code>’s as you want.</li>\n<li>The final <inline-code>else</inline-code> part is not required so you may omit it if not needed.</li>\n</ul></div></hgrid></slide>\n<slide class=\"slide-normal\"><h2 class=\"slide-title\" style=\"\" id=\"example\">Example</h2><p>Is there anything wrong in code below?</p><hgrid><python>temperature = 25\n\nif temperature > 0:\n    print(\"Cold\")\nelif temperature > 20:\n    print(\"Warm\")\nelif temperature > 30:\n    print(\"Hot\")\nelse: \n    print(\"Freezing\")\n</python><output>Cold\n</output></hgrid></slide>\n<slide class=\"slide-normal\"><h2 class=\"slide-title\" style=\"\" id=\"order-of-conditions-matters\">Order of conditions matters!</h2><solution><hgrid><python>temperature = 25\n\nif temperature > 30:\n    print(\"Hot\")\nelif temperature > 20:\n    print(\"Warm\")\nelif temperature > 0:\n    print(\"Cold\")\nelse: \n    print(\"Freezing\")\n</python><python>temperature = 25\n\nif temperature > 0 and temperature &#x3C;= 20:\n    print(\"Cold\")\nelif temperature > 20 and temperature &#x3C;= 30:\n    print(\"Warm\")\nelif temperature > 30:\n    print(\"Hot\")\nelse: \n    print(\"Freezing\")\n\n</python></hgrid></solution></slide>\n<slide class=\"slide-notitle\"><h2 class=\"slide-title\" style=\"\" id=\"-1\"></h2><p>Try “Blood Pressure” problem on Ed Lessons.</p></slide>\n<slide class=\"slide-normal\"><h2 class=\"slide-title\" style=\"\" id=\"if-statements-can-be-nested\"><inline-code>if</inline-code> statements can be nested</h2><p>Examples below are logically equivalent.</p><hgrid gap=\"3em\" margin=\"0 0\"><div><p><b>Nested <inline-code>if</inline-code> statements</b></p><python place=\"start\">x = 10\nif x > 0:\n    print(\"Positive\")\nelse:\n    if x &#x3C; 0:\n        print(\"Negative\")\n    else:\n        print(\"Zero\")\n</python></div><div><p><b>Chained <inline-code>if</inline-code> statement</b></p><python place=\"start\">x = 10\nif x > 0:\n    print(\"Positive\")\nelif x &#x3C; 0:\n    print(\"Negative\")\nelse:\n    print(\"Zero\")\n</python></div></hgrid><div class=\"ppt-95\">You can use either one, but nested statements can easily become difficult to read.</div></slide>\n<slide class=\"slide-normal\"><h2 class=\"slide-title\" style=\"\" id=\"correct-indentation-is-essential\">Correct indentation is essential!</h2><p>Sometimes, incorrect indentation may not give an error but it may lead to an unexpected program.</p><python>income = 1000\n\nif income &#x3C; 12000:\n    print(\"You don't have to pay tax.\")\n    tax = 0.0\nelse:\n    print(\"You have to pay tax.\")\ntax = income * 15.0 / 100  # this line should be indented\n    \nprint(\"Your tax is\", tax)\n</python></slide>\n<slide class=\"slide-normal\"><h2 class=\"slide-title\" style=\"\" id=\"iteration-using-for-loop\">Iteration using <inline-code>for</inline-code> loop</h2><p><inline-code>for</inline-code> loop can be used to repeatedly execute a block of code.</p><hgrid gap=\"4em\"><div><python>for i in range(5):\n    print(\"Hello\")\n</python><output>Hello\nHello\nHello\nHello\nHello\n</output></div><div><python>for i in range(5):\n    print(i)\n</python><output>0\n1\n2\n3\n4\n</output></div></hgrid></slide>\n<slide class=\"slide-normal\"><h2 class=\"slide-title\" style=\"\" id=\"what-happens-when-the-for-loop-is-executed\">What happens when the <inline-code>for</inline-code> loop is executed?</h2><hgrid cols=\"1fr 3fr\" margin=\"0 0\"><hgrid><python>for i in range(5):\n    print(i)\n</python></hgrid><div><ul>\n<li><inline-code>range(5)</inline-code> will produce a sequence of integers <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn><mo separator=\"true\">,</mo><mn>1</mn><mo separator=\"true\">,</mo><mn>2</mn><mo separator=\"true\">,</mo><mn>3</mn><mo separator=\"true\">,</mo><mn>4</mn></mrow><annotation encoding=\"application/x-tex\">0, 1, 2, 3, 4</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8389em;vertical-align:-0.1944em;\"></span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">2</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">3</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">4</span></span></span></span></span> in steps.</li>\n<li><inline-code>for</inline-code> loop allows us to iterate i.e. “go over” that sequence, a number at a time\n<ul>\n<li>In each step of the loop, variable <inline-code>i</inline-code> gets a value from the sequence</li>\n</ul>\n</li>\n<li>We can have any valid variable name, other than <inline-code>i</inline-code> if we want.</li>\n</ul></div></hgrid><p>Try step-by-step execution of the examples above!</p></slide>\n<slide class=\"slide-normal\"><h2 class=\"slide-title\" style=\"\" id=\"range-function-takes-up-to-3-arguments\"><inline-code>range()</inline-code> function takes up to 3 arguments</h2><p><inline-code>range(end)</inline-code>: produces sequence <inline-code>0, 1, 2, ..., end-1</inline-code></p></slide>\n<slide class=\"slide-notitle\"><h2 class=\"slide-title\" style=\"\" id=\"-2\"></h2><p><inline-code>range(start, end)</inline-code>: produces sequence <inline-code>start, start+1, ..., end-1</inline-code></p></slide>\n<slide class=\"slide-notitle\"><h2 class=\"slide-title\" style=\"\" id=\"-3\"></h2><p><inline-code>range(start, end, step)</inline-code>:</p><ul>\n<li>if <inline-code>step > 0</inline-code>, produces sequence <inline-code>start, start+step, ..., N</inline-code> where <inline-code>N &#x3C; end</inline-code></li>\n<li>if <inline-code>step &#x3C; 0</inline-code>, produces sequence <inline-code>start, start+step, ..., N</inline-code> where <inline-code>N > end</inline-code></li>\n</ul></slide>\n<slide class=\"slide-normal\"><h2 class=\"slide-title\" style=\"\" id=\"examples-of-range\">Examples of range()</h2><hgrid><python># 0, 1, 2, ..., 9\nfor i in range(10):\n    print(i)\n\n# 1, 2, ..., 10\nfor i in range(1, 11):\n    print(i)\n    \n# 0, 2, 4, ..., 18    \nfor i in range(0, 20, 2):\n    print(i)\n</python><python># 10, 15, 20, 25, ..., 95\nfor i in range(10, 100, 5):\n    print(i)\n\n# 10, 9, 8, ..., 1\nfor i in range(10, 0, -1):\n    print(i)\n</python></hgrid></slide>\n<slide class=\"slide-normal\"><h2 class=\"slide-title\" style=\"\" id=\"exercise\">Exercise</h2><p>Compute sum of first N numbers.</p></slide>\n<slide class=\"slide-notitle\"><h2 class=\"slide-title\" style=\"\" id=\"-4\"></h2><solution><python>N = 50\n\ntotal = 0\nfor num in range(1, N+1):\n    total = total + num\n    \nprint(total)\n</python></solution></slide>\n<slide class=\"slide-notitle\"><h2 class=\"slide-title\" style=\"\" id=\"-5\"></h2><p>Try “Harmonic sum” problem on Ed Lessons.</p></slide>\n<slide class=\"slide-normal\"><h2 class=\"slide-title\" style=\"\" id=\"indexing--slicing-strings\">Indexing &#x26; Slicing Strings</h2><p>Recall that a string is a sequence of characters.</p><p>Each character, therefore, has a position or an <sc>index</sc>.</p><p>Index starts with zero. For example, for the string <inline-code>\"Hello\"</inline-code>:</p><div style=\"display:grid;margin: 0.5rem 0;\"><div style=\"display:grid;grid-auto-flow: row;grid-auto-rows: min-content;gap:0;width: min-content;justify-self:center;\"><div style=\"display:grid;grid-auto-flow: column;grid-auto-columns: min-content;gap:0;font-family: Hack;width: min-content; font-size: 0.7em;\"><div style=\"width:calc(var(--unit)*2);height:calc(var(--unit)*1.2);display:grid;place-content:end center;\">0</div><div style=\"width:calc(var(--unit)*2);height:calc(var(--unit)*1.2);display:grid;place-content:end center;\">1</div><div style=\"width:calc(var(--unit)*2);height:calc(var(--unit)*1.2);display:grid;place-content:end center;\">2</div><div style=\"width:calc(var(--unit)*2);height:calc(var(--unit)*1.2);display:grid;place-content:end center;\">3</div><div style=\"width:calc(var(--unit)*2);height:calc(var(--unit)*1.2);display:grid;place-content:end center;\">4</div></div><div style=\"display:grid;grid-auto-flow: column;grid-auto-columns: min-content;gap:0;font-family: Hack;border: 1px solid black; width: min-content;\"><div style=\"border: 1px solid black;width:calc(var(--unit)*2);height:calc(var(--unit)*1.7);display:grid;place-content:center;\">H</div><div style=\"border: 1px solid black;width:calc(var(--unit)*2);height:calc(var(--unit)*1.7);display:grid;place-content:center;\">e</div><div style=\"border: 1px solid black;width:calc(var(--unit)*2);height:calc(var(--unit)*1.7);display:grid;place-content:center;\">l</div><div style=\"border: 1px solid black;width:calc(var(--unit)*2);height:calc(var(--unit)*1.7);display:grid;place-content:center;\">l</div><div style=\"border: 1px solid black;width:calc(var(--unit)*2);height:calc(var(--unit)*1.7);display:grid;place-content:center;\">o</div></div></div></div></slide>\n<slide class=\"slide-notitle\"><h2 class=\"slide-title\" style=\"\" id=\"-6\"></h2><p>Indices must be integers and cannot be float.</p><p>Python also allows negative indices, which go from right to left:</p><div style=\"display:grid;margin: 0.5rem 0;\"><div style=\"display:grid;grid-auto-flow: row;grid-auto-rows: min-content;gap:0;width: min-content;justify-self:center;\"><div style=\"display:grid;grid-auto-flow: column;grid-auto-columns: min-content;gap:0;font-family: Hack;width: min-content; font-size: 0.7em;\"><div style=\"width:calc(var(--unit)*2);height:calc(var(--unit)*1.2);display:grid;place-content:end center;\">0</div><div style=\"width:calc(var(--unit)*2);height:calc(var(--unit)*1.2);display:grid;place-content:end center;\">1</div><div style=\"width:calc(var(--unit)*2);height:calc(var(--unit)*1.2);display:grid;place-content:end center;\">2</div><div style=\"width:calc(var(--unit)*2);height:calc(var(--unit)*1.2);display:grid;place-content:end center;\">3</div><div style=\"width:calc(var(--unit)*2);height:calc(var(--unit)*1.2);display:grid;place-content:end center;\">4</div></div><div style=\"display:grid;grid-auto-flow: column;grid-auto-columns: min-content;gap:0;font-family: Hack;border: 1px solid black; width: min-content;\"><div style=\"border: 1px solid black;width:calc(var(--unit)*2);height:calc(var(--unit)*1.7);display:grid;place-content:center;\">H</div><div style=\"border: 1px solid black;width:calc(var(--unit)*2);height:calc(var(--unit)*1.7);display:grid;place-content:center;\">e</div><div style=\"border: 1px solid black;width:calc(var(--unit)*2);height:calc(var(--unit)*1.7);display:grid;place-content:center;\">l</div><div style=\"border: 1px solid black;width:calc(var(--unit)*2);height:calc(var(--unit)*1.7);display:grid;place-content:center;\">l</div><div style=\"border: 1px solid black;width:calc(var(--unit)*2);height:calc(var(--unit)*1.7);display:grid;place-content:center;\">o</div></div><div style=\"display:grid;grid-auto-flow: column;grid-auto-columns: min-content;gap:0;font-family: Hack;width: min-content; font-size: 0.7em;\"><div style=\"width:calc(var(--unit)*2);height:calc(var(--unit)*1.2);display:grid;place-content:start center;\">-5</div><div style=\"width:calc(var(--unit)*2);height:calc(var(--unit)*1.2);display:grid;place-content:start center;\">-4</div><div style=\"width:calc(var(--unit)*2);height:calc(var(--unit)*1.2);display:grid;place-content:start center;\">-3</div><div style=\"width:calc(var(--unit)*2);height:calc(var(--unit)*1.2);display:grid;place-content:start center;\">-2</div><div style=\"width:calc(var(--unit)*2);height:calc(var(--unit)*1.2);display:grid;place-content:start center;\">-1</div></div></div></div><p>For any string <inline-code>s</inline-code>,</p><ul>\n<li>valid positive index values are from <inline-code>0</inline-code> to <inline-code>len(s)-1</inline-code>.</li>\n<li>valid negative index values are from <inline-code>-len(s)</inline-code> to <inline-code>-1</inline-code>.</li>\n</ul></slide>\n<slide class=\"slide-notitle\"><h2 class=\"slide-title\" style=\"\" id=\"-7\"></h2><p>Square brackets <inline-code>[]</inline-code> are used to get the letter in a string at a given index.</p><python>>>> message = \"Hello\"\n>>> message[0]  # first letter\n'H'\n>>> message[1]  # second letter\n'e'\n>>> message[4]  # fifth letter, the last one in the string\n'o'\n</python></slide>\n<slide class=\"slide-notitle\"><h2 class=\"slide-title\" style=\"\" id=\"-8\"></h2><div style=\"display:grid;margin: 0.5rem 0;\"><div style=\"display:grid;grid-auto-flow: row;grid-auto-rows: min-content;gap:0;width: min-content;justify-self:center;\"><div style=\"display:grid;grid-auto-flow: column;grid-auto-columns: min-content;gap:0;font-family: Hack;width: min-content; font-size: 0.7em;\"><div style=\"width:calc(var(--unit)*2);height:calc(var(--unit)*1.2);display:grid;place-content:end center;\">0</div><div style=\"width:calc(var(--unit)*2);height:calc(var(--unit)*1.2);display:grid;place-content:end center;\">1</div><div style=\"width:calc(var(--unit)*2);height:calc(var(--unit)*1.2);display:grid;place-content:end center;\">2</div><div style=\"width:calc(var(--unit)*2);height:calc(var(--unit)*1.2);display:grid;place-content:end center;\">3</div><div style=\"width:calc(var(--unit)*2);height:calc(var(--unit)*1.2);display:grid;place-content:end center;\">4</div></div><div style=\"display:grid;grid-auto-flow: column;grid-auto-columns: min-content;gap:0;font-family: Hack;border: 1px solid black; width: min-content;\"><div style=\"border: 1px solid black;width:calc(var(--unit)*2);height:calc(var(--unit)*1.7);display:grid;place-content:center;\">H</div><div style=\"border: 1px solid black;width:calc(var(--unit)*2);height:calc(var(--unit)*1.7);display:grid;place-content:center;\">e</div><div style=\"border: 1px solid black;width:calc(var(--unit)*2);height:calc(var(--unit)*1.7);display:grid;place-content:center;\">l</div><div style=\"border: 1px solid black;width:calc(var(--unit)*2);height:calc(var(--unit)*1.7);display:grid;place-content:center;\">l</div><div style=\"border: 1px solid black;width:calc(var(--unit)*2);height:calc(var(--unit)*1.7);display:grid;place-content:center;\">o</div></div><div style=\"display:grid;grid-auto-flow: column;grid-auto-columns: min-content;gap:0;font-family: Hack;width: min-content; font-size: 0.7em;\"><div style=\"width:calc(var(--unit)*2);height:calc(var(--unit)*1.2);display:grid;place-content:start center;\">-5</div><div style=\"width:calc(var(--unit)*2);height:calc(var(--unit)*1.2);display:grid;place-content:start center;\">-4</div><div style=\"width:calc(var(--unit)*2);height:calc(var(--unit)*1.2);display:grid;place-content:start center;\">-3</div><div style=\"width:calc(var(--unit)*2);height:calc(var(--unit)*1.2);display:grid;place-content:start center;\">-2</div><div style=\"width:calc(var(--unit)*2);height:calc(var(--unit)*1.2);display:grid;place-content:start center;\">-1</div></div></div></div><python>>>> message = \"Hello\"\n>>> message[5]  # there is no letter at this index\nIndexError: string index out of range\n>>> message[-1]\n'o'\n>>> message[-5]\n'H'\n>>> message[-6]  # there is no letter at this index\nIndexError: string index out of range\n>>> message[1.0]\nTypeError: string indices must be integers\n</python></slide>\n<slide class=\"slide-normal\"><h2 class=\"slide-title\" style=\"\" id=\"traversing-a-string\">Traversing a string</h2><p>We can use <inline-code>for</inline-code> loop with <inline-code>range()</inline-code> function to go over a string letter-by-letter.</p><hgrid><python>message = \"Hello\"\n\nfor i in range(len(message)):\n    print(i, message[i])\n</python><output>0 H\n1 e\n2 l\n3 l\n4 o\n</output></hgrid></slide>\n<slide class=\"slide-notitle\"><h2 class=\"slide-title\" style=\"\" id=\"-9\"></h2><p>Another example:</p><python>letters = \"bcmrst\"\n\nfor i in range(len(letters)):\n    print(letters[i] + \"ake\")\n</python></slide>\n<slide class=\"slide-notitle\"><h2 class=\"slide-title\" style=\"\" id=\"-10\"></h2><p>Try “Remove spaces from a string” problem on Ed Lessons.</p></slide>\n<slide class=\"slide-normal\"><h2 class=\"slide-title\" style=\"\" id=\"using-slice-to-get-substrings\">Using slice to get substrings</h2><div class=\"ppt-m-2\"><p>Using slice notation we can get parts of a string: <inline-code>string[start:end:step]</inline-code>.<br>\n<inline-code>start</inline-code>, <inline-code>end</inline-code>, <inline-code>step</inline-code> values must be integers and work similar to <inline-code>range()</inline-code> function.</p></div><div style=\"margin: 0.5rem 0;\" class=\"grid\"><div style=\"display:grid;grid-auto-flow: row;grid-auto-rows: min-content;gap:0;width: min-content;justify-self:center;\"><div style=\"display:grid;grid-auto-flow: column;grid-auto-columns: min-content;gap:0;font-family: Hack;width: min-content; font-size: 0.7em;\"><div style=\"width:calc(var(--unit)*2);height:calc(var(--unit)*1.2);display:grid;place-content:end center;\">0</div><div style=\"width:calc(var(--unit)*2);height:calc(var(--unit)*1.2);display:grid;place-content:end center;\">1</div><div style=\"width:calc(var(--unit)*2);height:calc(var(--unit)*1.2);display:grid;place-content:end center;\">2</div><div style=\"width:calc(var(--unit)*2);height:calc(var(--unit)*1.2);display:grid;place-content:end center;\">3</div><div style=\"width:calc(var(--unit)*2);height:calc(var(--unit)*1.2);display:grid;place-content:end center;\">4</div><div style=\"width:calc(var(--unit)*2);height:calc(var(--unit)*1.2);display:grid;place-content:end center;\">5</div><div style=\"width:calc(var(--unit)*2);height:calc(var(--unit)*1.2);display:grid;place-content:end center;\">6</div><div style=\"width:calc(var(--unit)*2);height:calc(var(--unit)*1.2);display:grid;place-content:end center;\">7</div><div style=\"width:calc(var(--unit)*2);height:calc(var(--unit)*1.2);display:grid;place-content:end center;\">8</div></div><div style=\"display:grid;grid-auto-flow: column;grid-auto-columns: min-content;gap:0;font-family: Hack;border: 1px solid black; width: min-content;\"><div style=\"border: 1px solid black;width:calc(var(--unit)*2);height:calc(var(--unit)*1.7);display:grid;place-content:center;\">p</div><div style=\"border: 1px solid black;width:calc(var(--unit)*2);height:calc(var(--unit)*1.7);display:grid;place-content:center;\">i</div><div style=\"border: 1px solid black;width:calc(var(--unit)*2);height:calc(var(--unit)*1.7);display:grid;place-content:center;\">n</div><div style=\"border: 1px solid black;width:calc(var(--unit)*2);height:calc(var(--unit)*1.7);display:grid;place-content:center;\">e</div><div style=\"border: 1px solid black;width:calc(var(--unit)*2);height:calc(var(--unit)*1.7);display:grid;place-content:center;\">a</div><div style=\"border: 1px solid black;width:calc(var(--unit)*2);height:calc(var(--unit)*1.7);display:grid;place-content:center;\">p</div><div style=\"border: 1px solid black;width:calc(var(--unit)*2);height:calc(var(--unit)*1.7);display:grid;place-content:center;\">p</div><div style=\"border: 1px solid black;width:calc(var(--unit)*2);height:calc(var(--unit)*1.7);display:grid;place-content:center;\">l</div><div style=\"border: 1px solid black;width:calc(var(--unit)*2);height:calc(var(--unit)*1.7);display:grid;place-content:center;\">e</div></div><div style=\"display:grid;grid-auto-flow: column;grid-auto-columns: min-content;gap:0;font-family: Hack;width: min-content; font-size: 0.7em;\"><div style=\"width:calc(var(--unit)*2);height:calc(var(--unit)*1.2);display:grid;place-content:start center;\">-9</div><div style=\"width:calc(var(--unit)*2);height:calc(var(--unit)*1.2);display:grid;place-content:start center;\">-8</div><div style=\"width:calc(var(--unit)*2);height:calc(var(--unit)*1.2);display:grid;place-content:start center;\">-7</div><div style=\"width:calc(var(--unit)*2);height:calc(var(--unit)*1.2);display:grid;place-content:start center;\">-6</div><div style=\"width:calc(var(--unit)*2);height:calc(var(--unit)*1.2);display:grid;place-content:start center;\">-5</div><div style=\"width:calc(var(--unit)*2);height:calc(var(--unit)*1.2);display:grid;place-content:start center;\">-4</div><div style=\"width:calc(var(--unit)*2);height:calc(var(--unit)*1.2);display:grid;place-content:start center;\">-3</div><div style=\"width:calc(var(--unit)*2);height:calc(var(--unit)*1.2);display:grid;place-content:start center;\">-2</div><div style=\"width:calc(var(--unit)*2);height:calc(var(--unit)*1.2);display:grid;place-content:start center;\">-1</div></div></div></div><python>>>> fruit = \"pineapple\"\n\n>>> fruit[4:7]  # letters at indices 4, 5, 6\n'app'\n>>> fruit[2:7:2]  # letters at indices 2, 4, 6\n'nap'\n</python></slide>\n<slide class=\"slide-notitle\"><h2 class=\"slide-title\" style=\"\" id=\"-11\"></h2><div style=\"margin: 0.5rem 0;\" class=\"grid ppt-only\"><div style=\"display:grid;grid-auto-flow: row;grid-auto-rows: min-content;gap:0;width: min-content;justify-self:center;\"><div style=\"display:grid;grid-auto-flow: column;grid-auto-columns: min-content;gap:0;font-family: Hack;width: min-content; font-size: 0.7em;\"><div style=\"width:calc(var(--unit)*2);height:calc(var(--unit)*1.2);display:grid;place-content:end center;\">0</div><div style=\"width:calc(var(--unit)*2);height:calc(var(--unit)*1.2);display:grid;place-content:end center;\">1</div><div style=\"width:calc(var(--unit)*2);height:calc(var(--unit)*1.2);display:grid;place-content:end center;\">2</div><div style=\"width:calc(var(--unit)*2);height:calc(var(--unit)*1.2);display:grid;place-content:end center;\">3</div><div style=\"width:calc(var(--unit)*2);height:calc(var(--unit)*1.2);display:grid;place-content:end center;\">4</div><div style=\"width:calc(var(--unit)*2);height:calc(var(--unit)*1.2);display:grid;place-content:end center;\">5</div><div style=\"width:calc(var(--unit)*2);height:calc(var(--unit)*1.2);display:grid;place-content:end center;\">6</div><div style=\"width:calc(var(--unit)*2);height:calc(var(--unit)*1.2);display:grid;place-content:end center;\">7</div><div style=\"width:calc(var(--unit)*2);height:calc(var(--unit)*1.2);display:grid;place-content:end center;\">8</div></div><div style=\"display:grid;grid-auto-flow: column;grid-auto-columns: min-content;gap:0;font-family: Hack;border: 1px solid black; width: min-content;\"><div style=\"border: 1px solid black;width:calc(var(--unit)*2);height:calc(var(--unit)*1.7);display:grid;place-content:center;\">p</div><div style=\"border: 1px solid black;width:calc(var(--unit)*2);height:calc(var(--unit)*1.7);display:grid;place-content:center;\">i</div><div style=\"border: 1px solid black;width:calc(var(--unit)*2);height:calc(var(--unit)*1.7);display:grid;place-content:center;\">n</div><div style=\"border: 1px solid black;width:calc(var(--unit)*2);height:calc(var(--unit)*1.7);display:grid;place-content:center;\">e</div><div style=\"border: 1px solid black;width:calc(var(--unit)*2);height:calc(var(--unit)*1.7);display:grid;place-content:center;\">a</div><div style=\"border: 1px solid black;width:calc(var(--unit)*2);height:calc(var(--unit)*1.7);display:grid;place-content:center;\">p</div><div style=\"border: 1px solid black;width:calc(var(--unit)*2);height:calc(var(--unit)*1.7);display:grid;place-content:center;\">p</div><div style=\"border: 1px solid black;width:calc(var(--unit)*2);height:calc(var(--unit)*1.7);display:grid;place-content:center;\">l</div><div style=\"border: 1px solid black;width:calc(var(--unit)*2);height:calc(var(--unit)*1.7);display:grid;place-content:center;\">e</div></div><div style=\"display:grid;grid-auto-flow: column;grid-auto-columns: min-content;gap:0;font-family: Hack;width: min-content; font-size: 0.7em;\"><div style=\"width:calc(var(--unit)*2);height:calc(var(--unit)*1.2);display:grid;place-content:start center;\">-9</div><div style=\"width:calc(var(--unit)*2);height:calc(var(--unit)*1.2);display:grid;place-content:start center;\">-8</div><div style=\"width:calc(var(--unit)*2);height:calc(var(--unit)*1.2);display:grid;place-content:start center;\">-7</div><div style=\"width:calc(var(--unit)*2);height:calc(var(--unit)*1.2);display:grid;place-content:start center;\">-6</div><div style=\"width:calc(var(--unit)*2);height:calc(var(--unit)*1.2);display:grid;place-content:start center;\">-5</div><div style=\"width:calc(var(--unit)*2);height:calc(var(--unit)*1.2);display:grid;place-content:start center;\">-4</div><div style=\"width:calc(var(--unit)*2);height:calc(var(--unit)*1.2);display:grid;place-content:start center;\">-3</div><div style=\"width:calc(var(--unit)*2);height:calc(var(--unit)*1.2);display:grid;place-content:start center;\">-2</div><div style=\"width:calc(var(--unit)*2);height:calc(var(--unit)*1.2);display:grid;place-content:start center;\">-1</div></div></div></div><python>>>> fruit[:4]  # same as fruit[0:4]\n'pine'\n>>> fruit[4:]  # same as fruit[4:len(fruit)]\n'apple'\n\n>>> fruit[-5:]  # from index -5 to the end of string\n'apple'\n>>> fruit[-5:-2]  # letters at indices -5, -4, -3\n'app'\n</python></slide>\n<slide class=\"slide-notitle\"><h2 class=\"slide-title\" style=\"\" id=\"-12\"></h2><div style=\"margin: 0.5rem 0;\" class=\"grid ppt-only\"><div style=\"display:grid;grid-auto-flow: row;grid-auto-rows: min-content;gap:0;width: min-content;justify-self:center;\"><div style=\"display:grid;grid-auto-flow: column;grid-auto-columns: min-content;gap:0;font-family: Hack;width: min-content; font-size: 0.7em;\"><div style=\"width:calc(var(--unit)*2);height:calc(var(--unit)*1.2);display:grid;place-content:end center;\">0</div><div style=\"width:calc(var(--unit)*2);height:calc(var(--unit)*1.2);display:grid;place-content:end center;\">1</div><div style=\"width:calc(var(--unit)*2);height:calc(var(--unit)*1.2);display:grid;place-content:end center;\">2</div><div style=\"width:calc(var(--unit)*2);height:calc(var(--unit)*1.2);display:grid;place-content:end center;\">3</div><div style=\"width:calc(var(--unit)*2);height:calc(var(--unit)*1.2);display:grid;place-content:end center;\">4</div><div style=\"width:calc(var(--unit)*2);height:calc(var(--unit)*1.2);display:grid;place-content:end center;\">5</div><div style=\"width:calc(var(--unit)*2);height:calc(var(--unit)*1.2);display:grid;place-content:end center;\">6</div><div style=\"width:calc(var(--unit)*2);height:calc(var(--unit)*1.2);display:grid;place-content:end center;\">7</div><div style=\"width:calc(var(--unit)*2);height:calc(var(--unit)*1.2);display:grid;place-content:end center;\">8</div></div><div style=\"display:grid;grid-auto-flow: column;grid-auto-columns: min-content;gap:0;font-family: Hack;border: 1px solid black; width: min-content;\"><div style=\"border: 1px solid black;width:calc(var(--unit)*2);height:calc(var(--unit)*1.7);display:grid;place-content:center;\">p</div><div style=\"border: 1px solid black;width:calc(var(--unit)*2);height:calc(var(--unit)*1.7);display:grid;place-content:center;\">i</div><div style=\"border: 1px solid black;width:calc(var(--unit)*2);height:calc(var(--unit)*1.7);display:grid;place-content:center;\">n</div><div style=\"border: 1px solid black;width:calc(var(--unit)*2);height:calc(var(--unit)*1.7);display:grid;place-content:center;\">e</div><div style=\"border: 1px solid black;width:calc(var(--unit)*2);height:calc(var(--unit)*1.7);display:grid;place-content:center;\">a</div><div style=\"border: 1px solid black;width:calc(var(--unit)*2);height:calc(var(--unit)*1.7);display:grid;place-content:center;\">p</div><div style=\"border: 1px solid black;width:calc(var(--unit)*2);height:calc(var(--unit)*1.7);display:grid;place-content:center;\">p</div><div style=\"border: 1px solid black;width:calc(var(--unit)*2);height:calc(var(--unit)*1.7);display:grid;place-content:center;\">l</div><div style=\"border: 1px solid black;width:calc(var(--unit)*2);height:calc(var(--unit)*1.7);display:grid;place-content:center;\">e</div></div><div style=\"display:grid;grid-auto-flow: column;grid-auto-columns: min-content;gap:0;font-family: Hack;width: min-content; font-size: 0.7em;\"><div style=\"width:calc(var(--unit)*2);height:calc(var(--unit)*1.2);display:grid;place-content:start center;\">-9</div><div style=\"width:calc(var(--unit)*2);height:calc(var(--unit)*1.2);display:grid;place-content:start center;\">-8</div><div style=\"width:calc(var(--unit)*2);height:calc(var(--unit)*1.2);display:grid;place-content:start center;\">-7</div><div style=\"width:calc(var(--unit)*2);height:calc(var(--unit)*1.2);display:grid;place-content:start center;\">-6</div><div style=\"width:calc(var(--unit)*2);height:calc(var(--unit)*1.2);display:grid;place-content:start center;\">-5</div><div style=\"width:calc(var(--unit)*2);height:calc(var(--unit)*1.2);display:grid;place-content:start center;\">-4</div><div style=\"width:calc(var(--unit)*2);height:calc(var(--unit)*1.2);display:grid;place-content:start center;\">-3</div><div style=\"width:calc(var(--unit)*2);height:calc(var(--unit)*1.2);display:grid;place-content:start center;\">-2</div><div style=\"width:calc(var(--unit)*2);height:calc(var(--unit)*1.2);display:grid;place-content:start center;\">-1</div></div></div></div><python># Negative step size of -1 means go from \n# right to left, i.e. in reverse order\n>>> fruit[-4:-8:-1]  # letters at -4, -5, -6, -7\n'paen'\n\n# Omitting start and end mean select whole string,\n# but step size -1 means right to left i.e. reverse order \n>>> fruit[::-1]\n'elppaenip'\n</python><divider></divider></slide>","title":"3.2 — if statement, for loop, Indexing & Slicing Strings","date":"2024-01-16","published":true,"section":"Lecture-3.2"}},"__N_SSG":true}