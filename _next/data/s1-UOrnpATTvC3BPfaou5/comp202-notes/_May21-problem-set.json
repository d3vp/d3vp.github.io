{"pageProps":{"titles":["L1.1 — Computer and Programming Basics","L1.2 — Variables & Expressions","L2.1 — Control Flow Statements","Python Style Guide","May 14 — Problem Set","L2.2 — print(), String methods & while loop","May 17 — Problem Set","L3.1 — More loops & Defining functions","May 19 — Problem Set","L3.2 — Lists","May 21 — Problem Set"],"slugs":["Lecture-1.1","Lecture-1.2","Lecture-2.1","style-guide","_May14-problem-set","Lecture-2.2","_May17-problem-set","Lecture-3.1","_May19-problem-set","Lecture-3.2","_May21-problem-set"],"post":{"title":"May 21 — Problem Set","slug":"_May21-problem-set","content":"<h1>Review</h1>\n<h2>Creating a list</h2>\n<python># A list is created using square brackets, \n# with each element separated by a comma.\n>>> prime_numbers = [2, 3, 5, 7, 11, 13]\n>>> print(prime_numbers)\n[2, 3, 5, 7, 11, 13]\n\n>>> print(type(prime_numbers))\n&#x3C;class 'list'>\n</python>\n<h2>Indexing a list</h2>\n<p>We can access an element inside a list using indexing (square brackets), just as we did for strings.</p>\n<python>>>> days = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"]\n>>> first_day = days[0]\n>>> second_day = days[1]\n>>> last_day = days[6]\n>>> print(first_day, second_day, last_day)\nMon Tue Sun\n\n# No element at index 7\n>>> print(days[7])  \nIndexError: list index out of range\n\n>>> numbers = [1, 'two', 3.75]\n>>> print(numbers[0] + numbers[2])\n4.75\n>>> print(numbers[0] + numbers[1])\nTypeError: unsupported operand type(s) for +: 'int' and 'str'\n</python>\n<h2>List methods</h2>\n<python># list.append(x): \n#   Adds the element x to the end of the list.\n\nmylist = []\nfor i in range(10, 20):\n    mylist.append(i)\n    \nprint(mylist)\n\nmylist.append(\"hello\")\nprint(mylist)\n</python>\n<output>[10, 11, 12, 13, 14, 15, 16, 17, 18, 19]\n[10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 'hello']\n</output>\n<h2>If we want to initialize a list with same values:</h2>\n<python>mylist = []\nfor i in range(10):\n    mylist.append(0)\n    \nprint(mylist)\n\n# A simple way to do the same using repetition operator\nmylist = [0] * 10\nprint(mylist)\n</python>\n<output>[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n</output>\n<p><img style=\"display: block; margin: 3em auto; width: 15%;\" src=\"../assets/divider.svg\"></p>\n<h1>Problems</h1>\n<ol>\n<li>\n<p>Write a function <inline-code>min_max</inline-code> that takes a list of integers, called <inline-code>array</inline-code>, as an argument and returns a list with two numbers—the first number should be the smallest value in <inline-code>array</inline-code> and the second number should the largest value in <inline-code>array</inline-code>. You must use a loop and not <inline-code>min()</inline-code>/<inline-code>max()</inline-code> functions.</p>\n</li>\n<li>\n<p>Write a function <inline-code>reverse</inline-code> that takes a list <inline-code>array</inline-code> as an argument and returns a new list which contains same elements as in <inline-code>array</inline-code> but in reversed order. You must use <inline-code>for</inline-code> loop to do this.</p>\n</li>\n<li>\n<p>Write a function <inline-code>reverse_inplace</inline-code> that takes a list <inline-code>array</inline-code> as an argument and modifies <inline-code>array</inline-code> so that order of its elements are reversed.<br>\nThe function should not return anything.<br>\nYou must use a loop (for/while) to do this.<br>\nHint: similar to palindrome problem, use two indices—one for left-to-right and other for right-to-left. Then, swap elements at the two indices in each step.</p>\n</li>\n<li>\n<p>Write a function <inline-code>shift_right</inline-code> that takes a list <inline-code>array</inline-code> as argument and modifies <inline-code>array</inline-code> such that all the elements of <inline-code>array</inline-code> have been moved right by one position. The element at the end of the list should end up at the beginning.</p>\n<python>>>> mylist = [2, 4, 6, 8, 1, 2, 3]\n>>> shift_right(mylist)\n>>> print(mylist)\n[3, 2, 4, 6, 8, 1, 2]\n</python>\n<p>Hint: Use an intermediate list to store the result and copy elements back to the list <inline-code>array</inline-code>.</p>\n<p>Bonus question: Rewrite the function to avoid using an intermediate list.</p>\n</li>\n<li>\n<p>There are <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>100</mn></mrow><annotation encoding=\"application/x-tex\">100</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\">0</span></span></span></span></span> light bulbs lined up in a row in a long room. Each bulb has its own switch and is currently switched off. The room has an entry door and an exit door. There are 100 people lined up outside the entry door. Each bulb is numbered consecutively from 1 to 100. So is each person.</p>\n<p>Person No. 1 enters the room, switches on every bulb, and exits. Person No. 2 enters and flips the switch on every second bulb (turning off bulbs <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>2</mn><mo separator=\"true\">,</mo><mn>4</mn><mo separator=\"true\">,</mo><mn>6</mn><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi></mrow><annotation encoding=\"application/x-tex\">2, 4, 6, ...</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8388800000000001em;vertical-align:-0.19444em;\"></span><span class=\"mord\">2</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">4</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">6</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\">.</span></span></span></span></span>). Person No. 3 enters and flips the switch on every third bulb (changing the state on bulbs <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>3</mn><mo separator=\"true\">,</mo><mn>6</mn><mo separator=\"true\">,</mo><mn>9</mn><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi></mrow><annotation encoding=\"application/x-tex\">3, 6, 9, ...</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8388800000000001em;vertical-align:-0.19444em;\"></span><span class=\"mord\">3</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">6</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">9</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\">.</span></span></span></span></span>). This continues until all 100 people have passed through the room.</p>\n<p>What is the final state of bulb No. 64? And how many of the light bulbs are illuminated after the 100th person has passed through the room?</p>\n<p>Write a program that simulates this process and prints answer to above questions.</p>\n<p>Problem statement from <a href=\"http://puzzles.nigelcoldwell.co.uk/six.htm\">http://puzzles.nigelcoldwell.co.uk/six.htm</a><br>\nFrom a mathematical perspective, a simple solution exists (<a href=\"https://www.youtube.com/watch?v=WNhxkpmVQYw\">https://www.youtube.com/watch?v=WNhxkpmVQYw</a>), but we are interested in solving this problem with programming and not math.</p>\n<p>Hint: use a list to store the state of each bulb (on/off) and use loops to simulate the process above (change state of the bulbs in each step).</p>\n</li>\n</ol>\n<p><img style=\"display: block; margin: 3em auto; width: 15%;\" src=\"../assets/divider.svg\"></p>"}},"__N_SSG":true}