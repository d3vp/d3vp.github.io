{"pageProps":{"allSlugs":[["Lecture-1",[{"title":"1 — Programming Basics","slug":"Lecture-1"}]],["Lecture-2.1",[{"title":"2.1 — Variables, Arithmetic & String operations","slug":"Lecture-2.1"}]],["Lecture-2.2",[{"title":"2.2 — Function calls, Defining functions, Types of Errors","slug":"Lecture-2.2"}]],["Lecture-3.1",[{"title":"3.1 — Order of Expression Evaluation, Comparing Values, Conditional Execution","slug":"Lecture-3.1"}]],["Lecture-3.2",[{"title":"3.2 — if statement, for loop, Indexing & Slicing Strings","slug":"Lecture-3.2"}]],["Lecture-4.1",[{"title":"4.1 — return vs. print, while statement, Modules","slug":"Lecture-4.1"}]],["Lecture-4.2",[{"title":"4.2 — String methods, break & continue statements","slug":"Lecture-4.2"}]],["Lecture-5.1",[{"title":"5.1 — Controlling print(), Nested Loops, Lists","slug":"Lecture-5.1"}]],["Lecture-5.2",[{"title":"5.2 — Scope of variables, List operations","slug":"Lecture-5.2"}]],["Lecture-6.1",[{"title":"6.1 — Tuples, Immutable objects, Sets","slug":"Lecture-6.1"}]],["Lecture-6.2",[{"title":"6.2 — More list & set operations, Dictionaries","slug":"Lecture-6.2"}]],["Lecture-7.1",[{"title":"7.1 — Iterables, Unpacking, Nested Lists","slug":"Lecture-7.1"}]],["Lecture-7.2",[{"title":"7.2 — Nested data structures, Comprehensions, Modules","slug":"Lecture-7.2"}]],["Lecture-8.1",[{"title":"8.1 — Nested list comprehensions, Reading & Writing Files","slug":"Lecture-8.1"}]],["Lecture-8.2",[{"title":"8.2 — Shallow vs. deep copy, Handling exceptions","slug":"Lecture-8.2"}]],["Lecture-9.1",[{"title":"9.1 — Object Oriented Programming (OOP)","slug":"Lecture-9.1"}]],["Lecture-9.2",[{"title":"9.2 — Keyword arguments, More on OOP","slug":"Lecture-9.2"}]],["Lecture-10.1",[{"title":"10.1 — NumPy","slug":"Lecture-10.1"}]],["Lecture-10.2",[{"title":"10.2 — More Numpy, Plotting using Matplotlib","slug":"Lecture-10.2"}]],["Lecture-11.1",[{"title":"11.1 — More Numpy, Linear algebra, Random numbers","slug":"Lecture-11.1"}]],["Lecture-11.2",[{"title":"11.2 — Interpolation, Curve fitting, Numerical Integration","slug":"Lecture-11.2"}]],["Lecture-12.1",[{"title":"12.1 — Using SciPy, System of Linear Equations","slug":"Lecture-12.1"}]]],"post":{"slug":"Lecture-11.1","content":"<slide class=\"slide-normal\"><h2 class=\"slide-title\" style=\"\" id=\"numpy-arrays-and-for-loop\">Numpy arrays and <inline-code>for</inline-code> loop</h2><hgrid><python>import numpy as np\n\nx = np.arange(1, 13)\nprint(x)\nprint(x.shape)\n\nfor i in range(x.shape[0]):\n    x[i] = x[i] ** 2\n    \nprint(x)\nprint(x.shape)\n</python><output>[ 1  2  3  4  5  6  \n7  8  9 10 11 12]\n(12,)\n[  1   4   9  16  25  36  \n49  64  81 100 121 144]\n(12,)\n</output></hgrid></slide>\n<slide class=\"slide-notitle\"><h2 class=\"slide-title\" style=\"\" id=\"\"></h2><hgrid><python>import numpy as np\n\nmatrix = np.arange(1, 13).reshape((3, 4))\nprint(matrix)\nprint(matrix.shape)\n\nfor i in range(matrix.shape[0]):\n    for j in range(matrix.shape[1]):\n        matrix[i, j] = matrix[i, j] ** 2\n    \nprint(matrix)\nprint(matrix.shape)\n</python><output>[[ 1  2  3  4]\n [ 5  6  7  8]\n [ 9 10 11 12]]\n(3, 4)\n[[  1   4   9  16]\n [ 25  36  49  64]\n [ 81 100 121 144]]\n(3, 4)\n</output></hgrid></slide>\n<slide class=\"slide-normal\"><h2 class=\"slide-title\" style=\"\" id=\"comparison-operation-with-numpy-array\">Comparison operation with NumPy array</h2><p>When comparison operators are used with NumPy arrays, result is an array of boolean values.</p><python>import numpy as np\n\narr = np.array([10, 11, 12, 13, 14, 15, 16, 17])\nprint(arr % 2 == 0) # produces numpy array of booleans\n# [ True False  True False  True False  True False]\n\narr = np.array([-10, -20, 0, 24, -50, 33, 10])\nprint(arr > 0)\n# [False False False  True False  True  True]\n</python></slide>\n<slide class=\"slide-normal\"><h2 class=\"slide-title\" style=\"\" id=\"using-a-listarray-of-booleans-as-index\">Using a list/array of booleans as index</h2><python>import numpy as np\n\narr = np.array([10, 11, 12, 13])\nindices = [True, False, False, True]\n# For each i, select arr[i] if indices[i] is True:\nprint(arr[indices])  # [10 13]\n\narr = np.array([10, 11, 12, 13, 14, 15, 16, 17])\nprint(arr[arr % 2 == 0])  # [10 12 14 16]\n\narr = np.array([-10, -20, 0, 24, -50, 33, 10])\nprint(arr[arr > 0])  # [24 33 10]\n</python></slide>\n<slide class=\"slide-normal\"><h2 class=\"slide-title\" style=\"\" id=\"using-a-listarray-of-integers-as-index\">Using a list/array of integers as index</h2><p>Multiple elements of a numpy array can be selected using a list or an array of indices.</p><python>nums = np.arange(10, 100, 10)\n# [10 20 30 40 50 60 70 80 90]\n\nindices = [0, 1, 5]\nprint(nums[indices]) # [10 20 60]\n\n# Output will be in same order as indices\nindices = np.array([2, 8, 5, 1])\nprint(nums[indices]) # [30 90 60 20]\n</python></slide>\n<slide class=\"slide-notitle\"><h2 class=\"slide-title\" style=\"\" id=\"-1\"></h2><p>Indexing 2D arrays with list/array of indices:</p><hgrid margin=\"0\"><python>import numpy as np\nmatrix = np.arange(1, 13).reshape((3,4))\nprint(matrix)\n\n# Select rows 0 &#x26; 2\nrow_indices = [0, 2]  \nprint(matrix[row_indices, :])\n\n# Select columns 1 &#x26; 2\ncol_indices = [1, 2]\nprint(matrix[:, col_indices])\n\n# Select numbers at (0, 1) and  (2, 2)\nprint(matrix[row_indices, col_indices])\n</python><output>[[ 1  2  3  4]\n [ 5  6  7  8]\n [ 9 10 11 12]]\n\n[[ 1  2  3  4]\n [ 9 10 11 12]]\n\n[[ 2  3]\n [ 6  7]\n [10 11]]\n\n[ 2 11]\n</output></hgrid></slide>\n<slide class=\"slide-normal\"><h2 class=\"slide-title\" style=\"\" id=\"vector-and-matrix-operations-in-numpy\">Vector and Matrix operations in NumPy</h2><python>import numpy as np\nv = np.arange(10, 70, 10)  # 1D array as vector\nprint(v)  #[10 20 30 40 50 60]\n\nM = np.arange(10, 100, 10).reshape((3,3))  # 2D array as matrix\nprint(M)\n# [[10 20 30]\n#  [40 50 60]\n#  [70 80 90]]\n\n# ndarray.size attribute — total number of elements in ndarray\nprint(v.size)  # 6\nprint(M.size) # 9\n</python></slide>\n<slide class=\"slide-normal\"><h2 class=\"slide-title\" style=\"\" id=\"stacking-new-rowscolumns-into-a-matrix\">Stacking new rows/columns into a matrix</h2><p>Size of new row/col must match that of the matrix row/col.</p><hgrid><python>import numpy as np\nM = np.arange(1, 7).reshape((2, 3))\nprint(M)\n\nv = np.array([-1, -2])\nM2 = np.column_stack([M, v])\nprint(M2)\n\nw = np.array([5, 7, -1])\nM3 = np.row_stack([M, w])\nprint(M3)\n</python><output>[[1 2 3]\n [4 5 6]]\n[[ 1  2  3 -1]\n [ 4  5  6 -2]]\n[[ 1  2  3]\n [ 4  5  6]\n [ 5  7 -1]]\n</output></hgrid></slide>\n<slide class=\"slide-normal\"><h2 class=\"slide-title\" style=\"\" id=\"matrix-multiplication\">Matrix Multiplication</h2><ul>\n<li>\n<p>Interactive explanation for matrix multiplication: <a href=\"https://observablehq.com/@meetamit/matrix-multiplication\">https://observablehq.com/@meetamit/matrix-multiplication</a></p>\n</li>\n<li>\n<p>The <inline-code>@</inline-code> operator performs matrix multiplication with NumPy arrays.</p>\n<ul>\n<li><inline-code>np.dot</inline-code> can also be used to do matrix multiplication.</li>\n</ul>\n</li>\n<li>\n<p>Recall that <inline-code>*</inline-code> operator performs element-wise multiplication.</p>\n</li>\n</ul></slide>\n<slide class=\"slide-notitle\"><h2 class=\"slide-title\" style=\"\" id=\"-2\"></h2><python>import numpy as np\nA = np.arange(10, 70, 10).reshape((3, 2))\nB = np.arange(10, 70, 10).reshape((2, 3))\nprint(A)\n#[[10 20]\n# [30 40]\n# [50 60]]\nprint(B)\n#[[10 20 30]\n# [40 50 60]]\n\nC = A @ B\nprint(C)\n#[[ 900 1200 1500]\n# [1900 2600 3300]\n# [2900 4000 5100]]\n</python></slide>\n<slide class=\"slide-notitle\"><h2 class=\"slide-title\" style=\"\" id=\"-3\"></h2><python>import numpy as np\n\nA = np.array([[83, 10, 39],\n              [29, 67, 81]])\nprint(A @ A)\n# ValueError: matmul: Input operand 1 has a mismatch in \n# its core dimension 0, (size 2 is different from 3)\n</python></slide>\n<slide class=\"slide-normal\"><h2 class=\"slide-title\" style=\"\" id=\"example\">Example</h2><p>Let’s compute the following</p><div class=\"math math-display\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mstyle mathsize=\"0.9em\"><mn>2</mn><mi>A</mi><mo>+</mo><mi>A</mi><mi>B</mi><mo>−</mo><mn>3</mn><mi>I</mi></mstyle></mrow><annotation encoding=\"application/x-tex\">    \\small\n    2A + AB - 3I</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69em;vertical-align:-0.075em;\"></span><span class=\"mord sizing reset-size6 size5\">2</span><span class=\"mord mathnormal sizing reset-size6 size5\">A</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin sizing reset-size6 size5\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69em;vertical-align:-0.075em;\"></span><span class=\"mord mathnormal sizing reset-size6 size5\">A</span><span class=\"mord mathnormal sizing reset-size6 size5\" style=\"margin-right:0.05017em;\">B</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin sizing reset-size6 size5\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.615em;\"></span><span class=\"mord sizing reset-size6 size5\">3</span><span class=\"mord mathnormal sizing reset-size6 size5\" style=\"margin-right:0.07847em;\">I</span></span></span></span></span></div><p>where given matrices A and B (I is the identity matrix). Shapes of all matrices must match.</p></slide>\n<slide class=\"slide-notitle\"><h2 class=\"slide-title\" style=\"\" id=\"-4\"></h2><solution><python>import numpy as np\n\nA = np.array([[1, 5], [-2, 9]])\nB = np.array([[2, 5], [1, -2]])\nI = np.eye(2) # 2x2 identity matrix\n\nresult = 2 * A +  A @ B - 3 * I\nprint(result)\n</python></solution></slide>\n<slide class=\"slide-normal\"><h2 class=\"slide-title\" style=\"\" id=\"powers-of-a-matrix\">Powers of a matrix</h2><python>import numpy as np\nfrom numpy.linalg import matrix_power\n\nA = np.array([[1, 5], [-2, 9]])\n\n# Cube of the matrix A\nprint(A @ A @ A)\n#[[-109  405]\n# [-162  539]]\n\n# Another way, using library function:\nprint(matrix_power(A, 3))\n</python></slide>\n<slide class=\"slide-notitle\"><h2 class=\"slide-title\" style=\"\" id=\"-5\"></h2><p></p><h1 class=\"sans\" id=\"random-numbers-and-monte-carlo-methods\">Random numbers and Monte Carlo methods</h1><p></p></slide>\n<slide class=\"slide-normal\"><h2 class=\"slide-title\" style=\"\" id=\"python-random-module\">Python random module</h2><python>import random\n\nnums = [5, 4, 3, 2, 100, 1]\n\n# Randomly choose one item from mylist\nprint(random.choice(nums))  # 5\n\n# Randomly choose a list of 3 items from the list\n# An element in the list is chosen only once.\nprint(random.sample(nums, 3))  # [4, 5, 100]\n</python></slide>\n<slide class=\"slide-normal\"><h2 class=\"slide-title\" style=\"\" id=\"random-numbers-in-numpy\">Random numbers in NumPy</h2><python>import numpy as np\n\n# All output numbers below will change each time your run the code.\n# But shape of arrays should remain same.\n\nx = np.random.random() # a random float in [0, 1)\nprint(x)  # 0.2894424639826647\n\n# array of 5 floats, each value in [0, 1)\nnums = np.random.random(5)\nprint(nums)\n# [0.564407   0.36047169 0.68956636 0.11457356 0.26594372]\n</python></slide>\n<slide class=\"slide-notitle\"><h2 class=\"slide-title\" style=\"\" id=\"-6\"></h2><python>import numpy as np\n\n# 3x2 matrix, each float in [0, 1)\nmatrix = np.random.random((3, 2))\nprint(matrix)\n# [[0.573776   0.37419411]\n#  [0.23126045 0.32425979]\n#  [0.81373111 0.33039031]]\n\n# random integer  in [1, 5)\nx = np.random.randint(1, 5)\nprint(x)  # 2\n</python></slide>\n<slide class=\"slide-notitle\"><h2 class=\"slide-title\" style=\"\" id=\"-7\"></h2><python>import numpy as np\n\n# random array of size 7, each integer in [1, 5)\nnums = np.random.randint(1, 5, 7)\nprint(nums)  # [4 4 1 3 3 1 4]\n\n# 3x2 matrix, each integer in [1, 10)\nmatrix = np.random.randint(1, 10, (3, 2))\nprint(matrix)\n# [[4 7]\n#  [4 6]\n#  [3 9]]\n</python></slide>\n<slide class=\"slide-notitle\"><h2 class=\"slide-title\" style=\"\" id=\"-8\"></h2><python>import numpy as np\n\nnums = [5, 4, 3, 2, 100, 1]\n# choose a single number from list\nx = np.random.choice(nums)\nprint(x)  # 4\n\n# Choose 10 numbers from the list.\n# Each number is chosen independently, so numbers may repeat.\nmany = np.random.choice(nums, 10)\nprint(many)\n# [3 4 3 3 3 1 5 2 4 2]\n</python></slide>\n<slide class=\"slide-normal\"><h2 class=\"slide-title\" style=\"\" id=\"example-throwing-an-unbiased-die\">Example: throwing an unbiased die</h2><ul>\n<li>\n<p>Let’s throw an unbiased six-sided die and count the number of occurrences of 4.</p>\n</li>\n<li>\n<p>Unbiased or unweighted means that every integer from 1 to 6 is equally likely to roll. That is, the die is “fair”.</p>\n</li>\n</ul></slide>\n<slide class=\"slide-notitle\"><h2 class=\"slide-title\" style=\"\" id=\"-9\"></h2><python>import random\n\noptions = [1, 2, 3, 4, 5, 6] # six faces of the die\nnum_rolls = 1000\n\nnum_fours = 0\nfor i in range(num_rolls):\n   roll = random.choice(options)\n   if roll == 4:\n      num_fours += 1\n\nprint(\"Frequency of 4:\", num_fours / num_rolls)\n</python></slide>\n<slide class=\"slide-notitle\"><h2 class=\"slide-title\" style=\"\" id=\"-10\"></h2><p>Let’s do the same using NumPy:</p><python>import numpy as np\n\noptions = np.arange(1, 7) # six faces of the die\nnum_rolls = 1000\n\nrolls = np.random.choice(options, num_rolls)\nfreq = rolls[rolls == 4].size / num_rolls\n\nprint(\"Frequency of 4:\", freq)\n</python></slide>\n<slide class=\"slide-normal\"><h2 class=\"slide-title\" style=\"\" id=\"example-throwing-a-biased-or-weighted-die\">Example: throwing a biased or weighted die</h2><ul>\n<li>Let’s throw a biased, or weighted, six-sided die where we favor number 3 over others by giving it more “weight” or probability.\n<ul>\n<li>Such a die would be called “unfair.”</li>\n</ul>\n</li>\n</ul></slide>\n<slide class=\"slide-notitle\"><h2 class=\"slide-title\" style=\"\" id=\"-11\"></h2><python>import numpy as np\n\noptions = [1, 2, 3, 4, 5, 6]\n\n# Assign unequal weights or probabilties to each choices\n# Weights must sum to 1.0\nweights = [.1, .1, .5, .1, .1, .1 ]\n\nnum_rolls = 1000\n\nrolls = np.random.choice(options, num_rolls, p=weights)\nfreq = rolls[rolls == 3].size / num_rolls\n\nprint(\"Frequency of 3:\", freq)\n</python></slide>\n<slide class=\"slide-normal\"><h2 class=\"slide-title\" style=\"\" id=\"monte-carlo-methods\">Monte Carlo methods</h2><ul>\n<li>\n<p>A type of algorithm that uses random sampling to solve problems.</p>\n</li>\n<li>\n<p>There are Monte Carlo methods for many different problems in physics, chemistry, AI and engineering.</p>\n<ul>\n<li><a href=\"https://en.wikipedia.org/wiki/Monte_Carlo_method#Engineering\">https://en.wikipedia.org/wiki/Monte_Carlo_method#Engineering</a></li>\n</ul>\n</li>\n<li>\n<p>We will see a simple case here with a Monte Carlo method for integration.</p>\n</li>\n</ul></slide>\n<slide class=\"slide-normal\"><h2 class=\"slide-title\" style=\"\" id=\"finding-the-area-of-a-complex-shape\">Finding the area of a complex shape</h2><ul>\n<li>\n<p>Let’s say we have a complex shape and we want to find its area.</p>\n</li>\n<li>\n<p>We will draw a rectangle around this shape, then sample random points inside the rectangle.</p>\n</li>\n<li>\n<p>Then we can estimate the area of the inner shape by multiplying the rectangle’s area by the fraction of points that land inside the shape.</p>\n</li>\n</ul><div class=\"math math-display\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mstyle mathsize=\"0.9em\"><msub><mtext>area</mtext><mtext>shape</mtext></msub><mo>≈</mo><msub><mtext>area</mtext><mtext>rectangle</mtext></msub><mo>∗</mo><mfrac><msub><mtext>points</mtext><mtext>inside</mtext></msub><mrow><msub><mtext>points</mtext><mtext>inside</mtext></msub><mo>+</mo><msub><mtext>points</mtext><mtext>outside</mtext></msub></mrow></mfrac></mstyle></mrow><annotation encoding=\"application/x-tex\">\\small\n\\textup{area}_\\textup{shape} \\approx \\textup{area}_\\textup{rectangle} * \\frac{\\textup{points}_\\textup{inside}}{\\textup{points}_\\textup{inside} + \\textup{points}_\\textup{outside}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6865em;vertical-align:-0.2517em;\"></span><span class=\"mord sizing reset-size6 size5\"><span class=\"mord text\"><span class=\"mord textup\">area</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.313em;\"><span style=\"top:-2.45em;margin-right:0.0556em;\"><span class=\"pstrut\" style=\"height:2.6em;\"></span><span class=\"sizing reset-size5 size2 mtight\"><span class=\"mord text mtight\"><span class=\"mord textup mtight\">shape</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2796em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel sizing reset-size6 size5\">≈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6704em;vertical-align:-0.2517em;\"></span><span class=\"mord sizing reset-size6 size5\"><span class=\"mord text\"><span class=\"mord textup\">area</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.313em;\"><span style=\"top:-2.45em;margin-right:0.0556em;\"><span class=\"pstrut\" style=\"height:2.6em;\"></span><span class=\"sizing reset-size5 size2 mtight\"><span class=\"mord text mtight\"><span class=\"mord textup mtight\">rectangle</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2796em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin sizing reset-size6 size5\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.0628em;vertical-align:-0.8524em;\"></span><span class=\"mord sizing reset-size6 size5\"><span class=\"mopen nulldelimiter sizing reset-size5 size6\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3449em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord text\"><span class=\"mord textup\">points</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2019em;\"><span style=\"top:-2.3389em;margin-right:0.0556em;\"><span class=\"pstrut\" style=\"height:2.6em;\"></span><span class=\"sizing reset-size5 size2 mtight\"><span class=\"mord text mtight\"><span class=\"mord textup mtight\">inside</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2611em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord textup\">points</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2019em;\"><span style=\"top:-2.3389em;margin-right:0.0556em;\"><span class=\"pstrut\" style=\"height:2.6em;\"></span><span class=\"sizing reset-size5 size2 mtight\"><span class=\"mord text mtight\"><span class=\"mord textup mtight\">outside</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2611em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord text\"><span class=\"mord textup\">points</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2019em;\"><span style=\"top:-2.3389em;margin-right:0.0556em;\"><span class=\"pstrut\" style=\"height:2.6em;\"></span><span class=\"sizing reset-size5 size2 mtight\"><span class=\"mord text mtight\"><span class=\"mord textup mtight\">inside</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2611em;\"><span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9471em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter sizing reset-size5 size6\"></span></span></span></span></span></span></div></slide>\n<slide class=\"slide-normal\"><h2 class=\"slide-title\" style=\"\" id=\"monte-carlo-integration\">Monte Carlo integration</h2><ul>\n<li>\n<p>We can use the above idea of finding area to numerically integrate a function.</p>\n</li>\n<li>\n<p>For a given function <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">f(x)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span></span></span></span></span>, we define a rectangle that bounds <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">f(x)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span></span></span></span></span> along X-axis between <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>a</mi><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[a, b]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">a</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">]</span></span></span></span></span> and along Y-axis between <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mn>0</mn><mo separator=\"true\">,</mo><mi>c</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[0, c]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mclose\">]</span></span></span></span></span>,  where</p>\n<div class=\"math math-display\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mstyle mathsize=\"0.9em\"><mi>c</mi><mo>></mo><mo>=</mo><munder><mrow><mi>max</mi><mo>⁡</mo></mrow><mrow><mi>x</mi><mi>ϵ</mi><mo stretchy=\"false\">(</mo><mi>a</mi><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow></munder><mi>f</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mstyle></mrow><annotation encoding=\"application/x-tex\">    \\small\n    c >= \\max_{x \\epsilon (a, b)} f(x)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5204em;vertical-align:-0.0352em;\"></span><span class=\"mord mathnormal sizing reset-size6 size5\">c</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel sizing reset-size6 size5\">>=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.5144em;vertical-align:-0.8394em;\"></span><span class=\"mop op-limits sizing reset-size6 size5\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4306em;\"><span style=\"top:-2.234em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:2.9em;\"></span><span class=\"sizing reset-size5 size2 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">x</span><span class=\"mord mathnormal mtight\">ϵ</span><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">a</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span><span class=\"mclose mtight\">)</span></span></span></span><span style=\"top:-2.9em;\"><span class=\"pstrut\" style=\"height:2.9em;\"></span><span><span class=\"mop\">max</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9327em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal sizing reset-size6 size5\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen sizing reset-size6 size5\">(</span><span class=\"mord mathnormal sizing reset-size6 size5\">x</span><span class=\"mclose sizing reset-size6 size5\">)</span></span></span></span></span></div>\n</li>\n<li>\n<p>Then we can estimate the integral by randomly choosing points inside the rectangle, and using the formula of area from the previous slide.</p>\n</li>\n</ul></slide>\n<slide class=\"slide-notitle\"><h2 class=\"slide-title\" style=\"\" id=\"-12\"></h2><p>Example:</p><ul>\n<li>\n<p>Consider the following function:</p>\n<div class=\"math math-display\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mstyle mathsize=\"0.9em\"><mi>f</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mrow><mo fence=\"true\">∣</mo><mi>s</mi><mi>i</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mn>2</mn><mi>π</mi><mi>x</mi><msup><mo stretchy=\"false\">)</mo><mn>5</mn></msup><mo>−</mo><mn>2</mn><mi>c</mi><mi>o</mi><mi>s</mi><mo stretchy=\"false\">(</mo><mn>3</mn><mi>c</mi><mi>o</mi><mi>s</mi><mo stretchy=\"false\">(</mo><mfrac><mi>x</mi><mi>π</mi></mfrac><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup><msup><mo stretchy=\"false\">)</mo><mn>3</mn></msup><mo fence=\"true\">∣</mo></mrow></mstyle></mrow><annotation encoding=\"application/x-tex\">    \\small\n    f(x) = \\left | sin(2\\pi x)^5 - 2cos(3cos( \\frac{x}{\\pi} )^2)^3     \\right |</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9em;vertical-align:-0.225em;\"></span><span class=\"mord mathnormal sizing reset-size6 size5\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen sizing reset-size6 size5\">(</span><span class=\"mord mathnormal sizing reset-size6 size5\">x</span><span class=\"mclose sizing reset-size6 size5\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel sizing reset-size6 size5\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.812em;vertical-align:-0.675em;\"></span><span class=\"minner sizing reset-size6 size5\"><span class=\"mopen sizing reset-size5 size6\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.137em;\"><span style=\"top:-1.941em;\"><span class=\"pstrut\" style=\"height:2.616em;\"></span><span class=\"delimsizinginner delim-size1\"><span>∣</span></span></span><span style=\"top:-2.539em;\"><span class=\"pstrut\" style=\"height:2.616em;\"></span><span style=\"height:0.616em;width:0.3333em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.3333em\" height=\"0.616em\" style=\"width:0.3333em\" viewBox=\"0 0 333.33000000000004 616\" preserveAspectRatio=\"xMinYMin\"><path d=\"M145 0 H188 V616 H145z M145 0 H188 V616 H145z\"></path></svg></span></span><span style=\"top:-3.147em;\"><span class=\"pstrut\" style=\"height:2.616em;\"></span><span class=\"delimsizinginner delim-size1\"><span>∣</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.675em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">in</span><span class=\"mopen\">(</span><span class=\"mord\">2</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">π</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8426em;\"><span style=\"top:-3.013em;margin-right:0.0556em;\"><span class=\"pstrut\" style=\"height:2.6em;\"></span><span class=\"sizing reset-size5 size2 mtight\"><span class=\"mord mtight\">5</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">2</span><span class=\"mord mathnormal\">cos</span><span class=\"mopen\">(</span><span class=\"mord\">3</span><span class=\"mord mathnormal\">cos</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mopen nulldelimiter sizing reset-size5 size6\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.1076em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">π</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter sizing reset-size5 size6\"></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8426em;\"><span style=\"top:-3.013em;margin-right:0.0556em;\"><span class=\"pstrut\" style=\"height:2.6em;\"></span><span class=\"sizing reset-size5 size2 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8426em;\"><span style=\"top:-3.013em;margin-right:0.0556em;\"><span class=\"pstrut\" style=\"height:2.6em;\"></span><span class=\"sizing reset-size5 size2 mtight\"><span class=\"mord mtight\">3</span></span></span></span></span></span></span></span><span class=\"mclose sizing reset-size5 size6\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.137em;\"><span style=\"top:-1.941em;\"><span class=\"pstrut\" style=\"height:2.616em;\"></span><span class=\"delimsizinginner delim-size1\"><span>∣</span></span></span><span style=\"top:-2.539em;\"><span class=\"pstrut\" style=\"height:2.616em;\"></span><span style=\"height:0.616em;width:0.3333em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.3333em\" height=\"0.616em\" style=\"width:0.3333em\" viewBox=\"0 0 333.33000000000004 616\" preserveAspectRatio=\"xMinYMin\"><path d=\"M145 0 H188 V616 H145z M145 0 H188 V616 H145z\"></path></svg></span></span><span style=\"top:-3.147em;\"><span class=\"pstrut\" style=\"height:2.616em;\"></span><span class=\"delimsizinginner delim-size1\"><span>∣</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.675em;\"><span></span></span></span></span></span></span></span></span></span></span></span></div>\n</li>\n<li>\n<p>We can’t integrate this analytically (i.e. representing it in terms of standard math functions).</p>\n</li>\n<li>\n<p>So let’s use Monte Carlo integration instead.</p>\n</li>\n</ul></slide>\n<slide class=\"slide-notitle\"><h2 class=\"slide-title\" style=\"\" id=\"-13\"></h2><python>import numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef f(x): # x is numpy array\n    y = np.sin(2 * np.pi * x) ** 5\n    y -= 2 * np.cos(3 * np.cos(x / np.pi) ** 2) ** 3\n    return np.abs(y)\n\n\nx = np.linspace(0, 10, num=1001)\nplt.figure()\nplt.plot(x, f(x))\nplt.show()\n</python></slide>\n<slide class=\"slide-notitle\"><h2 class=\"slide-title\" style=\"\" id=\"-14\"></h2><img src=\"week13/function.png\"></slide>\n<slide class=\"slide-notitle\"><h2 class=\"slide-title\" style=\"\" id=\"-15\"></h2><ul>\n<li>\n<p>Suppose we want to calculate the definite integral of <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">f(x)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span></span></span></span></span> in interval <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mn>0</mn><mo separator=\"true\">,</mo><mn>10</mn><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[0, 10]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">10</span><span class=\"mclose\">]</span></span></span></span></span></p>\n</li>\n<li>\n<p>We then choose the rectangle bounds as:</p>\n<ul>\n<li><span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mn>0</mn><mo separator=\"true\">,</mo><mn>10</mn><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[0, 10]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">10</span><span class=\"mclose\">]</span></span></span></span></span> along X-axis</li>\n<li><span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mn>0</mn><mo separator=\"true\">,</mo><mn>3</mn><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[0, 3]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">3</span><span class=\"mclose\">]</span></span></span></span></span> along Y-axis because from the plot\n<div class=\"math math-display\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mstyle mathsize=\"0.9em\"><mn>3</mn><mo>></mo><mo>=</mo><munder><mrow><mi>max</mi><mo>⁡</mo></mrow><mrow><mi>x</mi><mi>ϵ</mi><mo stretchy=\"false\">(</mo><mn>0</mn><mo separator=\"true\">,</mo><mn>10</mn><mo stretchy=\"false\">)</mo></mrow></munder><mi>f</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mstyle></mrow><annotation encoding=\"application/x-tex\">    \\small\n    3 >= \\max_{x \\epsilon (0, 10)} f(x)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6152em;vertical-align:-0.0352em;\"></span><span class=\"mord sizing reset-size6 size5\">3</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel sizing reset-size6 size5\">>=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.5144em;vertical-align:-0.8394em;\"></span><span class=\"mop op-limits sizing reset-size6 size5\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4306em;\"><span style=\"top:-2.234em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:2.9em;\"></span><span class=\"sizing reset-size5 size2 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">x</span><span class=\"mord mathnormal mtight\">ϵ</span><span class=\"mopen mtight\">(</span><span class=\"mord mtight\">0</span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\">10</span><span class=\"mclose mtight\">)</span></span></span></span><span style=\"top:-2.9em;\"><span class=\"pstrut\" style=\"height:2.9em;\"></span><span><span class=\"mop\">max</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9327em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal sizing reset-size6 size5\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen sizing reset-size6 size5\">(</span><span class=\"mord mathnormal sizing reset-size6 size5\">x</span><span class=\"mclose sizing reset-size6 size5\">)</span></span></span></span></span></div>\n</li>\n</ul>\n</li>\n<li>\n<p>Then, we compute number of points below the function f(x) in the above defined rectangle</p>\n</li>\n<li>\n<p>Check <inline-code>montecarlo_integration.py</inline-code> for the implementation.</p>\n</li>\n</ul></slide>\n<slide class=\"slide-notitle\"><h2 class=\"slide-title\" style=\"\" id=\"-16\"></h2><img src=\"week13/mc_integration.png\"></slide>\n<slide class=\"slide-notitle\"><h2 class=\"slide-title\" style=\"\" id=\"-17\"></h2><ul>\n<li>There are several methods that can perform Monte Carlo integration.</li>\n<li>The one we’ve seen is called the rectangle method, or dart method.</li>\n<li>It can only be used for simple functions and its accuracy is not very high.</li>\n</ul><divider></divider></slide>","title":"11.1 — More Numpy, Linear algebra, Random numbers","date":"2024-03-17","published":true,"section":"Lecture-11.1"}},"__N_SSG":true}