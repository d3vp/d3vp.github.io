{"pageProps":{"titles":["Week 1 — Computer and Programming Basics","Week 2 — Types, Variables, Expressions, Functions","Sep 9-10 Problem Set 2","Week 3 —  Conditionals & Iteration","Sep 16-17 Problem Set","Week 4 —  print(), String methods, while loop","Python Style Guide","Sep 23-24 Problem Set","Week 5 —  Scope of variables, Lists & Tuples","Sep 30-Oct 1 Problem Set","Week 6 —  Immutability, Dictionary & Set","Oct 7-8 Problem Set","Week 7 —  Nested data structures, iterables, comprehensions","Week 8 —  Exceptions & File IO","Oct 21-22 Problem Set","Week 9 — Object oriented programming","Oct 28-29 — Problem Set"],"slugs":["Lecture-1.2","Lecture-week2","_Sep09-problem-set","Lecture-week3","_Sep16-17-problem-set","Lecture-week4","style-guide","_Sep23-24-problem-set","Lecture-week5","_Sep30-Oct1-problem-set","Lecture-week6","_Oct7-8-problem-set","Lecture-week7","Lecture-week8","_Oct21-22_problem-set","Lecture-week9","_Oct28-29_problem-set"],"post":{"title":"Sep 16-17 Problem Set","slug":"_Sep16-17-problem-set","content":"<p>Click “Show answer” button after a question to see the solution.<br>\nIf a question does not have solution, it means that solution can be easily obtained by running code in Thonny.</p>\n<h1>Short questions</h1>\n<p><span style=\"margin-left: -1em;\"><span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1.</mn></mrow><annotation encoding=\"application/x-tex\">1.</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mord\">.</span></span></span></span></span></span> What would each of the following Boolean expressions evaluate to?</p>\n<python>x = 3\ny = 5\nz = 7\n\nprint(x != y - 2)\n\nprint(x >= 0 and x &#x3C; 10)\n\nprint(x &#x3C; 0 and x &#x3C; 10)\n\nprint(x &#x3C; y or y &#x3C; z)\n\nprint(x &#x3C; y and y &#x3C; z)\n\nprint((x + z) // 2 == y)\n</python>\n<hr style=\"margin: 2em auto; border-top: 1px solid #b0b0b0;\">\n<p><span style=\"margin-left: -1em;\"><span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>2.</mn></mrow><annotation encoding=\"application/x-tex\">2.</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">2</span><span class=\"mord\">.</span></span></span></span></span></span> What would each of the following Boolean expressions evaluate to?</p>\n<python>a = True\nb = False\nc = True\n\nprint(a or b and c)\n\nprint(not a and b and c)\n\nprint(not a or b or c)\n\nprint(not (a or b or c))\n</python>\n<hr style=\"margin: 2em auto; border-top: 1px solid #b0b0b0;\">\n<p><span style=\"margin-left: -1em;\"><span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>3.</mn></mrow><annotation encoding=\"application/x-tex\">3.</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">3</span><span class=\"mord\">.</span></span></span></span></span></span> Suppose <inline-code>x</inline-code> and <inline-code>y</inline-code> are integers. Express the following Boolean expressions in an equivalent form without the <inline-code>not</inline-code> operator.</p>\n<pre><code>1. not (x == y)\n2. not (x > y)\n3. not (x &#x3C; y)\n4. not (x == y and x &#x3C; 2)\n5. not (not (x == y))\n</code></pre>\n<p>In general, we can use De Morgan’s laws as follows:</p>\n<ul>\n<li><inline-code>not (x and y)</inline-code> <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>≡</mo></mrow><annotation encoding=\"application/x-tex\">\\equiv</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.46375em;vertical-align:0em;\"></span><span class=\"mrel\">≡</span></span></span></span></span> <inline-code>not x or not y</inline-code></li>\n<li><inline-code>not (x or y)</inline-code> <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>≡</mo></mrow><annotation encoding=\"application/x-tex\">\\equiv</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.46375em;vertical-align:0em;\"></span><span class=\"mrel\">≡</span></span></span></span></span> <inline-code>not x and not y</inline-code></li>\n</ul>\n<solution><pre><code>1. x != y\n2. x &#x3C;= y\n3. x >= y\n4. x != y or x >= 2\n5. x == y\n</code></pre></solution>\n<hr style=\"margin: 2em auto; border-top: 1px solid #b0b0b0;\">\n<p><span style=\"margin-left: -1em;\"><span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>4.</mn></mrow><annotation encoding=\"application/x-tex\">4.</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">4</span><span class=\"mord\">.</span></span></span></span></span></span> What will be the sequence of values generated by the following range function calls?</p>\n<python>range(5, 10)\nrange(5, 10, -1)\nrange(10, 5, -1)\nrange(10, 5)\nrange(5, 51, 5)\n</python>\n<p>You may try the function call in a for loop to print the values as below:</p>\n<python>for i in range(5, 10):\n    print(i)\n</python>\n<hr style=\"margin: 2em auto; border-top: 1px solid #b0b0b0;\">\n<p><span style=\"margin-left: -1em;\"><span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>5.</mn></mrow><annotation encoding=\"application/x-tex\">5.</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">5</span><span class=\"mord\">.</span></span></span></span></span></span>  What will be output of each print statement below?</p>\n<python>s = \"hello everyone\"\n\nprint(s[1:])\nprint(s[1:len(s)-3])\nprint(s[len(s)-8:])\nprint(s[:9])\nprint(s[11:])\n\n\n# There will not be an error below.\n# Even though 16 is out of index bounds, slicing allows it.\nprint(s[11:16])\n\n# Will there be an error below? \n# Note that below is not slicing, it is indexing\nprint(s[16])\n</python>\n<p><img style=\"display: block; margin: 3em auto; width: 15%;\" src=\"../assets/divider.svg\"></p>\n<h1>Programming Questions</h1>\n<p><span style=\"margin-left: -1em;\"><span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1.</mn></mrow><annotation encoding=\"application/x-tex\">1.</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mord\">.</span></span></span></span></span></span> Write a program (<inline-code>nuclear_plant.py</inline-code>) that takes as input from the user the coordinates <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(x, y)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span></span></span></span></span> (in km) of a nuclear power plant as well as the coordinates of a house location. The program should display in which zone the house is (with respect to the power plant) in case of emergency (see the image below to know how far a zone is from power plant). If the house is outside all the zones, print “Outside all zones”.<br>\nAssume that, for any zone, inner circle boundary is included but outer circle boundary is not inlucuded in the zone.</p>\n<img style=\"width: 100%; margin: 1em auto;\" src=\"week3/power_plant.png\">\n<python>x1 = int(input(\"Enter power plant x-coordinate: \"))\ny1 = int(input(\"Enter power plant y-coordinate: \"))\nx2 = int(input(\"Enter house x-coordinate: \"))\ny2 = int(input(\"Enter house y-coordinate: \"))\n\n# compute distance between power plant and house\n\n\n# Set value of zone according to the distance\n\n    \nprint(zone)\n</python>\n<p>Example 1:</p>\n<output>Enter power plant x-coordinate: 2\nEnter power plant y-coordinate: 5\nEnter house x-coordinate: 10\nEnter house y-coordinate: 12\nContigency Planning Zone\n</output>\n<p>Example 2:</p>\n<output>Enter power plant x-coordinate: 1\nEnter power plant y-coordinate: 1\nEnter house x-coordinate: 30\nEnter house y-coordinate: 25\nIngestion Planning Zone\n</output>\n<solution><python>x1 = float(input(\"Enter power plant x-coordinate: \"))\ny1 = float(input(\"Enter power plant y-coordinate: \"))\nx2 = float(input(\"Enter house x-coordinate: \"))\ny2 = float(input(\"Enter house y-coordinate: \"))\n\n# compute distance between power plant and house\ndistance = ((x1 - x2) ** 2 + (y1 - y2) ** 2) ** 0.5\n\n# Set value of zone according to the distance\nif distance &#x3C; 3:\n    zone = \"Automatic Action Zone\"\nelif distance &#x3C; 10:\n    zone = \"Detailed Planning Zone\"\nelif distance &#x3C; 20:\n    zone = \"Contigency Planning Zone\"\nelif distance &#x3C; 50:\n    zone = \"Ingestion Planning Zone\"\nelse:\n    zone = \"Outside all zones\"\n    \nprint(zone)\n</python></solution>\n<hr style=\"margin: 2em auto; border-top: 1px solid #b0b0b0;\">\n<p><span style=\"margin-left: -1em;\"><span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>2.</mn></mrow><annotation encoding=\"application/x-tex\">2.</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">2</span><span class=\"mord\">.</span></span></span></span></span></span> Blood pressure is an important risk factor for various cardiovascular problems. It is characterized by two numbers: the systolic and diastolic pressures. The table below indicates how to interpret the blood pressure:</p>\n<img style=\"width: 80%; margin: 1em auto;\" src=\"week3/basic_blood_pressure_chart.png\">\n<p><b>Task 1:</b> Write a program (<inline-code>blood_pressure.py</inline-code>) that prompts the user to enter their systolic and diastolic pressures. It then prints the corresponding blood pressure category. Assume the pressure values to be integers.</p>\n<python>systolic = int(input(\"Enter systolic blood pressure: \"))\ndiastolic = int(input(\"Enter diastolic blood pressure: \"))\n\n# Set category using systolic and diastolic pressures\n\n\nprint(\"Blood pressure category is:\", category)\n</python>\n<solution><python>systolic = int(input(\"Enter systolic blood pressure: \"))\ndiastolic = int(input(\"Enter diastolic blood pressure: \"))\n\n# Set category using systolic and diastolic pressures\nif systolic &#x3C; 120 and diastolic &#x3C; 80:\n    category = \"Normal\"\nelif systolic >= 120 and systolic &#x3C;= 129 and diastolic &#x3C; 80:\n    category = \"Elevated\"\nelif (systolic >= 130 and systolic &#x3C;= 139 or \n         diastolic >= 80 and diastolic &#x3C;= 89):\n    category = \"Hypertension Stage 1\"\nelif (systolic >= 140 and systolic &#x3C;= 180 or\n          diastolic >= 90 and diastolic &#x3C;= 120):\n    category = \"Hypertension Stage 2\"\nelif systolic > 180 or diastolic > 120:\n    category = \"Hypertensive Crisis\"\n\n\nprint(\"Blood pressure category is:\", category)\n</python></solution>\n<p><b>Task 2:</b> Sometimes, the user may mistakenly exchange their systolic and diastolic measurements when entering inputs, resulting in <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><mi>i</mi><mi>a</mi><mi>s</mi><mi>t</mi><mi>o</mi><mi>l</mi><mi>i</mi><mi>c</mi><mo>></mo><mi>s</mi><mi>y</mi><mi>s</mi><mi>t</mi><mi>o</mi><mi>l</mi><mi>i</mi><mi>c</mi></mrow><annotation encoding=\"application/x-tex\">diastolic > systolic</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.73354em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">c</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">c</span></span></span></span></span>, which is impossible. Modify your program so that if such a case is detected, the values of the systolic and diastolic variables are swapped, and the correct output is produced despite the user’s error.</p>\n<solution><python>systolic = int(input(\"Enter systolic blood pressure: \"))\ndiastolic = int(input(\"Enter diastolic blood pressure: \"))\n\n\n# user entered incorrect values; swap the variables\nif diastolic > systolic:\n    temp = diastolic\n    diastolic = systolic\n    systolic = temp\n\n# Note, the following would not work to swap variables:\n# diastolic = systolic\n# systolic = diastolic\n\n# Here the rest of the program is same as the task 1.\n</python></solution>\n<hr style=\"margin: 2em auto; border-top: 1px solid #b0b0b0;\">\n<p><span style=\"margin-left: -1em;\"><span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>3.</mn></mrow><annotation encoding=\"application/x-tex\">3.</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">3</span><span class=\"mord\">.</span></span></span></span></span></span>  Write a function <inline-code>find_max</inline-code> that takes 3 integers <inline-code>a, b, c</inline-code> as arguments and returns  maximum of the three values. Use chained if-statement and not the built-in <inline-code>max</inline-code> function.</p>\n<solution><python>def find_max(a, b, c):\n    # We use >= instead of > so that program will work even if\n    # the two or more numbers are equal.\n    if a >= b and a >= c: \n        maximum = a \n    elif b >= a and b >= c: \n        maximum = b \n    else: \n        maximum = c\n\n    return maximum\n    \n\nprint('Maximum is', find_max(-5, 10, 50))\n</python></solution>\n<p>Another solution which is a bit simpler:</p>\n<solution><python>def find_max(a, b, c):\n    maximum = a\n\n    if b > maximum: \n        maximum = b\n\n    if c > maximum: \n        maximum = c \n\n    return maximum\n    \n\nprint('Maximum is', find_max(-5, 10, 50))\n\n</python></solution>\n<hr style=\"margin: 2em auto; border-top: 1px solid #b0b0b0;\">\n<p><span style=\"margin-left: -1em;\"><span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>4.</mn></mrow><annotation encoding=\"application/x-tex\">4.</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">4</span><span class=\"mord\">.</span></span></span></span></span></span>  Write a function <inline-code>harmonic_sum(n)</inline-code> that returns sum of the first <inline-code>n</inline-code> terms of the harmonic series: <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><mfrac><mn>1</mn><mi>i</mi></mfrac></mrow><annotation encoding=\"application/x-tex\">\\sum_{i=1}^{n} \\frac{1}{i}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.190108em;vertical-align:-0.345em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.804292em;\"><span style=\"top:-2.40029em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29971000000000003em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.845108em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></p>\n<solution><python>def harmonic_sum(n):\n    s = 0.0\n    for i in range(1, n + 1):\n        s = s + 1 / i\n    return s\n\n\nprint(harmonic_sum(100))\n</python></solution>\n<hr style=\"margin: 2em auto; border-top: 1px solid #b0b0b0;\">\n<p><span style=\"margin-left: -1em;\"><span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>5.</mn></mrow><annotation encoding=\"application/x-tex\">5.</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">5</span><span class=\"mord\">.</span></span></span></span></span></span> Write a function <inline-code>remove_spaces</inline-code> that removes spaces from its argument string and returns the resulting string. e.g.</p>\n<ul>\n<li><inline-code>\"a short string\"</inline-code> → <inline-code>\"ashortstring\"</inline-code></li>\n<li><inline-code>\"   spaces here   and there\"</inline-code> → <inline-code>\"spaceshereandthere\"</inline-code></li>\n</ul>\n<solution><python>\ndef remove_spaces(s):\n    result = \"\"  # start with empty string\n    for i in range(len(s)):\n        if s[i] != \" \":  # skip spaces\n            result = result + s[i]\n\n    return result\n\n\nprint(remove_spaces(\"a short string\"))\n\nprint(remove_spaces(\"   spaces here   and there\"))\n</python></solution>\n<hr style=\"margin: 2em auto; border-top: 1px solid #b0b0b0;\">\n<p><span style=\"margin-left: -1em;\"><span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>6.</mn></mrow><annotation encoding=\"application/x-tex\">6.</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">6</span><span class=\"mord\">.</span></span></span></span></span></span>\nWrite a function <inline-code>reverse_string</inline-code> that takes a string as argument, and returns another string that is reverse of the argument. e.g. <inline-code>\"hello\"</inline-code> → <inline-code>\"olleh\"</inline-code>.</p>\n<solution><python>def reverse_string(s):     \n    result = \"\"  # start with empty string\n    for i in range(len(s) - 1, -1, -1):\n        # build the string by adding letter at a time\n        result = result + s[i]\n    \n    return result\n\n\nprint(reverse_string(\"hello\"))\n</python></solution>\n<p><img style=\"display: block; margin: 3em auto; width: 15%;\" src=\"../assets/divider.svg\"></p>"}},"__N_SSG":true}