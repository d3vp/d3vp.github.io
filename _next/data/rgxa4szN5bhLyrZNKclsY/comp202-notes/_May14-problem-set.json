{"pageProps":{"titles":["L1.1 — Computer and Programming Basics","L1.2 — Variables & Expressions","L2.1 — Control Flow Statements","Python Style Guide","May 14 — Problem Set","L2.2 — print(), String methods & while loop","May 17 — Problem Set","L3.1 — More loops & Defining functions","May 19 — Problem Set","L3.2 — Lists","May 21 — Problem Set","L4.1 — Tuples, Dictionaries, Sets","May 26 — Problem Set","May 28 — Problem Set","L4.2 — Nested data structures","June 2 — Problem Set","June 4 — Problem Set","L5.1 — Handling Exceptions, File IO","L5.2 — Comparing data structures, Writing modules, Matplotlib"],"slugs":["Lecture-1.1","Lecture-1.2","Lecture-2.1","style-guide","_May14-problem-set","Lecture-2.2","_May17-problem-set","Lecture-3.1","_May19-problem-set","Lecture-3.2","_May21-problem-set","Lecture-4.1","_May26-problem-set","_May28-problem-set","Lecture-4.2","_June2-problem-set","_June4-problem-set","Lecture-5.1","Lecture-5.2"],"post":{"title":"May 14 — Problem Set","slug":"_May14-problem-set","content":"<h1>New concepts required for this problem set</h1>\n<p>By default, <inline-code>print()</inline-code> function displays everything on one line</p>\n<python>print(\"hello\")\nprint(\"everyone\")\nprint()  # print a blank line\nprint(\"how are you?\")\n</python>\n<output>hello\neveryone\n\nhow are you?\n</output>\n<p>We can change this end character using another keyword argument to <inline-code>print()</inline-code> function, <inline-code>end=</inline-code>.</p>\n<python>print(\"A sequence of numbers:\")\nprint(1, end=\",\")\nprint(4, end=\",\")\nprint(9, end=\",\")\n</python>\n<output>A sequence of numbers:\n1,4,9,\n</output>\n<p>This is useful in a loop:</p>\n<python>N = 10\nfor i in range(N):\n    print(i*i, end=\", \")  # comma and a space\n</python>\n<output>0, 1, 4, 9, 16, 25, 36, 49, 64, 81, \n</output>\n<h2><inline-code>in</inline-code> operator (membership operator)</h2>\n<ul>\n<li>In Python <inline-code>in</inline-code> is a keyword.</li>\n<li>The <inline-code>in</inline-code> and <inline-code>not in</inline-code> operators test for membership.</li>\n<li>We can use them with strings to test if one string is a substring of another.</li>\n</ul>\n<python>>>> s = \"More garbage\"\n>>> \"age\" in s  # True if \"age\" is found anywhere in s\nTrue\n>>> \"x\" in s\nFalse\n>>> \"w\" not in s\nTrue\n</python>\n<h2>string.upper() method</h2>\n<python>>>> \"hello\".upper()  # calling method upper() on the string \"hello\"\n'HELLO'\n\n>>> message = \"hello\"\n>>> message.upper()  # using variable that refers to string\n'HELLO'\n\n>>> message = 10\n>>> message.upper()  # upper() only available for str objects\nAttributeError: 'int' object has no attribute 'upper'\n</python>\n<h2>Generating random integers</h2>\n<p>Each time your execute these functions, you will get a different value, try it!</p>\n<python>import random  # write this line on top of the file\n\n# randint(x, y) function returns a random int value between x and y, both included.\nnumber = random.randint(1, 10)\nprint(number)\n</python>\n<h1>Problems</h1>\n<ol>\n<li>\n<p>Write a program that takes an input string and removes all vowels from the string. Hint: use the <inline-code>in</inline-code> operator.</p>\n<solution><python>message = input(\"Enter a string: \")\nvowels = \"aeiou\"\n\nresult = \"\"\nfor i in range(len(message)):\n    if message[i] not in vowels:\n        result = result + message[i]\n        \nprint(result)\n</python><p>To understand better:</p><iframe width=\"800\" height=\"400\" frameborder=\"0\" src=\"https://pythontutor.com/iframe-embed.html#code=message%20%3D%20%22hello%22%0Avowels%20%3D%20%22aeiou%22%0A%0Aresult%20%3D%20%22%22%0Afor%20i%20in%20range%28len%28message%29%29%3A%0A%20%20%20%20if%20message%5Bi%5D%20not%20in%20vowels%3A%0A%20%20%20%20%20%20%20%20result%20%3D%20result%20%2B%20message%5Bi%5D%0A%20%20%20%20%20%20%20%20%0Aprint%28result%29%0A&#x26;codeDivHeight=400&#x26;codeDivWidth=350&#x26;cumulative=false&#x26;curInstr=0&#x26;heapPrimitives=true&#x26;origin=opt-frontend.js&#x26;py=3&#x26;rawInputLstJSON=%5B%5D&#x26;textReferences=false\"> </iframe></solution>\n</li>\n<li>\n<p>Write a program that removes duplicate characters from an input string and prints the resulting string.</p>\n<div class=\"code\"><ul>\n<li>“banana” → “ban”</li>\n<li>“background” → “background”</li>\n</ul></div>\n<solution><python>string = input(\"Enter string: \")\n\nresult = \"\"\n\nfor i in range(len(string)):\n    letter = string[i]\n    # Check if letter exists in our result string\n    if letter not in result:\n        result = result + letter\n        \nprint(result)\n</python></solution>\n</li>\n<li>\n<p>Write a program to convert a string with binary digits e.g. <inline-code>\"10011\"</inline-code> to a decimal number (<inline-code>int</inline-code>).\nRefer to the first lecture for how to do this: <a href=\"https://d3vp.github.io/comp202-notes/Lecture-1.1\">here</a></p>\n<solution><python>binary = input(\"Enter binary string: \")\n\ndecimal = 0\nN = len(binary)\n\nfor i in range(N - 1, -1, -1):\n    bit = int(binary[i])  # convert string \"1\" or \"0\" to int\n    # compute and add the terms with powers of 2\n    decimal += bit * 2**(N - i - 1)\n\nprint(decimal)\n</python></solution>\n</li>\n<li>\n<p>Write a program that the number of columns <inline-code>num_cols</inline-code> and displays the numbers <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>11</mn></mrow><annotation encoding=\"application/x-tex\">11</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mord\">1</span></span></span></span></span> to <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>50</mn></mrow><annotation encoding=\"application/x-tex\">50</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">5</span><span class=\"mord\">0</span></span></span></span></span> in a table as show below.<br>\nHint: Use <inline-code>end=</inline-code> value in the <inline-code>print()</inline-code>.</p>\n<output>Enter number of columns: 5\n11    12    13    14    15    \n16    17    18    19    20    \n21    22    23    24    25    \n26    27    28    29    30    \n31    32    33    34    35    \n36    37    38    39    40    \n41    42    43    44    45    \n46    47    48    49    50 \n</output>\n<output>Enter number of columns: 6\n11    12    13    14    15    16    \n17    18    19    20    21    22    \n23    24    25    26    27    28    \n29    30    31    32    33    34    \n35    36    37    38    39    40    \n41    42    43    44    45    46    \n47    48    49    50  \n</output>\n<solution><python>num_cols = int(input(\"Enter number of columns: \"))\ncol = 1\nfor i in range(11, 51):\n    print(i, end=\"    \")\n    # after every num_col go to next line\n    if col % num_cols == 0:\n        print()  # start printing on next line after this\n    col = col + 1\n</python></solution>\n</li>\n<li>\n<p>Write a program to capitalize each word in a string. (First word as well as every word after a space)<br>\ne.g. <inline-code>\"Luke, I am your father\"</inline-code> → <inline-code>\"Luke, I Am Your Father\"</inline-code></p>\n<solution><python>string = input(\"Enter a string: \")\n\nresult = \"\"\n\nfor i in range(len(string)):\n    # Capitalize if this letter is the first letter\n    # OR if previous letter is a space\n    if i == 0 or string[i-1] == \" \":\n        result += string[i].upper()\n    else:\n        result += string[i]\n\nprint(result)\n</python></solution>\n</li>\n<li>\n<p>Write a program that randomly prints either <inline-code>head</inline-code> or <inline-code>tail</inline-code> for <inline-code>N</inline-code> number of times. This would be like simulating a coin flip.<br>\nModify the program to also display, at the end, the frequency of <inline-code>head</inline-code> (i.e how many times <inline-code>head</inline-code> was displayed divided by <inline-code>N</inline-code>)</p>\n<solution><python>import random\n\nN = 100\nheads = 0\nfor i in range(N):\n    # flip a coin\n    coin_flip = random.randint(1, 2)\n    # check if coin flip results in 1 (head) or 2 (tail)\n    if coin_flip == 1:\n        print(\"head\")\n        heads += 1\n    else:\n        print(\"tail\")\n        \nprint(\"Frequency of heads is\", heads / N)\n</python></solution>\n</li>\n<li>\n<p>We want to go a step further from coin flip and now roll a six-sided die (<span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span></span> to <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>6</mn></mrow><annotation encoding=\"application/x-tex\">6</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">6</span></span></span></span></span> numbers).<br>\nWrite a program that simulates throwing a six-sided die for <inline-code>N</inline-code> times.<br>\nThe program just displays the frequency of getting a <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>6</mn></mrow><annotation encoding=\"application/x-tex\">6</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">6</span></span></span></span></span> and a <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span></span>.</p>\n<solution><python>import random\n\nN = 100\ncount_six = 0\ncount_one = 0\n\nfor i in range(N):\n    # roll a die\n    die_roll = random.randint(1, 6)\n    # check if die roll was 1 or 6\n    if die_roll == 1:\n        count_one += 1\n    elif die_roll == 6:\n        count_six += 1\n\nprint(\"Frequency of one is\", count_one / N)\nprint(\"Frequency of six is\", count_six / N)\n\n# The following would be incorrect in the sense that\n# we would be throwing two independent dice instead of just one!\n\n# for i in range(N):\n#     if random.randint(1, 6) == 1:\n#         count_one += 1\n#     elif random.randint(1, 6) == 6:\n#         count_six += 1\n</python></solution>\n</li>\n</ol>\n<p><img style=\"display: block; margin: 3em auto; width: 15%;\" src=\"../assets/divider.svg\"></p>"}},"__N_SSG":true}