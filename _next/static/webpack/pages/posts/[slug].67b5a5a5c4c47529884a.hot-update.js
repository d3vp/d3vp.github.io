webpackHotUpdate_N_E("pages/posts/[slug]",{

/***/ "./pages/posts/[slug].js":
/*!*******************************!*\
  !*** ./pages/posts/[slug].js ***!
  \*******************************/
/*! exports provided: __N_SSG, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__N_SSG\", function() { return __N_SSG; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Post; });\n/* harmony import */ var _emotion_react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @emotion/react/jsx-dev-runtime */ \"./node_modules/@emotion/react/jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.browser.esm.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/router */ \"./node_modules/next/router.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_error__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/error */ \"./node_modules/next/error.js\");\n/* harmony import */ var next_error__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_error__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/head */ \"./node_modules/next/head.js\");\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_head__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _emotion_react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @emotion/react */ \"./node_modules/@emotion/react/dist/emotion-react.browser.esm.js\");\n/* harmony import */ var rehype_react__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! rehype-react */ \"./node_modules/rehype-react/index.js\");\n/* harmony import */ var rehype_react__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(rehype_react__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var rehype_parse__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! rehype-parse */ \"./node_modules/rehype-parse/index.js\");\n/* harmony import */ var rehype_parse__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(rehype_parse__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var unified__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! unified */ \"./node_modules/unified/index.js\");\n/* harmony import */ var unified__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(unified__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var unist_util_visit__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! unist-util-visit */ \"./node_modules/unist-util-visit/index.js\");\n/* harmony import */ var unist_util_visit__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(unist_util_visit__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_9__);\n/* harmony import */ var _components_python__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../components/python */ \"./components/python.js\");\n/* harmony import */ var _components_binary_numbers__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../components/binary-numbers */ \"./components/binary-numbers.js\");\n/* harmony import */ var _components_sidebar__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../components/sidebar */ \"./components/sidebar.js\");\n/* harmony import */ var _components_misc__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../components/misc */ \"./components/misc.js\");\n\n\n\nvar _jsxFileName = \"/Users/doctorzen/Projects/Summer2021/COMP202/teaching_python/comp202_lectures/pages/posts/[slug].js\",\n    _s = $RefreshSig$();\n\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__() { return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\"; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction replaceRootTags(opts) {\n  return transform;\n\n  function transform(tree) {\n    unist_util_visit__WEBPACK_IMPORTED_MODULE_8___default()(tree, \"element\", visiter);\n  }\n\n  function visiter(node, index, parent) {\n    if (node.tagName !== \"html\" && node.tagName !== \"body\" && node.tagName !== \"head\") {\n      return;\n    }\n\n    node.tagName = \"div\";\n  }\n}\n\nvar rehypeProcessor = unified__WEBPACK_IMPORTED_MODULE_7___default()().use(rehype_parse__WEBPACK_IMPORTED_MODULE_6___default.a).use(replaceRootTags).use(rehype_react__WEBPACK_IMPORTED_MODULE_5___default.a, {\n  createElement: react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement,\n  components: {\n    py: _components_python__WEBPACK_IMPORTED_MODULE_10__[\"InlinePython\"],\n    python: _components_python__WEBPACK_IMPORTED_MODULE_10__[\"BlockPython\"],\n    sc: _components_misc__WEBPACK_IMPORTED_MODULE_13__[\"SmallCaps\"],\n    \"decimal-binary\": _components_binary_numbers__WEBPACK_IMPORTED_MODULE_11__[\"DecimalBinary\"],\n    \"binary-decimal\": _components_binary_numbers__WEBPACK_IMPORTED_MODULE_11__[\"BinaryDecimal\"],\n    ibox: _components_misc__WEBPACK_IMPORTED_MODULE_13__[\"IBox\"],\n    table: _components_misc__WEBPACK_IMPORTED_MODULE_13__[\"MyTable\"],\n    \"inline-code\": _components_misc__WEBPACK_IMPORTED_MODULE_13__[\"InlineCode\"]\n  }\n});\nvar articleCss = false ? undefined : {\n  name: \"1me8c97-articleCss\",\n  styles: \"grid-area:main;font-family:Alegreya;font-weight:300;overflow:visible;h2{font-family:Lato;font-weight:300;font-size:1.25em;margin-top:1.25em;}h3{font-family:Lato;font-weight:400;font-size:1em;margin-bottom:0.3em;}ul{margin-top:0em;}code{font-family:Hack;font-size:0.75em;}.math-inline{font-size:0.8em;}p{margin-bottom:0;};label:articleCss;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kb2N0b3J6ZW4vUHJvamVjdHMvU3VtbWVyMjAyMS9DT01QMjAyL3RlYWNoaW5nX3B5dGhvbi9jb21wMjAyX2xlY3R1cmVzL3BhZ2VzL3Bvc3RzL1tzbHVnXS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFpRHNCIiwiZmlsZSI6Ii9Vc2Vycy9kb2N0b3J6ZW4vUHJvamVjdHMvU3VtbWVyMjAyMS9DT01QMjAyL3RlYWNoaW5nX3B5dGhvbi9jb21wMjAyX2xlY3R1cmVzL3BhZ2VzL3Bvc3RzL1tzbHVnXS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZVJvdXRlciB9IGZyb20gXCJuZXh0L3JvdXRlclwiO1xuaW1wb3J0IEVycm9yUGFnZSBmcm9tIFwibmV4dC9lcnJvclwiO1xuaW1wb3J0IHsgZ2V0UG9zdEJ5U2x1ZywgZ2V0QWxsUG9zdHMgfSBmcm9tIFwiLi4vLi4vbGliL2FwaVwiO1xuaW1wb3J0IEhlYWQgZnJvbSBcIm5leHQvaGVhZFwiO1xuaW1wb3J0IG1hcmtkb3duVG9IdG1sIGZyb20gXCIuLi8uLi9saWIvbWFya2Rvd25Ub0h0bWxcIjtcbmltcG9ydCB7IGNzcyB9IGZyb20gXCJAZW1vdGlvbi9yZWFjdFwiO1xuaW1wb3J0IHJlaHlwZTJyZWFjdCBmcm9tIFwicmVoeXBlLXJlYWN0XCI7XG5pbXBvcnQgcmVoeXBlUGFyc2UgZnJvbSBcInJlaHlwZS1wYXJzZVwiO1xuaW1wb3J0IHVuaWZpZWQgZnJvbSBcInVuaWZpZWRcIjtcbmltcG9ydCB2aXNpdCBmcm9tIFwidW5pc3QtdXRpbC12aXNpdFwiO1xuaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgSW5saW5lUHl0aG9uLCBCbG9ja1B5dGhvbiB9IGZyb20gXCIuLi8uLi9jb21wb25lbnRzL3B5dGhvblwiO1xuaW1wb3J0IHsgQmluYXJ5RGVjaW1hbCwgRGVjaW1hbEJpbmFyeSB9IGZyb20gXCIuLi8uLi9jb21wb25lbnRzL2JpbmFyeS1udW1iZXJzXCI7XG5pbXBvcnQgU2lkZUJhciBmcm9tIFwiLi4vLi4vY29tcG9uZW50cy9zaWRlYmFyXCI7XG5pbXBvcnQgeyBTbWFsbENhcHMsIElCb3gsIE15VGFibGUsIElubGluZUNvZGUgfSBmcm9tIFwiLi4vLi4vY29tcG9uZW50cy9taXNjXCI7XG5cbmZ1bmN0aW9uIHJlcGxhY2VSb290VGFncyhvcHRzKSB7XG4gIHJldHVybiB0cmFuc2Zvcm07XG5cbiAgZnVuY3Rpb24gdHJhbnNmb3JtKHRyZWUpIHtcbiAgICB2aXNpdCh0cmVlLCBcImVsZW1lbnRcIiwgdmlzaXRlcik7XG4gIH1cblxuICBmdW5jdGlvbiB2aXNpdGVyKG5vZGUsIGluZGV4LCBwYXJlbnQpIHtcbiAgICBpZiAobm9kZS50YWdOYW1lICE9PSBcImh0bWxcIiAmJiBub2RlLnRhZ05hbWUgIT09IFwiYm9keVwiICYmIG5vZGUudGFnTmFtZSAhPT0gXCJoZWFkXCIpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBub2RlLnRhZ05hbWUgPSBcImRpdlwiO1xuICB9XG59XG5cbmNvbnN0IHJlaHlwZVByb2Nlc3NvciA9IHVuaWZpZWQoKVxuICAudXNlKHJlaHlwZVBhcnNlKVxuICAudXNlKHJlcGxhY2VSb290VGFncylcbiAgLnVzZShyZWh5cGUycmVhY3QsIHtcbiAgICBjcmVhdGVFbGVtZW50OiBSZWFjdC5jcmVhdGVFbGVtZW50LFxuICAgIGNvbXBvbmVudHM6IHtcbiAgICAgIHB5OiBJbmxpbmVQeXRob24sXG4gICAgICBweXRob246IEJsb2NrUHl0aG9uLFxuICAgICAgc2M6IFNtYWxsQ2FwcyxcbiAgICAgIFwiZGVjaW1hbC1iaW5hcnlcIjogRGVjaW1hbEJpbmFyeSxcbiAgICAgIFwiYmluYXJ5LWRlY2ltYWxcIjogQmluYXJ5RGVjaW1hbCxcbiAgICAgIGlib3g6IElCb3gsXG4gICAgICB0YWJsZTogTXlUYWJsZSxcbiAgICAgIFwiaW5saW5lLWNvZGVcIjogSW5saW5lQ29kZSxcbiAgICB9LFxuICB9KTtcblxuY29uc3QgYXJ0aWNsZUNzcyA9IGNzc2BcbiAgZ3JpZC1hcmVhOiBtYWluO1xuICBmb250LWZhbWlseTogQWxlZ3JleWE7XG4gIGZvbnQtd2VpZ2h0OiAzMDA7XG4gIG92ZXJmbG93OiB2aXNpYmxlO1xuICBoMiB7XG4gICAgZm9udC1mYW1pbHk6IExhdG87XG4gICAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgICBmb250LXNpemU6IDEuMjVlbTtcbiAgICBtYXJnaW4tdG9wOiAxLjI1ZW07XG4gIH1cbiAgaDMge1xuICAgIGZvbnQtZmFtaWx5OiBMYXRvO1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgZm9udC1zaXplOiAxZW07XG4gICAgbWFyZ2luLWJvdHRvbTogMC4zZW07XG4gIH1cbiAgdWwge1xuICAgIG1hcmdpbi10b3A6IDBlbTtcbiAgfVxuICBjb2RlIHtcbiAgICBmb250LWZhbWlseTogSGFjaztcbiAgICBmb250LXNpemU6IDAuNzVlbTtcbiAgfVxuICAubWF0aC1pbmxpbmUge1xuICAgIGZvbnQtc2l6ZTogMC44ZW07XG4gIH1cbiAgcCB7XG4gICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgfVxuYDtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gUG9zdCh7IHBvc3QsIHRpdGxlcywgc2x1Z3MgfSkge1xuICBjb25zdCByb3V0ZXIgPSB1c2VSb3V0ZXIoKTtcbiAgaWYgKCFyb3V0ZXIuaXNGYWxsYmFjayAmJiAhcG9zdD8uc2x1Zykge1xuICAgIHJldHVybiA8RXJyb3JQYWdlIHN0YXR1c0NvZGU9ezQwNH0gLz47XG4gIH1cbiAgY29uc3QgbWRSZWFjdCA9IHJlaHlwZVByb2Nlc3Nvci5wcm9jZXNzU3luYyhwb3N0LmNvbnRlbnQpLnJlc3VsdDtcblxuICByZXR1cm4gKFxuICAgIDw+XG4gICAgICA8SGVhZD5cbiAgICAgICAgPHRpdGxlPntwb3N0LnRpdGxlfTwvdGl0bGU+XG4gICAgICA8L0hlYWQ+XG4gICAgICA8bWFpblxuICAgICAgICBjc3M9e2Nzc2BcbiAgICAgICAgICBmb250LXNpemU6IDEuNXJlbTtcbiAgICAgICAgICBmb250LWtlcm5pbmc6IG5vcm1hbDtcbiAgICAgICAgICBsaW5lLWhlaWdodDogMS41ZW07XG4gICAgICAgICAgLyogYmFja2dyb3VuZC1jb2xvcjogI2ViZTZkZjsgKi9cbiAgICAgICAgICAvKiBiYWNrZ3JvdW5kLWNvbG9yOiAjZjBlOWRmOyAqL1xuICAgICAgICAgIC8qIGNvbG9yOiAjMGMwYzBjOyAqL1xuICAgICAgICAgIGNvbG9yOiBibGFjaztcbiAgICAgICAgICBkaXNwbGF5OiBncmlkO1xuICAgICAgICAgIGdyaWQtdGVtcGxhdGUtYXJlYXM6XG4gICAgICAgICAgICBcImxlZnQgaGVhZCByaWdodFwiXG4gICAgICAgICAgICBcImxlZnQgbWFpbiByaWdodFwiO1xuICAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogYXV0byA2NWNoIGF1dG87XG4gICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiBhdXRvIDFmcjtcbiAgICAgICAgYH1cbiAgICAgID5cbiAgICAgICAgPGFzaWRlXG4gICAgICAgICAgY3NzPXtjc3NgXG4gICAgICAgICAgICBncmlkLWFyZWE6IGxlZnQ7XG4gICAgICAgICAgYH1cbiAgICAgICAgPlxuICAgICAgICAgIDxTaWRlQmFyPlxuICAgICAgICAgICAge3RpdGxlcy5tYXAoKHQsIGkpID0+IChcbiAgICAgICAgICAgICAgPGFcbiAgICAgICAgICAgICAgICBrZXk9e2l9XG4gICAgICAgICAgICAgICAgaHJlZj17c2x1Z3NbaV19XG4gICAgICAgICAgICAgICAgY3NzPXtjc3NgXG4gICAgICAgICAgICAgICAgICBjb2xvcjogaW5oZXJpdDtcbiAgICAgICAgICAgICAgICAgIG1hcmdpbjogMC4zZW0gMDtcbiAgICAgICAgICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgICAgICAgICAgICAgICY6aG92ZXIge1xuICAgICAgICAgICAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBgfVxuICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAge3R9XG4gICAgICAgICAgICAgIDwvYT5cbiAgICAgICAgICAgICkpfVxuICAgICAgICAgIDwvU2lkZUJhcj5cbiAgICAgICAgPC9hc2lkZT5cbiAgICAgICAgPGhlYWRlclxuICAgICAgICAgIGNzcz17Y3NzYFxuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgICAgICAgIGdyaWQtYXJlYTogaGVhZDtcbiAgICAgICAgICAgIGZvbnQtZmFtaWx5OiBMYXRvO1xuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMS42MWVtO1xuICAgICAgICAgICAgcGFkZGluZzogMWVtIDA7XG4gICAgICAgICAgICBsaW5lLWhlaWdodDogMS41O1xuICAgICAgICAgIGB9XG4gICAgICAgID5cbiAgICAgICAgICB7cG9zdC50aXRsZX1cbiAgICAgICAgPC9oZWFkZXI+XG4gICAgICAgIDxhcnRpY2xlIGNzcz17YXJ0aWNsZUNzc30+e21kUmVhY3R9PC9hcnRpY2xlPlxuICAgICAgICA8YXNpZGVcbiAgICAgICAgICBjc3M9e2Nzc2BcbiAgICAgICAgICAgIGdyaWQtYXJlYTogcmlnaHQ7XG4gICAgICAgICAgYH1cbiAgICAgICAgPjwvYXNpZGU+XG4gICAgICA8L21haW4+XG4gICAgPC8+XG4gICk7XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRTdGF0aWNQcm9wcyh7IHBhcmFtcyB9KSB7XG4gIGNvbnN0IHBvc3QgPSBnZXRQb3N0QnlTbHVnKHBhcmFtcy5zbHVnLCBbXCJ0aXRsZVwiLCBcInNsdWdcIiwgXCJjb250ZW50XCJdKTtcbiAgY29uc3QgY29udGVudCA9IGF3YWl0IG1hcmtkb3duVG9IdG1sKHBvc3QuY29udGVudCB8fCBcIlwiKTtcblxuICBjb25zdCBwb3N0cyA9IGdldEFsbFBvc3RzKFtcInRpdGxlXCIsIFwic2x1Z1wiXSk7XG4gIHJldHVybiB7XG4gICAgcHJvcHM6IHtcbiAgICAgIHRpdGxlczogcG9zdHMubWFwKChwKSA9PiBwLnRpdGxlKSxcbiAgICAgIHNsdWdzOiBwb3N0cy5tYXAoKHApID0+IHAuc2x1ZyksXG4gICAgICBwb3N0OiB7XG4gICAgICAgIC4uLnBvc3QsXG4gICAgICAgIGNvbnRlbnQsXG4gICAgICB9LFxuICAgIH0sXG4gIH07XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRTdGF0aWNQYXRocygpIHtcbiAgY29uc3QgcG9zdHMgPSBnZXRBbGxQb3N0cyhbXCJzbHVnXCJdKTtcblxuICByZXR1cm4ge1xuICAgIHBhdGhzOiBwb3N0cy5tYXAoKHBvc3QpID0+IHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHBhcmFtczoge1xuICAgICAgICAgIHNsdWc6IHBvc3Quc2x1ZyxcbiAgICAgICAgfSxcbiAgICAgIH07XG4gICAgfSksXG4gICAgZmFsbGJhY2s6IGZhbHNlLFxuICB9O1xufVxuIl19 */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n};\nvar __N_SSG = true;\n\nvar _ref = false ? undefined : {\n  name: \"uz96jj-Post\",\n  styles: \"grid-area:right;label:Post;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kb2N0b3J6ZW4vUHJvamVjdHMvU3VtbWVyMjAyMS9DT01QMjAyL3RlYWNoaW5nX3B5dGhvbi9jb21wMjAyX2xlY3R1cmVzL3BhZ2VzL3Bvc3RzL1tzbHVnXS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF3SmtCIiwiZmlsZSI6Ii9Vc2Vycy9kb2N0b3J6ZW4vUHJvamVjdHMvU3VtbWVyMjAyMS9DT01QMjAyL3RlYWNoaW5nX3B5dGhvbi9jb21wMjAyX2xlY3R1cmVzL3BhZ2VzL3Bvc3RzL1tzbHVnXS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZVJvdXRlciB9IGZyb20gXCJuZXh0L3JvdXRlclwiO1xuaW1wb3J0IEVycm9yUGFnZSBmcm9tIFwibmV4dC9lcnJvclwiO1xuaW1wb3J0IHsgZ2V0UG9zdEJ5U2x1ZywgZ2V0QWxsUG9zdHMgfSBmcm9tIFwiLi4vLi4vbGliL2FwaVwiO1xuaW1wb3J0IEhlYWQgZnJvbSBcIm5leHQvaGVhZFwiO1xuaW1wb3J0IG1hcmtkb3duVG9IdG1sIGZyb20gXCIuLi8uLi9saWIvbWFya2Rvd25Ub0h0bWxcIjtcbmltcG9ydCB7IGNzcyB9IGZyb20gXCJAZW1vdGlvbi9yZWFjdFwiO1xuaW1wb3J0IHJlaHlwZTJyZWFjdCBmcm9tIFwicmVoeXBlLXJlYWN0XCI7XG5pbXBvcnQgcmVoeXBlUGFyc2UgZnJvbSBcInJlaHlwZS1wYXJzZVwiO1xuaW1wb3J0IHVuaWZpZWQgZnJvbSBcInVuaWZpZWRcIjtcbmltcG9ydCB2aXNpdCBmcm9tIFwidW5pc3QtdXRpbC12aXNpdFwiO1xuaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgSW5saW5lUHl0aG9uLCBCbG9ja1B5dGhvbiB9IGZyb20gXCIuLi8uLi9jb21wb25lbnRzL3B5dGhvblwiO1xuaW1wb3J0IHsgQmluYXJ5RGVjaW1hbCwgRGVjaW1hbEJpbmFyeSB9IGZyb20gXCIuLi8uLi9jb21wb25lbnRzL2JpbmFyeS1udW1iZXJzXCI7XG5pbXBvcnQgU2lkZUJhciBmcm9tIFwiLi4vLi4vY29tcG9uZW50cy9zaWRlYmFyXCI7XG5pbXBvcnQgeyBTbWFsbENhcHMsIElCb3gsIE15VGFibGUsIElubGluZUNvZGUgfSBmcm9tIFwiLi4vLi4vY29tcG9uZW50cy9taXNjXCI7XG5cbmZ1bmN0aW9uIHJlcGxhY2VSb290VGFncyhvcHRzKSB7XG4gIHJldHVybiB0cmFuc2Zvcm07XG5cbiAgZnVuY3Rpb24gdHJhbnNmb3JtKHRyZWUpIHtcbiAgICB2aXNpdCh0cmVlLCBcImVsZW1lbnRcIiwgdmlzaXRlcik7XG4gIH1cblxuICBmdW5jdGlvbiB2aXNpdGVyKG5vZGUsIGluZGV4LCBwYXJlbnQpIHtcbiAgICBpZiAobm9kZS50YWdOYW1lICE9PSBcImh0bWxcIiAmJiBub2RlLnRhZ05hbWUgIT09IFwiYm9keVwiICYmIG5vZGUudGFnTmFtZSAhPT0gXCJoZWFkXCIpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBub2RlLnRhZ05hbWUgPSBcImRpdlwiO1xuICB9XG59XG5cbmNvbnN0IHJlaHlwZVByb2Nlc3NvciA9IHVuaWZpZWQoKVxuICAudXNlKHJlaHlwZVBhcnNlKVxuICAudXNlKHJlcGxhY2VSb290VGFncylcbiAgLnVzZShyZWh5cGUycmVhY3QsIHtcbiAgICBjcmVhdGVFbGVtZW50OiBSZWFjdC5jcmVhdGVFbGVtZW50LFxuICAgIGNvbXBvbmVudHM6IHtcbiAgICAgIHB5OiBJbmxpbmVQeXRob24sXG4gICAgICBweXRob246IEJsb2NrUHl0aG9uLFxuICAgICAgc2M6IFNtYWxsQ2FwcyxcbiAgICAgIFwiZGVjaW1hbC1iaW5hcnlcIjogRGVjaW1hbEJpbmFyeSxcbiAgICAgIFwiYmluYXJ5LWRlY2ltYWxcIjogQmluYXJ5RGVjaW1hbCxcbiAgICAgIGlib3g6IElCb3gsXG4gICAgICB0YWJsZTogTXlUYWJsZSxcbiAgICAgIFwiaW5saW5lLWNvZGVcIjogSW5saW5lQ29kZSxcbiAgICB9LFxuICB9KTtcblxuY29uc3QgYXJ0aWNsZUNzcyA9IGNzc2BcbiAgZ3JpZC1hcmVhOiBtYWluO1xuICBmb250LWZhbWlseTogQWxlZ3JleWE7XG4gIGZvbnQtd2VpZ2h0OiAzMDA7XG4gIG92ZXJmbG93OiB2aXNpYmxlO1xuICBoMiB7XG4gICAgZm9udC1mYW1pbHk6IExhdG87XG4gICAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgICBmb250LXNpemU6IDEuMjVlbTtcbiAgICBtYXJnaW4tdG9wOiAxLjI1ZW07XG4gIH1cbiAgaDMge1xuICAgIGZvbnQtZmFtaWx5OiBMYXRvO1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgZm9udC1zaXplOiAxZW07XG4gICAgbWFyZ2luLWJvdHRvbTogMC4zZW07XG4gIH1cbiAgdWwge1xuICAgIG1hcmdpbi10b3A6IDBlbTtcbiAgfVxuICBjb2RlIHtcbiAgICBmb250LWZhbWlseTogSGFjaztcbiAgICBmb250LXNpemU6IDAuNzVlbTtcbiAgfVxuICAubWF0aC1pbmxpbmUge1xuICAgIGZvbnQtc2l6ZTogMC44ZW07XG4gIH1cbiAgcCB7XG4gICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgfVxuYDtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gUG9zdCh7IHBvc3QsIHRpdGxlcywgc2x1Z3MgfSkge1xuICBjb25zdCByb3V0ZXIgPSB1c2VSb3V0ZXIoKTtcbiAgaWYgKCFyb3V0ZXIuaXNGYWxsYmFjayAmJiAhcG9zdD8uc2x1Zykge1xuICAgIHJldHVybiA8RXJyb3JQYWdlIHN0YXR1c0NvZGU9ezQwNH0gLz47XG4gIH1cbiAgY29uc3QgbWRSZWFjdCA9IHJlaHlwZVByb2Nlc3Nvci5wcm9jZXNzU3luYyhwb3N0LmNvbnRlbnQpLnJlc3VsdDtcblxuICByZXR1cm4gKFxuICAgIDw+XG4gICAgICA8SGVhZD5cbiAgICAgICAgPHRpdGxlPntwb3N0LnRpdGxlfTwvdGl0bGU+XG4gICAgICA8L0hlYWQ+XG4gICAgICA8bWFpblxuICAgICAgICBjc3M9e2Nzc2BcbiAgICAgICAgICBmb250LXNpemU6IDEuNXJlbTtcbiAgICAgICAgICBmb250LWtlcm5pbmc6IG5vcm1hbDtcbiAgICAgICAgICBsaW5lLWhlaWdodDogMS41ZW07XG4gICAgICAgICAgLyogYmFja2dyb3VuZC1jb2xvcjogI2ViZTZkZjsgKi9cbiAgICAgICAgICAvKiBiYWNrZ3JvdW5kLWNvbG9yOiAjZjBlOWRmOyAqL1xuICAgICAgICAgIC8qIGNvbG9yOiAjMGMwYzBjOyAqL1xuICAgICAgICAgIGNvbG9yOiBibGFjaztcbiAgICAgICAgICBkaXNwbGF5OiBncmlkO1xuICAgICAgICAgIGdyaWQtdGVtcGxhdGUtYXJlYXM6XG4gICAgICAgICAgICBcImxlZnQgaGVhZCByaWdodFwiXG4gICAgICAgICAgICBcImxlZnQgbWFpbiByaWdodFwiO1xuICAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogYXV0byA2NWNoIGF1dG87XG4gICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiBhdXRvIDFmcjtcbiAgICAgICAgYH1cbiAgICAgID5cbiAgICAgICAgPGFzaWRlXG4gICAgICAgICAgY3NzPXtjc3NgXG4gICAgICAgICAgICBncmlkLWFyZWE6IGxlZnQ7XG4gICAgICAgICAgYH1cbiAgICAgICAgPlxuICAgICAgICAgIDxTaWRlQmFyPlxuICAgICAgICAgICAge3RpdGxlcy5tYXAoKHQsIGkpID0+IChcbiAgICAgICAgICAgICAgPGFcbiAgICAgICAgICAgICAgICBrZXk9e2l9XG4gICAgICAgICAgICAgICAgaHJlZj17c2x1Z3NbaV19XG4gICAgICAgICAgICAgICAgY3NzPXtjc3NgXG4gICAgICAgICAgICAgICAgICBjb2xvcjogaW5oZXJpdDtcbiAgICAgICAgICAgICAgICAgIG1hcmdpbjogMC4zZW0gMDtcbiAgICAgICAgICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgICAgICAgICAgICAgICY6aG92ZXIge1xuICAgICAgICAgICAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBgfVxuICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAge3R9XG4gICAgICAgICAgICAgIDwvYT5cbiAgICAgICAgICAgICkpfVxuICAgICAgICAgIDwvU2lkZUJhcj5cbiAgICAgICAgPC9hc2lkZT5cbiAgICAgICAgPGhlYWRlclxuICAgICAgICAgIGNzcz17Y3NzYFxuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgICAgICAgIGdyaWQtYXJlYTogaGVhZDtcbiAgICAgICAgICAgIGZvbnQtZmFtaWx5OiBMYXRvO1xuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMS42MWVtO1xuICAgICAgICAgICAgcGFkZGluZzogMWVtIDA7XG4gICAgICAgICAgICBsaW5lLWhlaWdodDogMS41O1xuICAgICAgICAgIGB9XG4gICAgICAgID5cbiAgICAgICAgICB7cG9zdC50aXRsZX1cbiAgICAgICAgPC9oZWFkZXI+XG4gICAgICAgIDxhcnRpY2xlIGNzcz17YXJ0aWNsZUNzc30+e21kUmVhY3R9PC9hcnRpY2xlPlxuICAgICAgICA8YXNpZGVcbiAgICAgICAgICBjc3M9e2Nzc2BcbiAgICAgICAgICAgIGdyaWQtYXJlYTogcmlnaHQ7XG4gICAgICAgICAgYH1cbiAgICAgICAgPjwvYXNpZGU+XG4gICAgICA8L21haW4+XG4gICAgPC8+XG4gICk7XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRTdGF0aWNQcm9wcyh7IHBhcmFtcyB9KSB7XG4gIGNvbnN0IHBvc3QgPSBnZXRQb3N0QnlTbHVnKHBhcmFtcy5zbHVnLCBbXCJ0aXRsZVwiLCBcInNsdWdcIiwgXCJjb250ZW50XCJdKTtcbiAgY29uc3QgY29udGVudCA9IGF3YWl0IG1hcmtkb3duVG9IdG1sKHBvc3QuY29udGVudCB8fCBcIlwiKTtcblxuICBjb25zdCBwb3N0cyA9IGdldEFsbFBvc3RzKFtcInRpdGxlXCIsIFwic2x1Z1wiXSk7XG4gIHJldHVybiB7XG4gICAgcHJvcHM6IHtcbiAgICAgIHRpdGxlczogcG9zdHMubWFwKChwKSA9PiBwLnRpdGxlKSxcbiAgICAgIHNsdWdzOiBwb3N0cy5tYXAoKHApID0+IHAuc2x1ZyksXG4gICAgICBwb3N0OiB7XG4gICAgICAgIC4uLnBvc3QsXG4gICAgICAgIGNvbnRlbnQsXG4gICAgICB9LFxuICAgIH0sXG4gIH07XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRTdGF0aWNQYXRocygpIHtcbiAgY29uc3QgcG9zdHMgPSBnZXRBbGxQb3N0cyhbXCJzbHVnXCJdKTtcblxuICByZXR1cm4ge1xuICAgIHBhdGhzOiBwb3N0cy5tYXAoKHBvc3QpID0+IHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHBhcmFtczoge1xuICAgICAgICAgIHNsdWc6IHBvc3Quc2x1ZyxcbiAgICAgICAgfSxcbiAgICAgIH07XG4gICAgfSksXG4gICAgZmFsbGJhY2s6IGZhbHNlLFxuICB9O1xufVxuIl19 */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n};\n\nvar _ref2 = false ? undefined : {\n  name: \"hfte0m-Post\",\n  styles: \"display:flex;align-items:center;justify-content:center;grid-area:head;font-family:Lato;font-weight:300;font-size:1.61em;padding:1em 0;line-height:1.5;label:Post;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kb2N0b3J6ZW4vUHJvamVjdHMvU3VtbWVyMjAyMS9DT01QMjAyL3RlYWNoaW5nX3B5dGhvbi9jb21wMjAyX2xlY3R1cmVzL3BhZ2VzL3Bvc3RzL1tzbHVnXS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF3SWtCIiwiZmlsZSI6Ii9Vc2Vycy9kb2N0b3J6ZW4vUHJvamVjdHMvU3VtbWVyMjAyMS9DT01QMjAyL3RlYWNoaW5nX3B5dGhvbi9jb21wMjAyX2xlY3R1cmVzL3BhZ2VzL3Bvc3RzL1tzbHVnXS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZVJvdXRlciB9IGZyb20gXCJuZXh0L3JvdXRlclwiO1xuaW1wb3J0IEVycm9yUGFnZSBmcm9tIFwibmV4dC9lcnJvclwiO1xuaW1wb3J0IHsgZ2V0UG9zdEJ5U2x1ZywgZ2V0QWxsUG9zdHMgfSBmcm9tIFwiLi4vLi4vbGliL2FwaVwiO1xuaW1wb3J0IEhlYWQgZnJvbSBcIm5leHQvaGVhZFwiO1xuaW1wb3J0IG1hcmtkb3duVG9IdG1sIGZyb20gXCIuLi8uLi9saWIvbWFya2Rvd25Ub0h0bWxcIjtcbmltcG9ydCB7IGNzcyB9IGZyb20gXCJAZW1vdGlvbi9yZWFjdFwiO1xuaW1wb3J0IHJlaHlwZTJyZWFjdCBmcm9tIFwicmVoeXBlLXJlYWN0XCI7XG5pbXBvcnQgcmVoeXBlUGFyc2UgZnJvbSBcInJlaHlwZS1wYXJzZVwiO1xuaW1wb3J0IHVuaWZpZWQgZnJvbSBcInVuaWZpZWRcIjtcbmltcG9ydCB2aXNpdCBmcm9tIFwidW5pc3QtdXRpbC12aXNpdFwiO1xuaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgSW5saW5lUHl0aG9uLCBCbG9ja1B5dGhvbiB9IGZyb20gXCIuLi8uLi9jb21wb25lbnRzL3B5dGhvblwiO1xuaW1wb3J0IHsgQmluYXJ5RGVjaW1hbCwgRGVjaW1hbEJpbmFyeSB9IGZyb20gXCIuLi8uLi9jb21wb25lbnRzL2JpbmFyeS1udW1iZXJzXCI7XG5pbXBvcnQgU2lkZUJhciBmcm9tIFwiLi4vLi4vY29tcG9uZW50cy9zaWRlYmFyXCI7XG5pbXBvcnQgeyBTbWFsbENhcHMsIElCb3gsIE15VGFibGUsIElubGluZUNvZGUgfSBmcm9tIFwiLi4vLi4vY29tcG9uZW50cy9taXNjXCI7XG5cbmZ1bmN0aW9uIHJlcGxhY2VSb290VGFncyhvcHRzKSB7XG4gIHJldHVybiB0cmFuc2Zvcm07XG5cbiAgZnVuY3Rpb24gdHJhbnNmb3JtKHRyZWUpIHtcbiAgICB2aXNpdCh0cmVlLCBcImVsZW1lbnRcIiwgdmlzaXRlcik7XG4gIH1cblxuICBmdW5jdGlvbiB2aXNpdGVyKG5vZGUsIGluZGV4LCBwYXJlbnQpIHtcbiAgICBpZiAobm9kZS50YWdOYW1lICE9PSBcImh0bWxcIiAmJiBub2RlLnRhZ05hbWUgIT09IFwiYm9keVwiICYmIG5vZGUudGFnTmFtZSAhPT0gXCJoZWFkXCIpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBub2RlLnRhZ05hbWUgPSBcImRpdlwiO1xuICB9XG59XG5cbmNvbnN0IHJlaHlwZVByb2Nlc3NvciA9IHVuaWZpZWQoKVxuICAudXNlKHJlaHlwZVBhcnNlKVxuICAudXNlKHJlcGxhY2VSb290VGFncylcbiAgLnVzZShyZWh5cGUycmVhY3QsIHtcbiAgICBjcmVhdGVFbGVtZW50OiBSZWFjdC5jcmVhdGVFbGVtZW50LFxuICAgIGNvbXBvbmVudHM6IHtcbiAgICAgIHB5OiBJbmxpbmVQeXRob24sXG4gICAgICBweXRob246IEJsb2NrUHl0aG9uLFxuICAgICAgc2M6IFNtYWxsQ2FwcyxcbiAgICAgIFwiZGVjaW1hbC1iaW5hcnlcIjogRGVjaW1hbEJpbmFyeSxcbiAgICAgIFwiYmluYXJ5LWRlY2ltYWxcIjogQmluYXJ5RGVjaW1hbCxcbiAgICAgIGlib3g6IElCb3gsXG4gICAgICB0YWJsZTogTXlUYWJsZSxcbiAgICAgIFwiaW5saW5lLWNvZGVcIjogSW5saW5lQ29kZSxcbiAgICB9LFxuICB9KTtcblxuY29uc3QgYXJ0aWNsZUNzcyA9IGNzc2BcbiAgZ3JpZC1hcmVhOiBtYWluO1xuICBmb250LWZhbWlseTogQWxlZ3JleWE7XG4gIGZvbnQtd2VpZ2h0OiAzMDA7XG4gIG92ZXJmbG93OiB2aXNpYmxlO1xuICBoMiB7XG4gICAgZm9udC1mYW1pbHk6IExhdG87XG4gICAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgICBmb250LXNpemU6IDEuMjVlbTtcbiAgICBtYXJnaW4tdG9wOiAxLjI1ZW07XG4gIH1cbiAgaDMge1xuICAgIGZvbnQtZmFtaWx5OiBMYXRvO1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgZm9udC1zaXplOiAxZW07XG4gICAgbWFyZ2luLWJvdHRvbTogMC4zZW07XG4gIH1cbiAgdWwge1xuICAgIG1hcmdpbi10b3A6IDBlbTtcbiAgfVxuICBjb2RlIHtcbiAgICBmb250LWZhbWlseTogSGFjaztcbiAgICBmb250LXNpemU6IDAuNzVlbTtcbiAgfVxuICAubWF0aC1pbmxpbmUge1xuICAgIGZvbnQtc2l6ZTogMC44ZW07XG4gIH1cbiAgcCB7XG4gICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgfVxuYDtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gUG9zdCh7IHBvc3QsIHRpdGxlcywgc2x1Z3MgfSkge1xuICBjb25zdCByb3V0ZXIgPSB1c2VSb3V0ZXIoKTtcbiAgaWYgKCFyb3V0ZXIuaXNGYWxsYmFjayAmJiAhcG9zdD8uc2x1Zykge1xuICAgIHJldHVybiA8RXJyb3JQYWdlIHN0YXR1c0NvZGU9ezQwNH0gLz47XG4gIH1cbiAgY29uc3QgbWRSZWFjdCA9IHJlaHlwZVByb2Nlc3Nvci5wcm9jZXNzU3luYyhwb3N0LmNvbnRlbnQpLnJlc3VsdDtcblxuICByZXR1cm4gKFxuICAgIDw+XG4gICAgICA8SGVhZD5cbiAgICAgICAgPHRpdGxlPntwb3N0LnRpdGxlfTwvdGl0bGU+XG4gICAgICA8L0hlYWQ+XG4gICAgICA8bWFpblxuICAgICAgICBjc3M9e2Nzc2BcbiAgICAgICAgICBmb250LXNpemU6IDEuNXJlbTtcbiAgICAgICAgICBmb250LWtlcm5pbmc6IG5vcm1hbDtcbiAgICAgICAgICBsaW5lLWhlaWdodDogMS41ZW07XG4gICAgICAgICAgLyogYmFja2dyb3VuZC1jb2xvcjogI2ViZTZkZjsgKi9cbiAgICAgICAgICAvKiBiYWNrZ3JvdW5kLWNvbG9yOiAjZjBlOWRmOyAqL1xuICAgICAgICAgIC8qIGNvbG9yOiAjMGMwYzBjOyAqL1xuICAgICAgICAgIGNvbG9yOiBibGFjaztcbiAgICAgICAgICBkaXNwbGF5OiBncmlkO1xuICAgICAgICAgIGdyaWQtdGVtcGxhdGUtYXJlYXM6XG4gICAgICAgICAgICBcImxlZnQgaGVhZCByaWdodFwiXG4gICAgICAgICAgICBcImxlZnQgbWFpbiByaWdodFwiO1xuICAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogYXV0byA2NWNoIGF1dG87XG4gICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiBhdXRvIDFmcjtcbiAgICAgICAgYH1cbiAgICAgID5cbiAgICAgICAgPGFzaWRlXG4gICAgICAgICAgY3NzPXtjc3NgXG4gICAgICAgICAgICBncmlkLWFyZWE6IGxlZnQ7XG4gICAgICAgICAgYH1cbiAgICAgICAgPlxuICAgICAgICAgIDxTaWRlQmFyPlxuICAgICAgICAgICAge3RpdGxlcy5tYXAoKHQsIGkpID0+IChcbiAgICAgICAgICAgICAgPGFcbiAgICAgICAgICAgICAgICBrZXk9e2l9XG4gICAgICAgICAgICAgICAgaHJlZj17c2x1Z3NbaV19XG4gICAgICAgICAgICAgICAgY3NzPXtjc3NgXG4gICAgICAgICAgICAgICAgICBjb2xvcjogaW5oZXJpdDtcbiAgICAgICAgICAgICAgICAgIG1hcmdpbjogMC4zZW0gMDtcbiAgICAgICAgICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgICAgICAgICAgICAgICY6aG92ZXIge1xuICAgICAgICAgICAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBgfVxuICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAge3R9XG4gICAgICAgICAgICAgIDwvYT5cbiAgICAgICAgICAgICkpfVxuICAgICAgICAgIDwvU2lkZUJhcj5cbiAgICAgICAgPC9hc2lkZT5cbiAgICAgICAgPGhlYWRlclxuICAgICAgICAgIGNzcz17Y3NzYFxuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgICAgICAgIGdyaWQtYXJlYTogaGVhZDtcbiAgICAgICAgICAgIGZvbnQtZmFtaWx5OiBMYXRvO1xuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMS42MWVtO1xuICAgICAgICAgICAgcGFkZGluZzogMWVtIDA7XG4gICAgICAgICAgICBsaW5lLWhlaWdodDogMS41O1xuICAgICAgICAgIGB9XG4gICAgICAgID5cbiAgICAgICAgICB7cG9zdC50aXRsZX1cbiAgICAgICAgPC9oZWFkZXI+XG4gICAgICAgIDxhcnRpY2xlIGNzcz17YXJ0aWNsZUNzc30+e21kUmVhY3R9PC9hcnRpY2xlPlxuICAgICAgICA8YXNpZGVcbiAgICAgICAgICBjc3M9e2Nzc2BcbiAgICAgICAgICAgIGdyaWQtYXJlYTogcmlnaHQ7XG4gICAgICAgICAgYH1cbiAgICAgICAgPjwvYXNpZGU+XG4gICAgICA8L21haW4+XG4gICAgPC8+XG4gICk7XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRTdGF0aWNQcm9wcyh7IHBhcmFtcyB9KSB7XG4gIGNvbnN0IHBvc3QgPSBnZXRQb3N0QnlTbHVnKHBhcmFtcy5zbHVnLCBbXCJ0aXRsZVwiLCBcInNsdWdcIiwgXCJjb250ZW50XCJdKTtcbiAgY29uc3QgY29udGVudCA9IGF3YWl0IG1hcmtkb3duVG9IdG1sKHBvc3QuY29udGVudCB8fCBcIlwiKTtcblxuICBjb25zdCBwb3N0cyA9IGdldEFsbFBvc3RzKFtcInRpdGxlXCIsIFwic2x1Z1wiXSk7XG4gIHJldHVybiB7XG4gICAgcHJvcHM6IHtcbiAgICAgIHRpdGxlczogcG9zdHMubWFwKChwKSA9PiBwLnRpdGxlKSxcbiAgICAgIHNsdWdzOiBwb3N0cy5tYXAoKHApID0+IHAuc2x1ZyksXG4gICAgICBwb3N0OiB7XG4gICAgICAgIC4uLnBvc3QsXG4gICAgICAgIGNvbnRlbnQsXG4gICAgICB9LFxuICAgIH0sXG4gIH07XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRTdGF0aWNQYXRocygpIHtcbiAgY29uc3QgcG9zdHMgPSBnZXRBbGxQb3N0cyhbXCJzbHVnXCJdKTtcblxuICByZXR1cm4ge1xuICAgIHBhdGhzOiBwb3N0cy5tYXAoKHBvc3QpID0+IHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHBhcmFtczoge1xuICAgICAgICAgIHNsdWc6IHBvc3Quc2x1ZyxcbiAgICAgICAgfSxcbiAgICAgIH07XG4gICAgfSksXG4gICAgZmFsbGJhY2s6IGZhbHNlLFxuICB9O1xufVxuIl19 */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n};\n\nvar _ref3 = false ? undefined : {\n  name: \"j8ua2e\",\n  styles: \"color:inherit;margin:0.3em 0;cursor:pointer;text-decoration:none;&:hover{text-decoration:underline;}\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kb2N0b3J6ZW4vUHJvamVjdHMvU3VtbWVyMjAyMS9DT01QMjAyL3RlYWNoaW5nX3B5dGhvbi9jb21wMjAyX2xlY3R1cmVzL3BhZ2VzL3Bvc3RzL1tzbHVnXS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF3SHdCIiwiZmlsZSI6Ii9Vc2Vycy9kb2N0b3J6ZW4vUHJvamVjdHMvU3VtbWVyMjAyMS9DT01QMjAyL3RlYWNoaW5nX3B5dGhvbi9jb21wMjAyX2xlY3R1cmVzL3BhZ2VzL3Bvc3RzL1tzbHVnXS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZVJvdXRlciB9IGZyb20gXCJuZXh0L3JvdXRlclwiO1xuaW1wb3J0IEVycm9yUGFnZSBmcm9tIFwibmV4dC9lcnJvclwiO1xuaW1wb3J0IHsgZ2V0UG9zdEJ5U2x1ZywgZ2V0QWxsUG9zdHMgfSBmcm9tIFwiLi4vLi4vbGliL2FwaVwiO1xuaW1wb3J0IEhlYWQgZnJvbSBcIm5leHQvaGVhZFwiO1xuaW1wb3J0IG1hcmtkb3duVG9IdG1sIGZyb20gXCIuLi8uLi9saWIvbWFya2Rvd25Ub0h0bWxcIjtcbmltcG9ydCB7IGNzcyB9IGZyb20gXCJAZW1vdGlvbi9yZWFjdFwiO1xuaW1wb3J0IHJlaHlwZTJyZWFjdCBmcm9tIFwicmVoeXBlLXJlYWN0XCI7XG5pbXBvcnQgcmVoeXBlUGFyc2UgZnJvbSBcInJlaHlwZS1wYXJzZVwiO1xuaW1wb3J0IHVuaWZpZWQgZnJvbSBcInVuaWZpZWRcIjtcbmltcG9ydCB2aXNpdCBmcm9tIFwidW5pc3QtdXRpbC12aXNpdFwiO1xuaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgSW5saW5lUHl0aG9uLCBCbG9ja1B5dGhvbiB9IGZyb20gXCIuLi8uLi9jb21wb25lbnRzL3B5dGhvblwiO1xuaW1wb3J0IHsgQmluYXJ5RGVjaW1hbCwgRGVjaW1hbEJpbmFyeSB9IGZyb20gXCIuLi8uLi9jb21wb25lbnRzL2JpbmFyeS1udW1iZXJzXCI7XG5pbXBvcnQgU2lkZUJhciBmcm9tIFwiLi4vLi4vY29tcG9uZW50cy9zaWRlYmFyXCI7XG5pbXBvcnQgeyBTbWFsbENhcHMsIElCb3gsIE15VGFibGUsIElubGluZUNvZGUgfSBmcm9tIFwiLi4vLi4vY29tcG9uZW50cy9taXNjXCI7XG5cbmZ1bmN0aW9uIHJlcGxhY2VSb290VGFncyhvcHRzKSB7XG4gIHJldHVybiB0cmFuc2Zvcm07XG5cbiAgZnVuY3Rpb24gdHJhbnNmb3JtKHRyZWUpIHtcbiAgICB2aXNpdCh0cmVlLCBcImVsZW1lbnRcIiwgdmlzaXRlcik7XG4gIH1cblxuICBmdW5jdGlvbiB2aXNpdGVyKG5vZGUsIGluZGV4LCBwYXJlbnQpIHtcbiAgICBpZiAobm9kZS50YWdOYW1lICE9PSBcImh0bWxcIiAmJiBub2RlLnRhZ05hbWUgIT09IFwiYm9keVwiICYmIG5vZGUudGFnTmFtZSAhPT0gXCJoZWFkXCIpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBub2RlLnRhZ05hbWUgPSBcImRpdlwiO1xuICB9XG59XG5cbmNvbnN0IHJlaHlwZVByb2Nlc3NvciA9IHVuaWZpZWQoKVxuICAudXNlKHJlaHlwZVBhcnNlKVxuICAudXNlKHJlcGxhY2VSb290VGFncylcbiAgLnVzZShyZWh5cGUycmVhY3QsIHtcbiAgICBjcmVhdGVFbGVtZW50OiBSZWFjdC5jcmVhdGVFbGVtZW50LFxuICAgIGNvbXBvbmVudHM6IHtcbiAgICAgIHB5OiBJbmxpbmVQeXRob24sXG4gICAgICBweXRob246IEJsb2NrUHl0aG9uLFxuICAgICAgc2M6IFNtYWxsQ2FwcyxcbiAgICAgIFwiZGVjaW1hbC1iaW5hcnlcIjogRGVjaW1hbEJpbmFyeSxcbiAgICAgIFwiYmluYXJ5LWRlY2ltYWxcIjogQmluYXJ5RGVjaW1hbCxcbiAgICAgIGlib3g6IElCb3gsXG4gICAgICB0YWJsZTogTXlUYWJsZSxcbiAgICAgIFwiaW5saW5lLWNvZGVcIjogSW5saW5lQ29kZSxcbiAgICB9LFxuICB9KTtcblxuY29uc3QgYXJ0aWNsZUNzcyA9IGNzc2BcbiAgZ3JpZC1hcmVhOiBtYWluO1xuICBmb250LWZhbWlseTogQWxlZ3JleWE7XG4gIGZvbnQtd2VpZ2h0OiAzMDA7XG4gIG92ZXJmbG93OiB2aXNpYmxlO1xuICBoMiB7XG4gICAgZm9udC1mYW1pbHk6IExhdG87XG4gICAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgICBmb250LXNpemU6IDEuMjVlbTtcbiAgICBtYXJnaW4tdG9wOiAxLjI1ZW07XG4gIH1cbiAgaDMge1xuICAgIGZvbnQtZmFtaWx5OiBMYXRvO1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgZm9udC1zaXplOiAxZW07XG4gICAgbWFyZ2luLWJvdHRvbTogMC4zZW07XG4gIH1cbiAgdWwge1xuICAgIG1hcmdpbi10b3A6IDBlbTtcbiAgfVxuICBjb2RlIHtcbiAgICBmb250LWZhbWlseTogSGFjaztcbiAgICBmb250LXNpemU6IDAuNzVlbTtcbiAgfVxuICAubWF0aC1pbmxpbmUge1xuICAgIGZvbnQtc2l6ZTogMC44ZW07XG4gIH1cbiAgcCB7XG4gICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgfVxuYDtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gUG9zdCh7IHBvc3QsIHRpdGxlcywgc2x1Z3MgfSkge1xuICBjb25zdCByb3V0ZXIgPSB1c2VSb3V0ZXIoKTtcbiAgaWYgKCFyb3V0ZXIuaXNGYWxsYmFjayAmJiAhcG9zdD8uc2x1Zykge1xuICAgIHJldHVybiA8RXJyb3JQYWdlIHN0YXR1c0NvZGU9ezQwNH0gLz47XG4gIH1cbiAgY29uc3QgbWRSZWFjdCA9IHJlaHlwZVByb2Nlc3Nvci5wcm9jZXNzU3luYyhwb3N0LmNvbnRlbnQpLnJlc3VsdDtcblxuICByZXR1cm4gKFxuICAgIDw+XG4gICAgICA8SGVhZD5cbiAgICAgICAgPHRpdGxlPntwb3N0LnRpdGxlfTwvdGl0bGU+XG4gICAgICA8L0hlYWQ+XG4gICAgICA8bWFpblxuICAgICAgICBjc3M9e2Nzc2BcbiAgICAgICAgICBmb250LXNpemU6IDEuNXJlbTtcbiAgICAgICAgICBmb250LWtlcm5pbmc6IG5vcm1hbDtcbiAgICAgICAgICBsaW5lLWhlaWdodDogMS41ZW07XG4gICAgICAgICAgLyogYmFja2dyb3VuZC1jb2xvcjogI2ViZTZkZjsgKi9cbiAgICAgICAgICAvKiBiYWNrZ3JvdW5kLWNvbG9yOiAjZjBlOWRmOyAqL1xuICAgICAgICAgIC8qIGNvbG9yOiAjMGMwYzBjOyAqL1xuICAgICAgICAgIGNvbG9yOiBibGFjaztcbiAgICAgICAgICBkaXNwbGF5OiBncmlkO1xuICAgICAgICAgIGdyaWQtdGVtcGxhdGUtYXJlYXM6XG4gICAgICAgICAgICBcImxlZnQgaGVhZCByaWdodFwiXG4gICAgICAgICAgICBcImxlZnQgbWFpbiByaWdodFwiO1xuICAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogYXV0byA2NWNoIGF1dG87XG4gICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiBhdXRvIDFmcjtcbiAgICAgICAgYH1cbiAgICAgID5cbiAgICAgICAgPGFzaWRlXG4gICAgICAgICAgY3NzPXtjc3NgXG4gICAgICAgICAgICBncmlkLWFyZWE6IGxlZnQ7XG4gICAgICAgICAgYH1cbiAgICAgICAgPlxuICAgICAgICAgIDxTaWRlQmFyPlxuICAgICAgICAgICAge3RpdGxlcy5tYXAoKHQsIGkpID0+IChcbiAgICAgICAgICAgICAgPGFcbiAgICAgICAgICAgICAgICBrZXk9e2l9XG4gICAgICAgICAgICAgICAgaHJlZj17c2x1Z3NbaV19XG4gICAgICAgICAgICAgICAgY3NzPXtjc3NgXG4gICAgICAgICAgICAgICAgICBjb2xvcjogaW5oZXJpdDtcbiAgICAgICAgICAgICAgICAgIG1hcmdpbjogMC4zZW0gMDtcbiAgICAgICAgICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgICAgICAgICAgICAgICY6aG92ZXIge1xuICAgICAgICAgICAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBgfVxuICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAge3R9XG4gICAgICAgICAgICAgIDwvYT5cbiAgICAgICAgICAgICkpfVxuICAgICAgICAgIDwvU2lkZUJhcj5cbiAgICAgICAgPC9hc2lkZT5cbiAgICAgICAgPGhlYWRlclxuICAgICAgICAgIGNzcz17Y3NzYFxuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgICAgICAgIGdyaWQtYXJlYTogaGVhZDtcbiAgICAgICAgICAgIGZvbnQtZmFtaWx5OiBMYXRvO1xuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMS42MWVtO1xuICAgICAgICAgICAgcGFkZGluZzogMWVtIDA7XG4gICAgICAgICAgICBsaW5lLWhlaWdodDogMS41O1xuICAgICAgICAgIGB9XG4gICAgICAgID5cbiAgICAgICAgICB7cG9zdC50aXRsZX1cbiAgICAgICAgPC9oZWFkZXI+XG4gICAgICAgIDxhcnRpY2xlIGNzcz17YXJ0aWNsZUNzc30+e21kUmVhY3R9PC9hcnRpY2xlPlxuICAgICAgICA8YXNpZGVcbiAgICAgICAgICBjc3M9e2Nzc2BcbiAgICAgICAgICAgIGdyaWQtYXJlYTogcmlnaHQ7XG4gICAgICAgICAgYH1cbiAgICAgICAgPjwvYXNpZGU+XG4gICAgICA8L21haW4+XG4gICAgPC8+XG4gICk7XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRTdGF0aWNQcm9wcyh7IHBhcmFtcyB9KSB7XG4gIGNvbnN0IHBvc3QgPSBnZXRQb3N0QnlTbHVnKHBhcmFtcy5zbHVnLCBbXCJ0aXRsZVwiLCBcInNsdWdcIiwgXCJjb250ZW50XCJdKTtcbiAgY29uc3QgY29udGVudCA9IGF3YWl0IG1hcmtkb3duVG9IdG1sKHBvc3QuY29udGVudCB8fCBcIlwiKTtcblxuICBjb25zdCBwb3N0cyA9IGdldEFsbFBvc3RzKFtcInRpdGxlXCIsIFwic2x1Z1wiXSk7XG4gIHJldHVybiB7XG4gICAgcHJvcHM6IHtcbiAgICAgIHRpdGxlczogcG9zdHMubWFwKChwKSA9PiBwLnRpdGxlKSxcbiAgICAgIHNsdWdzOiBwb3N0cy5tYXAoKHApID0+IHAuc2x1ZyksXG4gICAgICBwb3N0OiB7XG4gICAgICAgIC4uLnBvc3QsXG4gICAgICAgIGNvbnRlbnQsXG4gICAgICB9LFxuICAgIH0sXG4gIH07XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRTdGF0aWNQYXRocygpIHtcbiAgY29uc3QgcG9zdHMgPSBnZXRBbGxQb3N0cyhbXCJzbHVnXCJdKTtcblxuICByZXR1cm4ge1xuICAgIHBhdGhzOiBwb3N0cy5tYXAoKHBvc3QpID0+IHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHBhcmFtczoge1xuICAgICAgICAgIHNsdWc6IHBvc3Quc2x1ZyxcbiAgICAgICAgfSxcbiAgICAgIH07XG4gICAgfSksXG4gICAgZmFsbGJhY2s6IGZhbHNlLFxuICB9O1xufVxuIl19 */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n};\n\nvar _ref4 = false ? undefined : {\n  name: \"4u5k5i-Post\",\n  styles: \"grid-area:left;label:Post;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kb2N0b3J6ZW4vUHJvamVjdHMvU3VtbWVyMjAyMS9DT01QMjAyL3RlYWNoaW5nX3B5dGhvbi9jb21wMjAyX2xlY3R1cmVzL3BhZ2VzL3Bvc3RzL1tzbHVnXS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUErR2tCIiwiZmlsZSI6Ii9Vc2Vycy9kb2N0b3J6ZW4vUHJvamVjdHMvU3VtbWVyMjAyMS9DT01QMjAyL3RlYWNoaW5nX3B5dGhvbi9jb21wMjAyX2xlY3R1cmVzL3BhZ2VzL3Bvc3RzL1tzbHVnXS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZVJvdXRlciB9IGZyb20gXCJuZXh0L3JvdXRlclwiO1xuaW1wb3J0IEVycm9yUGFnZSBmcm9tIFwibmV4dC9lcnJvclwiO1xuaW1wb3J0IHsgZ2V0UG9zdEJ5U2x1ZywgZ2V0QWxsUG9zdHMgfSBmcm9tIFwiLi4vLi4vbGliL2FwaVwiO1xuaW1wb3J0IEhlYWQgZnJvbSBcIm5leHQvaGVhZFwiO1xuaW1wb3J0IG1hcmtkb3duVG9IdG1sIGZyb20gXCIuLi8uLi9saWIvbWFya2Rvd25Ub0h0bWxcIjtcbmltcG9ydCB7IGNzcyB9IGZyb20gXCJAZW1vdGlvbi9yZWFjdFwiO1xuaW1wb3J0IHJlaHlwZTJyZWFjdCBmcm9tIFwicmVoeXBlLXJlYWN0XCI7XG5pbXBvcnQgcmVoeXBlUGFyc2UgZnJvbSBcInJlaHlwZS1wYXJzZVwiO1xuaW1wb3J0IHVuaWZpZWQgZnJvbSBcInVuaWZpZWRcIjtcbmltcG9ydCB2aXNpdCBmcm9tIFwidW5pc3QtdXRpbC12aXNpdFwiO1xuaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgSW5saW5lUHl0aG9uLCBCbG9ja1B5dGhvbiB9IGZyb20gXCIuLi8uLi9jb21wb25lbnRzL3B5dGhvblwiO1xuaW1wb3J0IHsgQmluYXJ5RGVjaW1hbCwgRGVjaW1hbEJpbmFyeSB9IGZyb20gXCIuLi8uLi9jb21wb25lbnRzL2JpbmFyeS1udW1iZXJzXCI7XG5pbXBvcnQgU2lkZUJhciBmcm9tIFwiLi4vLi4vY29tcG9uZW50cy9zaWRlYmFyXCI7XG5pbXBvcnQgeyBTbWFsbENhcHMsIElCb3gsIE15VGFibGUsIElubGluZUNvZGUgfSBmcm9tIFwiLi4vLi4vY29tcG9uZW50cy9taXNjXCI7XG5cbmZ1bmN0aW9uIHJlcGxhY2VSb290VGFncyhvcHRzKSB7XG4gIHJldHVybiB0cmFuc2Zvcm07XG5cbiAgZnVuY3Rpb24gdHJhbnNmb3JtKHRyZWUpIHtcbiAgICB2aXNpdCh0cmVlLCBcImVsZW1lbnRcIiwgdmlzaXRlcik7XG4gIH1cblxuICBmdW5jdGlvbiB2aXNpdGVyKG5vZGUsIGluZGV4LCBwYXJlbnQpIHtcbiAgICBpZiAobm9kZS50YWdOYW1lICE9PSBcImh0bWxcIiAmJiBub2RlLnRhZ05hbWUgIT09IFwiYm9keVwiICYmIG5vZGUudGFnTmFtZSAhPT0gXCJoZWFkXCIpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBub2RlLnRhZ05hbWUgPSBcImRpdlwiO1xuICB9XG59XG5cbmNvbnN0IHJlaHlwZVByb2Nlc3NvciA9IHVuaWZpZWQoKVxuICAudXNlKHJlaHlwZVBhcnNlKVxuICAudXNlKHJlcGxhY2VSb290VGFncylcbiAgLnVzZShyZWh5cGUycmVhY3QsIHtcbiAgICBjcmVhdGVFbGVtZW50OiBSZWFjdC5jcmVhdGVFbGVtZW50LFxuICAgIGNvbXBvbmVudHM6IHtcbiAgICAgIHB5OiBJbmxpbmVQeXRob24sXG4gICAgICBweXRob246IEJsb2NrUHl0aG9uLFxuICAgICAgc2M6IFNtYWxsQ2FwcyxcbiAgICAgIFwiZGVjaW1hbC1iaW5hcnlcIjogRGVjaW1hbEJpbmFyeSxcbiAgICAgIFwiYmluYXJ5LWRlY2ltYWxcIjogQmluYXJ5RGVjaW1hbCxcbiAgICAgIGlib3g6IElCb3gsXG4gICAgICB0YWJsZTogTXlUYWJsZSxcbiAgICAgIFwiaW5saW5lLWNvZGVcIjogSW5saW5lQ29kZSxcbiAgICB9LFxuICB9KTtcblxuY29uc3QgYXJ0aWNsZUNzcyA9IGNzc2BcbiAgZ3JpZC1hcmVhOiBtYWluO1xuICBmb250LWZhbWlseTogQWxlZ3JleWE7XG4gIGZvbnQtd2VpZ2h0OiAzMDA7XG4gIG92ZXJmbG93OiB2aXNpYmxlO1xuICBoMiB7XG4gICAgZm9udC1mYW1pbHk6IExhdG87XG4gICAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgICBmb250LXNpemU6IDEuMjVlbTtcbiAgICBtYXJnaW4tdG9wOiAxLjI1ZW07XG4gIH1cbiAgaDMge1xuICAgIGZvbnQtZmFtaWx5OiBMYXRvO1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgZm9udC1zaXplOiAxZW07XG4gICAgbWFyZ2luLWJvdHRvbTogMC4zZW07XG4gIH1cbiAgdWwge1xuICAgIG1hcmdpbi10b3A6IDBlbTtcbiAgfVxuICBjb2RlIHtcbiAgICBmb250LWZhbWlseTogSGFjaztcbiAgICBmb250LXNpemU6IDAuNzVlbTtcbiAgfVxuICAubWF0aC1pbmxpbmUge1xuICAgIGZvbnQtc2l6ZTogMC44ZW07XG4gIH1cbiAgcCB7XG4gICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgfVxuYDtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gUG9zdCh7IHBvc3QsIHRpdGxlcywgc2x1Z3MgfSkge1xuICBjb25zdCByb3V0ZXIgPSB1c2VSb3V0ZXIoKTtcbiAgaWYgKCFyb3V0ZXIuaXNGYWxsYmFjayAmJiAhcG9zdD8uc2x1Zykge1xuICAgIHJldHVybiA8RXJyb3JQYWdlIHN0YXR1c0NvZGU9ezQwNH0gLz47XG4gIH1cbiAgY29uc3QgbWRSZWFjdCA9IHJlaHlwZVByb2Nlc3Nvci5wcm9jZXNzU3luYyhwb3N0LmNvbnRlbnQpLnJlc3VsdDtcblxuICByZXR1cm4gKFxuICAgIDw+XG4gICAgICA8SGVhZD5cbiAgICAgICAgPHRpdGxlPntwb3N0LnRpdGxlfTwvdGl0bGU+XG4gICAgICA8L0hlYWQ+XG4gICAgICA8bWFpblxuICAgICAgICBjc3M9e2Nzc2BcbiAgICAgICAgICBmb250LXNpemU6IDEuNXJlbTtcbiAgICAgICAgICBmb250LWtlcm5pbmc6IG5vcm1hbDtcbiAgICAgICAgICBsaW5lLWhlaWdodDogMS41ZW07XG4gICAgICAgICAgLyogYmFja2dyb3VuZC1jb2xvcjogI2ViZTZkZjsgKi9cbiAgICAgICAgICAvKiBiYWNrZ3JvdW5kLWNvbG9yOiAjZjBlOWRmOyAqL1xuICAgICAgICAgIC8qIGNvbG9yOiAjMGMwYzBjOyAqL1xuICAgICAgICAgIGNvbG9yOiBibGFjaztcbiAgICAgICAgICBkaXNwbGF5OiBncmlkO1xuICAgICAgICAgIGdyaWQtdGVtcGxhdGUtYXJlYXM6XG4gICAgICAgICAgICBcImxlZnQgaGVhZCByaWdodFwiXG4gICAgICAgICAgICBcImxlZnQgbWFpbiByaWdodFwiO1xuICAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogYXV0byA2NWNoIGF1dG87XG4gICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiBhdXRvIDFmcjtcbiAgICAgICAgYH1cbiAgICAgID5cbiAgICAgICAgPGFzaWRlXG4gICAgICAgICAgY3NzPXtjc3NgXG4gICAgICAgICAgICBncmlkLWFyZWE6IGxlZnQ7XG4gICAgICAgICAgYH1cbiAgICAgICAgPlxuICAgICAgICAgIDxTaWRlQmFyPlxuICAgICAgICAgICAge3RpdGxlcy5tYXAoKHQsIGkpID0+IChcbiAgICAgICAgICAgICAgPGFcbiAgICAgICAgICAgICAgICBrZXk9e2l9XG4gICAgICAgICAgICAgICAgaHJlZj17c2x1Z3NbaV19XG4gICAgICAgICAgICAgICAgY3NzPXtjc3NgXG4gICAgICAgICAgICAgICAgICBjb2xvcjogaW5oZXJpdDtcbiAgICAgICAgICAgICAgICAgIG1hcmdpbjogMC4zZW0gMDtcbiAgICAgICAgICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgICAgICAgICAgICAgICY6aG92ZXIge1xuICAgICAgICAgICAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBgfVxuICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAge3R9XG4gICAgICAgICAgICAgIDwvYT5cbiAgICAgICAgICAgICkpfVxuICAgICAgICAgIDwvU2lkZUJhcj5cbiAgICAgICAgPC9hc2lkZT5cbiAgICAgICAgPGhlYWRlclxuICAgICAgICAgIGNzcz17Y3NzYFxuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgICAgICAgIGdyaWQtYXJlYTogaGVhZDtcbiAgICAgICAgICAgIGZvbnQtZmFtaWx5OiBMYXRvO1xuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMS42MWVtO1xuICAgICAgICAgICAgcGFkZGluZzogMWVtIDA7XG4gICAgICAgICAgICBsaW5lLWhlaWdodDogMS41O1xuICAgICAgICAgIGB9XG4gICAgICAgID5cbiAgICAgICAgICB7cG9zdC50aXRsZX1cbiAgICAgICAgPC9oZWFkZXI+XG4gICAgICAgIDxhcnRpY2xlIGNzcz17YXJ0aWNsZUNzc30+e21kUmVhY3R9PC9hcnRpY2xlPlxuICAgICAgICA8YXNpZGVcbiAgICAgICAgICBjc3M9e2Nzc2BcbiAgICAgICAgICAgIGdyaWQtYXJlYTogcmlnaHQ7XG4gICAgICAgICAgYH1cbiAgICAgICAgPjwvYXNpZGU+XG4gICAgICA8L21haW4+XG4gICAgPC8+XG4gICk7XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRTdGF0aWNQcm9wcyh7IHBhcmFtcyB9KSB7XG4gIGNvbnN0IHBvc3QgPSBnZXRQb3N0QnlTbHVnKHBhcmFtcy5zbHVnLCBbXCJ0aXRsZVwiLCBcInNsdWdcIiwgXCJjb250ZW50XCJdKTtcbiAgY29uc3QgY29udGVudCA9IGF3YWl0IG1hcmtkb3duVG9IdG1sKHBvc3QuY29udGVudCB8fCBcIlwiKTtcblxuICBjb25zdCBwb3N0cyA9IGdldEFsbFBvc3RzKFtcInRpdGxlXCIsIFwic2x1Z1wiXSk7XG4gIHJldHVybiB7XG4gICAgcHJvcHM6IHtcbiAgICAgIHRpdGxlczogcG9zdHMubWFwKChwKSA9PiBwLnRpdGxlKSxcbiAgICAgIHNsdWdzOiBwb3N0cy5tYXAoKHApID0+IHAuc2x1ZyksXG4gICAgICBwb3N0OiB7XG4gICAgICAgIC4uLnBvc3QsXG4gICAgICAgIGNvbnRlbnQsXG4gICAgICB9LFxuICAgIH0sXG4gIH07XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRTdGF0aWNQYXRocygpIHtcbiAgY29uc3QgcG9zdHMgPSBnZXRBbGxQb3N0cyhbXCJzbHVnXCJdKTtcblxuICByZXR1cm4ge1xuICAgIHBhdGhzOiBwb3N0cy5tYXAoKHBvc3QpID0+IHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHBhcmFtczoge1xuICAgICAgICAgIHNsdWc6IHBvc3Quc2x1ZyxcbiAgICAgICAgfSxcbiAgICAgIH07XG4gICAgfSksXG4gICAgZmFsbGJhY2s6IGZhbHNlLFxuICB9O1xufVxuIl19 */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n};\n\nvar _ref5 = false ? undefined : {\n  name: \"jomc1n-Post\",\n  styles: \"font-size:1.5rem;font-kerning:normal;line-height:1.5em;color:black;display:grid;grid-template-areas:\\\"left head right\\\" \\\"left main right\\\";grid-template-columns:auto 65ch auto;grid-template-rows:auto 1fr;label:Post;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kb2N0b3J6ZW4vUHJvamVjdHMvU3VtbWVyMjAyMS9DT01QMjAyL3RlYWNoaW5nX3B5dGhvbi9jb21wMjAyX2xlY3R1cmVzL3BhZ2VzL3Bvc3RzL1tzbHVnXS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUE4RmdCIiwiZmlsZSI6Ii9Vc2Vycy9kb2N0b3J6ZW4vUHJvamVjdHMvU3VtbWVyMjAyMS9DT01QMjAyL3RlYWNoaW5nX3B5dGhvbi9jb21wMjAyX2xlY3R1cmVzL3BhZ2VzL3Bvc3RzL1tzbHVnXS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZVJvdXRlciB9IGZyb20gXCJuZXh0L3JvdXRlclwiO1xuaW1wb3J0IEVycm9yUGFnZSBmcm9tIFwibmV4dC9lcnJvclwiO1xuaW1wb3J0IHsgZ2V0UG9zdEJ5U2x1ZywgZ2V0QWxsUG9zdHMgfSBmcm9tIFwiLi4vLi4vbGliL2FwaVwiO1xuaW1wb3J0IEhlYWQgZnJvbSBcIm5leHQvaGVhZFwiO1xuaW1wb3J0IG1hcmtkb3duVG9IdG1sIGZyb20gXCIuLi8uLi9saWIvbWFya2Rvd25Ub0h0bWxcIjtcbmltcG9ydCB7IGNzcyB9IGZyb20gXCJAZW1vdGlvbi9yZWFjdFwiO1xuaW1wb3J0IHJlaHlwZTJyZWFjdCBmcm9tIFwicmVoeXBlLXJlYWN0XCI7XG5pbXBvcnQgcmVoeXBlUGFyc2UgZnJvbSBcInJlaHlwZS1wYXJzZVwiO1xuaW1wb3J0IHVuaWZpZWQgZnJvbSBcInVuaWZpZWRcIjtcbmltcG9ydCB2aXNpdCBmcm9tIFwidW5pc3QtdXRpbC12aXNpdFwiO1xuaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgSW5saW5lUHl0aG9uLCBCbG9ja1B5dGhvbiB9IGZyb20gXCIuLi8uLi9jb21wb25lbnRzL3B5dGhvblwiO1xuaW1wb3J0IHsgQmluYXJ5RGVjaW1hbCwgRGVjaW1hbEJpbmFyeSB9IGZyb20gXCIuLi8uLi9jb21wb25lbnRzL2JpbmFyeS1udW1iZXJzXCI7XG5pbXBvcnQgU2lkZUJhciBmcm9tIFwiLi4vLi4vY29tcG9uZW50cy9zaWRlYmFyXCI7XG5pbXBvcnQgeyBTbWFsbENhcHMsIElCb3gsIE15VGFibGUsIElubGluZUNvZGUgfSBmcm9tIFwiLi4vLi4vY29tcG9uZW50cy9taXNjXCI7XG5cbmZ1bmN0aW9uIHJlcGxhY2VSb290VGFncyhvcHRzKSB7XG4gIHJldHVybiB0cmFuc2Zvcm07XG5cbiAgZnVuY3Rpb24gdHJhbnNmb3JtKHRyZWUpIHtcbiAgICB2aXNpdCh0cmVlLCBcImVsZW1lbnRcIiwgdmlzaXRlcik7XG4gIH1cblxuICBmdW5jdGlvbiB2aXNpdGVyKG5vZGUsIGluZGV4LCBwYXJlbnQpIHtcbiAgICBpZiAobm9kZS50YWdOYW1lICE9PSBcImh0bWxcIiAmJiBub2RlLnRhZ05hbWUgIT09IFwiYm9keVwiICYmIG5vZGUudGFnTmFtZSAhPT0gXCJoZWFkXCIpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBub2RlLnRhZ05hbWUgPSBcImRpdlwiO1xuICB9XG59XG5cbmNvbnN0IHJlaHlwZVByb2Nlc3NvciA9IHVuaWZpZWQoKVxuICAudXNlKHJlaHlwZVBhcnNlKVxuICAudXNlKHJlcGxhY2VSb290VGFncylcbiAgLnVzZShyZWh5cGUycmVhY3QsIHtcbiAgICBjcmVhdGVFbGVtZW50OiBSZWFjdC5jcmVhdGVFbGVtZW50LFxuICAgIGNvbXBvbmVudHM6IHtcbiAgICAgIHB5OiBJbmxpbmVQeXRob24sXG4gICAgICBweXRob246IEJsb2NrUHl0aG9uLFxuICAgICAgc2M6IFNtYWxsQ2FwcyxcbiAgICAgIFwiZGVjaW1hbC1iaW5hcnlcIjogRGVjaW1hbEJpbmFyeSxcbiAgICAgIFwiYmluYXJ5LWRlY2ltYWxcIjogQmluYXJ5RGVjaW1hbCxcbiAgICAgIGlib3g6IElCb3gsXG4gICAgICB0YWJsZTogTXlUYWJsZSxcbiAgICAgIFwiaW5saW5lLWNvZGVcIjogSW5saW5lQ29kZSxcbiAgICB9LFxuICB9KTtcblxuY29uc3QgYXJ0aWNsZUNzcyA9IGNzc2BcbiAgZ3JpZC1hcmVhOiBtYWluO1xuICBmb250LWZhbWlseTogQWxlZ3JleWE7XG4gIGZvbnQtd2VpZ2h0OiAzMDA7XG4gIG92ZXJmbG93OiB2aXNpYmxlO1xuICBoMiB7XG4gICAgZm9udC1mYW1pbHk6IExhdG87XG4gICAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgICBmb250LXNpemU6IDEuMjVlbTtcbiAgICBtYXJnaW4tdG9wOiAxLjI1ZW07XG4gIH1cbiAgaDMge1xuICAgIGZvbnQtZmFtaWx5OiBMYXRvO1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgZm9udC1zaXplOiAxZW07XG4gICAgbWFyZ2luLWJvdHRvbTogMC4zZW07XG4gIH1cbiAgdWwge1xuICAgIG1hcmdpbi10b3A6IDBlbTtcbiAgfVxuICBjb2RlIHtcbiAgICBmb250LWZhbWlseTogSGFjaztcbiAgICBmb250LXNpemU6IDAuNzVlbTtcbiAgfVxuICAubWF0aC1pbmxpbmUge1xuICAgIGZvbnQtc2l6ZTogMC44ZW07XG4gIH1cbiAgcCB7XG4gICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgfVxuYDtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gUG9zdCh7IHBvc3QsIHRpdGxlcywgc2x1Z3MgfSkge1xuICBjb25zdCByb3V0ZXIgPSB1c2VSb3V0ZXIoKTtcbiAgaWYgKCFyb3V0ZXIuaXNGYWxsYmFjayAmJiAhcG9zdD8uc2x1Zykge1xuICAgIHJldHVybiA8RXJyb3JQYWdlIHN0YXR1c0NvZGU9ezQwNH0gLz47XG4gIH1cbiAgY29uc3QgbWRSZWFjdCA9IHJlaHlwZVByb2Nlc3Nvci5wcm9jZXNzU3luYyhwb3N0LmNvbnRlbnQpLnJlc3VsdDtcblxuICByZXR1cm4gKFxuICAgIDw+XG4gICAgICA8SGVhZD5cbiAgICAgICAgPHRpdGxlPntwb3N0LnRpdGxlfTwvdGl0bGU+XG4gICAgICA8L0hlYWQ+XG4gICAgICA8bWFpblxuICAgICAgICBjc3M9e2Nzc2BcbiAgICAgICAgICBmb250LXNpemU6IDEuNXJlbTtcbiAgICAgICAgICBmb250LWtlcm5pbmc6IG5vcm1hbDtcbiAgICAgICAgICBsaW5lLWhlaWdodDogMS41ZW07XG4gICAgICAgICAgLyogYmFja2dyb3VuZC1jb2xvcjogI2ViZTZkZjsgKi9cbiAgICAgICAgICAvKiBiYWNrZ3JvdW5kLWNvbG9yOiAjZjBlOWRmOyAqL1xuICAgICAgICAgIC8qIGNvbG9yOiAjMGMwYzBjOyAqL1xuICAgICAgICAgIGNvbG9yOiBibGFjaztcbiAgICAgICAgICBkaXNwbGF5OiBncmlkO1xuICAgICAgICAgIGdyaWQtdGVtcGxhdGUtYXJlYXM6XG4gICAgICAgICAgICBcImxlZnQgaGVhZCByaWdodFwiXG4gICAgICAgICAgICBcImxlZnQgbWFpbiByaWdodFwiO1xuICAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogYXV0byA2NWNoIGF1dG87XG4gICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiBhdXRvIDFmcjtcbiAgICAgICAgYH1cbiAgICAgID5cbiAgICAgICAgPGFzaWRlXG4gICAgICAgICAgY3NzPXtjc3NgXG4gICAgICAgICAgICBncmlkLWFyZWE6IGxlZnQ7XG4gICAgICAgICAgYH1cbiAgICAgICAgPlxuICAgICAgICAgIDxTaWRlQmFyPlxuICAgICAgICAgICAge3RpdGxlcy5tYXAoKHQsIGkpID0+IChcbiAgICAgICAgICAgICAgPGFcbiAgICAgICAgICAgICAgICBrZXk9e2l9XG4gICAgICAgICAgICAgICAgaHJlZj17c2x1Z3NbaV19XG4gICAgICAgICAgICAgICAgY3NzPXtjc3NgXG4gICAgICAgICAgICAgICAgICBjb2xvcjogaW5oZXJpdDtcbiAgICAgICAgICAgICAgICAgIG1hcmdpbjogMC4zZW0gMDtcbiAgICAgICAgICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgICAgICAgICAgICAgICY6aG92ZXIge1xuICAgICAgICAgICAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBgfVxuICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAge3R9XG4gICAgICAgICAgICAgIDwvYT5cbiAgICAgICAgICAgICkpfVxuICAgICAgICAgIDwvU2lkZUJhcj5cbiAgICAgICAgPC9hc2lkZT5cbiAgICAgICAgPGhlYWRlclxuICAgICAgICAgIGNzcz17Y3NzYFxuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgICAgICAgIGdyaWQtYXJlYTogaGVhZDtcbiAgICAgICAgICAgIGZvbnQtZmFtaWx5OiBMYXRvO1xuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMS42MWVtO1xuICAgICAgICAgICAgcGFkZGluZzogMWVtIDA7XG4gICAgICAgICAgICBsaW5lLWhlaWdodDogMS41O1xuICAgICAgICAgIGB9XG4gICAgICAgID5cbiAgICAgICAgICB7cG9zdC50aXRsZX1cbiAgICAgICAgPC9oZWFkZXI+XG4gICAgICAgIDxhcnRpY2xlIGNzcz17YXJ0aWNsZUNzc30+e21kUmVhY3R9PC9hcnRpY2xlPlxuICAgICAgICA8YXNpZGVcbiAgICAgICAgICBjc3M9e2Nzc2BcbiAgICAgICAgICAgIGdyaWQtYXJlYTogcmlnaHQ7XG4gICAgICAgICAgYH1cbiAgICAgICAgPjwvYXNpZGU+XG4gICAgICA8L21haW4+XG4gICAgPC8+XG4gICk7XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRTdGF0aWNQcm9wcyh7IHBhcmFtcyB9KSB7XG4gIGNvbnN0IHBvc3QgPSBnZXRQb3N0QnlTbHVnKHBhcmFtcy5zbHVnLCBbXCJ0aXRsZVwiLCBcInNsdWdcIiwgXCJjb250ZW50XCJdKTtcbiAgY29uc3QgY29udGVudCA9IGF3YWl0IG1hcmtkb3duVG9IdG1sKHBvc3QuY29udGVudCB8fCBcIlwiKTtcblxuICBjb25zdCBwb3N0cyA9IGdldEFsbFBvc3RzKFtcInRpdGxlXCIsIFwic2x1Z1wiXSk7XG4gIHJldHVybiB7XG4gICAgcHJvcHM6IHtcbiAgICAgIHRpdGxlczogcG9zdHMubWFwKChwKSA9PiBwLnRpdGxlKSxcbiAgICAgIHNsdWdzOiBwb3N0cy5tYXAoKHApID0+IHAuc2x1ZyksXG4gICAgICBwb3N0OiB7XG4gICAgICAgIC4uLnBvc3QsXG4gICAgICAgIGNvbnRlbnQsXG4gICAgICB9LFxuICAgIH0sXG4gIH07XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRTdGF0aWNQYXRocygpIHtcbiAgY29uc3QgcG9zdHMgPSBnZXRBbGxQb3N0cyhbXCJzbHVnXCJdKTtcblxuICByZXR1cm4ge1xuICAgIHBhdGhzOiBwb3N0cy5tYXAoKHBvc3QpID0+IHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHBhcmFtczoge1xuICAgICAgICAgIHNsdWc6IHBvc3Quc2x1ZyxcbiAgICAgICAgfSxcbiAgICAgIH07XG4gICAgfSksXG4gICAgZmFsbGJhY2s6IGZhbHNlLFxuICB9O1xufVxuIl19 */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n};\n\nfunction Post(_ref6) {\n  _s();\n\n  var _this = this;\n\n  var post = _ref6.post,\n      titles = _ref6.titles,\n      slugs = _ref6.slugs;\n  var router = Object(next_router__WEBPACK_IMPORTED_MODULE_1__[\"useRouter\"])();\n\n  if (!router.isFallback && !(post !== null && post !== void 0 && post.slug)) {\n    return Object(_emotion_react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(next_error__WEBPACK_IMPORTED_MODULE_2___default.a, {\n      statusCode: 404\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 12\n    }, this);\n  }\n\n  var mdReact = rehypeProcessor.processSync(post.content).result;\n  return Object(_emotion_react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(_emotion_react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"Fragment\"], {\n    children: [Object(_emotion_react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(next_head__WEBPACK_IMPORTED_MODULE_3___default.a, {\n      children: Object(_emotion_react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"title\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), Object(_emotion_react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"main\", {\n      css: _ref5,\n      children: [Object(_emotion_react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"aside\", {\n        css: _ref4,\n        children: Object(_emotion_react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(_components_sidebar__WEBPACK_IMPORTED_MODULE_12__[\"default\"], {\n          children: titles.map(function (t, i) {\n            return Object(_emotion_react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"a\", {\n              href: slugs[i],\n              css: _ref3,\n              children: t\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), Object(_emotion_react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"header\", {\n        css: _ref2,\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), Object(_emotion_react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"article\", {\n        css: articleCss,\n        children: mdReact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), Object(_emotion_react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"aside\", {\n        css: _ref\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Post, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [next_router__WEBPACK_IMPORTED_MODULE_1__[\"useRouter\"]];\n});\n\n_c = Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node_modules/next/dist/compiled/webpack/harmony-module.js */ \"./node_modules/next/dist/compiled/webpack/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./pages/posts/[slug].js\n");

/***/ })

})